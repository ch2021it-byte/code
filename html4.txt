<!DOCTYPE html>
<html lang="lo">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ລະບົບແຈ້ງເຕືອນສະຕັອກສິນຄ້າ</title>
    <style>

.badge-items {
    background: #f44336;
    color: white;
}

.badge-price-study {
    background: #4caf50;
    color: white;
}

/* ⭐ Badge ใหม่สำหรับราคาจากตารางหลัก */
.badge-main-table {
    background: #2196f3;
    color: white;
}


   /* สไตล์สำหรับแสดงจำนวนรายการใน Order List */
.order-option-item {
    padding: 15px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.2s;
    background: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.order-option-item:hover {
    border-color: #667eea;
    background: #f0f4ff;
    transform: translateX(5px);
}

.order-display-text {
    font-size: 1.05rem;
    font-weight: bold;
    color: #333;
    flex: 1;
}

.order-item-count {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 5px 12px;
    border-radius: 15px;
    font-size: 0.9rem;
    font-weight: bold;
    margin-left: 10px;
} 

      /* Phone Dropdown Styles */
.phone-dropdown-item {
    padding: 12px;
    cursor: pointer;
    border-bottom: 1px solid #f0f0f0;
    transition: background 0.2s;
}

.phone-dropdown-item:hover {
    background: #e3f2fd !important;
}

.phone-dropdown-item:last-child {
    border-bottom: none;
}

/* Column Selection Modal Styles */
.column-checkbox-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.column-checkbox-item {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px;
    background: #f8f9fa;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 1rem;
}

.column-checkbox-item:hover {
    background: #e3f2fd;
    border-color: #4facfe;
}

.column-checkbox-item input[type="checkbox"] {
    width: 20px;
    height: 20px;
    cursor: pointer;
}

.column-checkbox-item span {
    flex: 1;
    font-weight: 500;
}


/* Saving Animation Styles */
.saving-animation-content {
    background: white;
    padding: 50px;
    border-radius: 20px;
    text-align: center;
    box-shadow: 0 10px 40px rgba(0,0,0,0.3);
    min-width: 300px;
}

.saving-spinner {
    width: 80px;
    height: 80px;
    border: 6px solid #f3f3f3;
    border-top: 6px solid #4facfe;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 25px;
}

.saving-text {
    font-size: 1.3rem;
    font-weight: bold;
    color: #4facfe;
    margin-bottom: 10px;
}

.saving-subtext {
    font-size: 1rem;
    color: #999;
}

.success-checkmark {
    font-size: 4rem;
    color: #4caf50;
    animation: scaleIn 0.5s ease-out;
}

@keyframes scaleIn {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.fade-out {
    animation: fadeOut 0.3s ease-out;
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

/* ปรับปรุงสไตล์ปุ่มใน Modal */
.btn-confirm-stores {
    background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
    transition: all 0.3s;
}

.btn-confirm-stores:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(76, 175, 80, 0.4);
}




/* Loading Animation สำหรับดึงใบสั่งซื้อ */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.7);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 99999;
}

.loading-overlay.show {
    display: flex;
}

.loading-content {
    background: white;
    padding: 40px;
    border-radius: 20px;
    text-align: center;
    box-shadow: 0 10px 40px rgba(0,0,0,0.3);
}

.loading-spinner {
    width: 60px;
    height: 60px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #667eea;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 20px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.loading-text {
    font-size: 1.2rem;
    font-weight: bold;
    color: #667eea;
    margin-top: 15px;
}

.loading-subtext {
    font-size: 0.9rem;
    color: #999;
    margin-top: 10px;
}


/* สไตล์สำหรับ Modal เลือกใบสั่งซื้อ */
.order-option-item {
    padding: 15px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.2s;
    background: white;
}

.order-option-item:hover {
    border-color: #667eea;
    background: #f0f4ff;
    transform: translateX(5px);
}

.order-display-text {
    font-size: 1.05rem;
    font-weight: bold;
    color: #333;
}


/* ตัวเลือกโหมดข้อมูล (ใกล้หมด / ทั้งหมด) - บังคับให้เรียงแนวนอน */
.data-mode-options {
    display: flex !important;
    flex-direction: row !important; /* ⭐ บังคับให้เป็นแนวนอน */
    gap: 15px;
    margin-bottom: 20px;
    padding: 15px;
    background: linear-gradient(135deg, #fff5f5 0%, #f0fff4 100%);
    border-radius: 10px;
    border: 2px solid #e0e0e0;
    align-items: stretch; /* ⭐ เพิ่มให้ปุ่มสูงเท่ากัน */
}

.data-mode-btn {
    flex: 1 1 50%; /* ⭐ ให้แต่ละปุ่มกว้าง 50% */
    padding: 15px 20px; /* ⭐ เพิ่ม padding */
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    background: white;
    cursor: pointer;
    font-size: 1.05rem; /* ⭐ เพิ่มขนาดตัวอักษร */
    font-weight: bold;
    transition: all 0.3s;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    white-space: nowrap; /* ⭐ ไม่ให้ตัวอักษรตัดบรรทัด */
}

.data-mode-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.data-mode-btn.active.mode-low-stock {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    color: white;
    border-color: #ff6b6b;
}

.data-mode-btn.active.mode-all-items {
    background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
    color: white;
    border-color: #4caf50;
}

/* Responsive สำหรับมือถือ */
@media (max-width: 768px) {
    .data-mode-options {
        flex-direction: column !important; /* กลับมาเป็นแนวตั้งบนมือถือ */
        gap: 10px;
    }
    
    .data-mode-btn {
        flex: 1 1 100%;
        width: 100%;
    }
}

/* สีไล่โทนสำหรับสินค้าในกลุ่มเดียวกัน */
.product-item.color-1 { background: #fff3cd !important; }
.product-item.color-2 { background: #ffe4b5 !important; }
.product-item.color-3 { background: #e3f2fd !important; }
.product-item.color-4 { background: #c8e6c9 !important; }
.product-item.color-5 { background: #e1bee7 !important; }
.product-item.color-6 { background: #ffccbc !important; }

.selectable-item.color-1 { background: #fff3cd !important; }
.selectable-item.color-2 { background: #ffe4b5 !important; }
.selectable-item.color-3 { background: #e3f2fd !important; }
.selectable-item.color-4 { background: #c8e6c9 !important; }
.selectable-item.color-5 { background: #e1bee7 !important; }
.selectable-item.color-6 { background: #ffccbc !important; }

/* รายละเอียดสินค้า */
.product-stock-detail {
    font-size: 0.85rem;
    color: #666;
    margin-top: 5px;
    line-height: 1.4;
}

.item-details-extended {
    font-size: 0.85rem;
    color: #666;
    line-height: 1.5;
}




     * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Noto Sans Lao', Arial, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .header {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        padding: 30px;
        text-align: center;
    }

    .header h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .data-status {
        margin-top: 20px;
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .status-indicator {
        display: flex;
        align-items: center;
        gap: 8px;
        background: rgba(255,255,255,0.2);
        padding: 8px 15px;
        border-radius: 20px;
    }

    .status-icon {
        width: 12px;
        height: 12px;
        border-radius: 50%;
    }

    .status-loading { background: #ffa726; animation: pulse 2s infinite; }
    .status-success { background: #4caf50; }
    .status-error { background: #f44336; }

    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }

    .main-content {
        padding: 30px;
    }

    .loading-section {
        text-align: center;
        padding: 40px;
    }

    .loading-icon {
        width: 60px;
        height: 60px;
        border: 4px solid #e3f2fd;
        border-top: 4px solid #4facfe;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto 20px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .low-stock-alert-btn {
        position: fixed;
        top: 20px;
        left: 20px;
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 50px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
        z-index: 999;
        display: none;
        align-items: center;
        gap: 8px;
        animation: lowStockPulse 1.5s infinite;
    }

    .low-stock-alert-btn.show {
        display: flex;
    }

    @keyframes lowStockPulse {
        0%, 100% {
            transform: scale(1);
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        }
        50% {
            transform: scale(1.15);
            background: linear-gradient(135deg, #ff4757 0%, #ff3838 100%);
        }
    }

    .stock-alert-badge {
        background: white;
        color: #ff4757;
        border-radius: 12px;
        padding: 4px 10px;
        font-size: 0.9rem;
        font-weight: bold;
    }

    .low-stock-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        padding: 20px;
    }

    .low-stock-modal.show {
        display: flex;
    }

    .low-stock-modal-content {
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 900px;
        width: 100%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .low-stock-modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 3px solid #f0f0f0;
    }

    .low-stock-modal-title {
        font-size: 2rem;
        font-weight: bold;
        color: #ff6b6b;
    }

    .stock-close-btn {
        background: #f0f0f0;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 1.5rem;
    }

    .zone-card {
        background: #f8f9fa;
        border: 3px solid #e1e5e9;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 15px;
        cursor: pointer;
    }

    .zone-card:hover {
        border-color: #ff6b6b;
    }

    .zone-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .zone-name {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .zone-count {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        padding: 6px 15px;
        border-radius: 20px;
    }

    .zone-details {
        display: none;
        margin-top: 20px;
        padding-top: 20px;
        border-top: 2px solid #dee2e6;
    }

    .zone-details.show {
        display: block;
    }

    .product-group {
        background: white;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 15px;
        border-left: 4px solid #ff6b6b;
    }

    .product-group-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        padding-bottom: 10px;
        border-bottom: 2px solid #f0f0f0;
    }

    .product-stock-info {
        display: flex;
        gap: 15px;
    }

    .stock-alert-text {
        color: #ff6b6b;
        font-weight: bold;
    }

    .stock-remain-text {
        color: #ffa502;
        font-weight: bold;
    }

    .product-item {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 12px;
        background: #f8f9ff;
        border-radius: 10px;
        margin-bottom: 10px;
    }

    .product-icon {
        font-size: 1.5rem;
    }

    .product-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }

    .no-product-image {
        width: 60px;
        height: 60px;
        background: #f0f0f0;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: #999;
    }

    .product-info {
        flex: 1;
    }

    .product-name {
        font-size: 1.05rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .product-details {
        font-size: 0.9rem;
        color: #666;
    }

    .stock-empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

    .stock-empty-state i {
        font-size: 4rem;
        color: #4caf50;
    }

    .order-section {
        margin-top: 30px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 15px;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .order-number-display {
        font-size: 1.3rem;
        font-weight: bold;
        color: #4facfe;
    }

    .order-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .order-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: all 0.3s;
    }

    .btn-load-order {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .btn-compare-price {
        background: linear-gradient(135deg, #ffa726 0%, #fb8c00 100%);
        color: white;
    }

    .btn-compare-price:disabled {
        background: #ccc;
        cursor: not-allowed;
    }

    .order-table-wrapper {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .order-table {
        width: 100%;
        border-collapse: collapse;
    }

    .order-table thead {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
    }

    .order-table th {
        padding: 15px;
        text-align: left;
        font-weight: bold;
    }

    .order-table td {
        padding: 12px 15px;
        border-bottom: 1px solid #f0f0f0;
    }

    .order-table tbody tr {
        transition: background 0.2s;
    }

    .order-table tbody tr:hover {
        background: #f8f9ff;
    }

    .order-table-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 8px;
    }

    .no-order-img {
        width: 50px;
        height: 50px;
        background: #f0f0f0;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .order-quantity-input {
        width: 80px;
        padding: 8px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        text-align: center;
        font-size: 1rem;
    }

    .order-quantity-input:focus {
        border-color: #4facfe;
        outline: none;
    }

    .btn-delete-item {
        background: #f44336;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-delete-item:hover {
        background: #d32f2f;
    }

    .order-footer {
        padding: 20px;
        background: #f8f9fa;
        border-top: 3px solid #4facfe;
    }

    .order-total {
        text-align: right;
        font-size: 1.5rem;
        font-weight: bold;
        color: #4facfe;
        margin-bottom: 15px;
    }

    .order-submit-actions {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
    }

    .btn-save-print,
    .btn-save-whatsapp {
        padding: 15px 30px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-size: 1.1rem;
        font-weight: bold;
        color: white;
        transition: all 0.3s;
    }

    .btn-save-print {
        background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
    }

    .btn-save-whatsapp {
        background: linear-gradient(135deg, #25d366 0%, #128c7e 100%);
    }

    .btn-save-print:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.4);
    }

    .btn-save-whatsapp:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(37, 211, 102, 0.4);
    }

    .compare-section {
        margin-top: 20px;
    }

    .compare-table-container {
        margin-bottom: 20px;
        background: white;
        border-radius: 12px;
        padding: 15px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .compare-table-header {
        font-size: 1.2rem;
        font-weight: bold;
        color: #ffa726;
        margin-bottom: 10px;
        padding-bottom: 10px;
        border-bottom: 2px solid #ffa726;
    }

    .item-highlighted {
        background: #fff3cd !important;
        border-left: 4px solid #ffc107;
    }

    .item-source-badge {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 0.85rem;
        font-weight: bold;
    }

    .badge-items {
        background: #f44336;
        color: white;
    }

    .badge-price-study {
        background: #4caf50;
        color: white;
    }

    .store-selector-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10001;
        padding: 20px;
    }

    .store-selector-modal.show {
        display: flex;
    }

    .store-selector-content {
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 600px;
        width: 100%;
        max-height: 80vh;
        overflow-y: auto;
    }

    .store-selector-header {
        font-size: 1.8rem;
        font-weight: bold;
        color: #ffa726;
        margin-bottom: 20px;
    }

    .store-search-input {
        width: 100%;
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
        margin-bottom: 15px;
    }

    .store-search-input:focus {
        border-color: #ffa726;
        outline: none;
    }

    .store-list {
        max-height: 300px;
        overflow-y: auto;
        margin-bottom: 20px;
    }

    .store-item {
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .store-item:hover {
        border-color: #ffa726;
        background: #fff8e1;
    }

    .store-item.selected {
        background: #ffa726;
        color: white;
        border-color: #ffa726;
    }

    .store-checkbox {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }

    .store-selector-actions {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }

    .btn-confirm-stores,
    .btn-cancel-stores {
        padding: 12px 25px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
    }

    .btn-confirm-stores {
        background: #ffa726;
        color: white;
    }

    .btn-cancel-stores {
        background: #e0e0e0;
        color: #333;
    }

    .search-options {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
        padding: 15px;
        background: #f0f0f0;
        border-radius: 10px;
    }

    .search-option-btn {
        flex: 1;
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        background: white;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: all 0.3s;
    }

    .search-option-btn.active {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        border-color: #4facfe;
    }

    .search-input-container {
        margin-bottom: 20px;
    }

    .search-input {
        width: 100%;
        padding: 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 1.1rem;
    }

    .search-input:focus {
        border-color: #4facfe;
        outline: none;
    }

    .search-results {
        max-height: 400px;
        overflow-y: auto;
    }

    .selectable-item {
        padding: 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.3s;
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .selectable-item:hover {
        border-color: #4facfe;
        background: #f0f8ff;
    }

    .selectable-item.selected {
        background: #fff3cd;
        border-color: #ffc107;
    }

    .item-checkbox {
        width: 24px;
        height: 24px;
        cursor: pointer;
    }

    .item-image-small {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }

    .item-info-block {
        flex: 1;
    }

    .item-name-large {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .item-details-small {
        font-size: 0.9rem;
        color: #666;
    }

    .item-quantity-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .quantity-label {
        font-weight: bold;
    }

    .quantity-input {
        width: 80px;
        padding: 8px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        text-align: center;
        font-size: 1rem;
    }

    .confirm-selection-btn {
        margin-top: 20px;
        width: 100%;
        padding: 15px;
        background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 1.2rem;
        font-weight: bold;
        cursor: pointer;
    }

    .confirm-selection-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.4);
    }

    @media print {
        body * {
            visibility: hidden;
        }
        
        .print-area,
        .print-area * {
            visibility: visible;
        }
        
        .print-area {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }
        
        .order-actions,
        .order-submit-actions,
        .btn-delete-item {
            display: none !important;
        }
    }

    @media (max-width: 768px) {
        .low-stock-alert-btn {
            top: 10px;
            left: 10px;
            padding: 10px 15px;
            font-size: 0.9rem;
        }

        .product-item {
            flex-direction: column;
            text-align: center;
        }

        .order-header {
            flex-direction: column;
            gap: 15px;
        }
        
        .order-table {
            font-size: 0.9rem;
        }
        
        .order-table th,
        .order-table td {
            padding: 8px;
        }
        
        .order-submit-actions {
            flex-direction: column;
        }
        
        .btn-save-print,
        .btn-save-whatsapp {
            width: 100%;
        }
    }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🔔 ລະບົບແຈ້ງເຕືອນສະຕັອກສິນຄ້າ</h1>
            <p>ລະບົບຕິດຕາມສິນຄ້າໃກ້ໝົດອັດຕະໂນມັດ</p>
            
            <div class="data-status">
                <div class="status-indicator" id="itemsStatus">
                    <div class="status-icon status-loading"></div>
                    <span>Items: ກໍາລັງໂຫຼດ...</span>
                </div>
            </div>
        </div>

        <div class="main-content">
            <div id="loadingSection" class="loading-section">
                <div class="loading-icon"></div>
                <h3>ກໍາລັງໂຫຼດຂໍ້ມູນ...</h3>
                <p>ກະລຸນາລໍຖ້າສັກຄູ່</p>
                <div style="margin-top: 15px; color: #666;">
                    <div id="dataCount">0 ລາຍການ</div>
                </div>
            </div>

            <div id="orderSection" class="order-section" style="display: none;">
                <div class="order-header">
                    <div class="order-number-display">
                        🧾 ເລກທີໃບສັ່ງຊື້: <span id="currentOrderNumber" data-is-loaded="false">-</span>
                    </div>
                    <div class="order-actions">
                        <button class="order-btn btn-load-order" onclick="showLoadOrderModal()">
                            🔄 ດຶງໃບສັ່ງຊື້ເກົ່າ
                        </button>
                        <button class="order-btn btn-compare-price" id="comparePriceBtn" onclick="showStoreSelectorModal()" disabled>
                            ⚖️ ປຽບທຽບລາຄາ
                        </button>
                    </div>
                </div>

                <div class="order-table-wrapper">
                    <table class="order-table">
                        <thead>
                            <tr>
                                <th>ລຳດັບ</th>
                                <th>ລະຫັດ</th>
                                <th>ຮູບ</th>
                                <th>ຊື່ສິນຄ້າ</th>
                                <th>ຫົວໜ່ວຍ</th>
                                <th>ຈຳນວນ</th>
                                <th>ລາຄາ/ໜ່ວຍ</th>
                                <th>ລວມເງິນ</th>
                                <th>ລົບ</th>
                            </tr>
                        </thead>
                        <tbody id="orderTableBody">
                        </tbody>
                    </table>
                </div>

                <div class="order-footer">
                    <div class="order-total">
                        💰 ລວມທັງໝົດ: <span id="orderTotalAmount">0</span> ກີບ
                    </div>
                    <div class="order-submit-actions">
                        <button class="btn-save-print" onclick="saveAndPrint()">
                            🖨️ ບັນທຶກ + PRINT
                        </button>
                        <button class="btn-save-whatsapp" onclick="saveAndWhatsapp()">
                            📱 ບັນທຶກ + WhatsApp
                        </button>
                    </div>
                </div>

                <div id="compareSection" class="compare-section" style="display: none;">
                </div>
            </div>
        </div>
    </div>

    <script>
    let itemsData = new Map();
    let priceStudyData = new Map();
    let storeList = [];
    let phoneNumberList = []; // ⭐ เพิ่มบรรทัดนี้
     let searchDebounceTimer = null; // ⭐ เพิ่มบรรทัดนี้
    let dataLoaded = { items: false, priceStudy: false };
    let loadStartTime = Date.now();
    let lowStockData = [];
    let lowStockModal = null;
    let currentOrderNumber = '';
    let orderItems = [];
    let selectedItemsForOrder = new Set();
   
    let currentSearchMode = 'zone';
let currentDataMode = 'lowStock'; // ใหม่: โหมดข้อมูล (lowStock / allItems)
let allItemsDataCache = []; // ใหม่: เก็บข้อมูลสินค้าทั้งหมด

    window.onload = function() {
        loadAllData();
    };

  async function loadAllData() {
    await Promise.all([
        loadItemsData(),
        loadPriceStudyData(),
        loadStoreList(),
        loadPhoneNumberList()  // ⭐ เพิ่มบรรทัดนี้
    ]);
}
async function loadPhoneNumberList() {
    return new Promise((resolve) => {
        google.script.run
            .withSuccessHandler((phones) => {
                phoneNumberList = phones;
                console.log('Phone numbers loaded:', phoneNumberList.length);
                resolve();
            })
            .withFailureHandler((error) => {
                console.error('Error loading phone numbers:', error);
                resolve();
            })
            .getPhoneNumberList();
    });
}

    async function loadItemsData() {
        updateDataStatus('items', 'loading');
        
        return new Promise(function(resolve) {
            google.script.run
                .withSuccessHandler(function(data) {
                    itemsData.clear();
                    
                    if (!data || !Array.isArray(data)) {
                        console.error('Invalid data received from getItemsData');
                        updateDataStatus('items', 'error');
                        dataLoaded.items = true;
                        checkAndInitialize();
                        resolve();
                        return;
                    }
                    
                    data.forEach(function(item) {
                        if (item.columnA) {
                            itemsData.set(item.columnA.toString().trim(), item);
                        }
                    });
                    
                    updateDataStatus('items', 'success', itemsData.size);
                    dataLoaded.items = true;
                    checkAndInitialize();
                    resolve();
                })
                .withFailureHandler(function(error) {
                    console.error('Error in loadItemsData:', error);
                    updateDataStatus('items', 'error');
                    dataLoaded.items = true;
                    checkAndInitialize();
                    resolve();
                })
                .getItemsData();
        });
    }

    async function loadPriceStudyData() {
        return new Promise(function(resolve) {
            google.script.run
                .withSuccessHandler(function(data) {
                    priceStudyData.clear();
                    
                    if (!data) {
                        console.warn('getPriceStudyData returned null or undefined');
                        dataLoaded.priceStudy = true;
                        checkAndInitialize();
                        resolve();
                        return;
                    }
                    
                    if (!Array.isArray(data)) {
                        console.warn('getPriceStudyData did not return an array:', typeof data);
                        dataLoaded.priceStudy = true;
                        checkAndInitialize();
                        resolve();
                        return;
                    }
                    
                    if (data.length === 0) {
                        console.warn('getPriceStudyData returned empty array');
                        dataLoaded.priceStudy = true;
                        checkAndInitialize();
                        resolve();
                        return;
                    }
                    
                    data.forEach(function(item) {
                        if (item && item.columnB) {
                            const key = item.columnB.toString().trim();
                            if (!priceStudyData.has(key)) {
                                priceStudyData.set(key, []);
                            }
                            priceStudyData.get(key).push(item);
                        }
                    });
                    
                    console.log('Price study data loaded: ' + priceStudyData.size + ' items');
                    dataLoaded.priceStudy = true;
                    checkAndInitialize();
                    resolve();
                })
                .withFailureHandler(function(error) {
                    console.error('Error loading price study data:', error);
                    dataLoaded.priceStudy = true;
                    checkAndInitialize();
                    resolve();
                })
                .getPriceStudyData();
        });
    }

    async function loadStoreList() {
        return new Promise((resolve) => {
            google.script.run
                .withSuccessHandler((stores) => {
                    storeList = stores;
                    resolve();
                })
                .withFailureHandler((error) => {
                    console.error('Error loading store list:', error);
                    resolve();
                })
                .getStoreList();
        });
    }

    function checkAndInitialize() {
        if (dataLoaded.items && dataLoaded.priceStudy) {
            initializeUI();
        }
    }

    function updateDataStatus(type, status, count = 0) {
        const statusElement = document.getElementById(type + 'Status');
        if (!statusElement) return;
        
        const icon = statusElement.querySelector('.status-icon');
        const text = statusElement.querySelector('span');
        
        if (icon) icon.className = 'status-icon status-' + status;
        
        if (text) {
            if (status === 'success') {
                text.textContent = 'Items: ' + count.toLocaleString() + ' ລາຍການ ✓';
            } else if (status === 'error') {
                text.textContent = 'Items: ຜິດພາດ ✗';
            }
        }
    }

    function initializeUI() {
        const loadingSection = document.getElementById('loadingSection');
        const orderSection = document.getElementById('orderSection');
        
        if (loadingSection) loadingSection.style.display = 'none';
        if (orderSection) orderSection.style.display = 'block';
        
        currentOrderNumber = generateOrderNumber();
        document.getElementById('currentOrderNumber').textContent = currentOrderNumber;

        createLowStockAlertButton();
        checkLowStockAndShowAlert();
    }

    function generateOrderNumber() {
        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        
        return 'PO-' + year + month + day + '-' + hours + minutes;
    }

    function createLowStockAlertButton() {
        if (document.getElementById('lowStockAlertBtn')) return;

        const alertButton = document.createElement('button');
        alertButton.id = 'lowStockAlertBtn';
        alertButton.className = 'low-stock-alert-btn';
        alertButton.innerHTML = '🔔 ແຈ້ງເຕືອນສະຕັອກ & 🛒ສັ່ງຊື້ສິນຄ້າ <span class="stock-alert-badge" id="stockAlertBadge">0</span>';
        alertButton.onclick = showLowStockModal;
        document.body.appendChild(alertButton);

        createLowStockModal();
    }

function createLowStockModal() {
    const modal = document.createElement('div');
    modal.id = 'lowStockModal';
    modal.className = 'low-stock-modal';
    
    const content = '<div class="low-stock-modal-content">' +
        '<div class="low-stock-modal-header">' +
        '<h2 class="low-stock-modal-title">🔔 ລະບົບຄົ້ນຫາສິນຄ້າ</h2>' +
        '<button class="stock-close-btn" onclick="closeLowStockModal()">×</button>' +
        '</div>' +
        // ⭐ ส่วนนี้สำคัญ - ตรวจสอบว่ามี class="data-mode-options"
        '<div class="data-mode-options">' +
        '<button class="data-mode-btn mode-all-items active" onclick="setDataMode(\'allItems\')">📦 ສິນຄ້າທັງໝົດ</button>' +
        '<button class="data-mode-btn mode-low-stock" onclick="setDataMode(\'lowStock\')">🔴 ສິນຄ້າໃກ້ໜົດ</button>' +
        '</div>' +
        '<div class="search-options">' +
        '<button class="search-option-btn active" onclick="setSearchMode(\'zone\')">📍 ເລືອກຕາມໂຊນ</button>' +
        '<button class="search-option-btn" onclick="setSearchMode(\'scan\')">📷 ສະແກນບາໂຄດ</button>' +
        '<button class="search-option-btn" onclick="setSearchMode(\'name\')">🔍 ຄົ້ນຫາຊື່</button>' +
        '</div>' +
        '<div id="searchInputContainer" class="search-input-container" style="display: none;">' +
        '<input type="text" id="searchInput" class="search-input" placeholder="ປ້ອນບາໂຄດ ຫຼື ຊື່ສິນຄ້າ...">' +
        '</div>' +
        '<div id="lowStockContent"></div>' +
        '<button id="confirmSelectionBtn" class="confirm-selection-btn" style="display: none;" onclick="confirmItemSelection()">✅ ຢືນຢັນການເລືອກ</button>' +
        '</div>';
    
    modal.innerHTML = content;
    document.body.appendChild(modal);
    lowStockModal = modal;
    
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('input', handleSearch);
    }
}
function setSearchMode(mode) {
    currentSearchMode = mode;
    
    document.querySelectorAll('.search-option-btn').forEach(function(btn) {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');
    
    const searchContainer = document.getElementById('searchInputContainer');
    const searchInput = document.getElementById('searchInput');
    const confirmBtn = document.getElementById('confirmSelectionBtn');
    
    if (mode === 'zone') {
        searchContainer.style.display = 'none';
        confirmBtn.style.display = 'block';
        displayZoneView();
    } else {
        searchContainer.style.display = 'block';
        confirmBtn.style.display = 'block';
        searchInput.value = '';
        searchInput.placeholder = mode === 'scan' ? 'ປ້ອນບາໂຄດ...' : 'ປ້ອນຊື່ສິນຄ້າ...';
        searchInput.focus();
        document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
    }
}

 /**
 * ค้นหาสินค้า (แก้ไข: เพิ่ม Debounce + เร็วขึ้น + เพิ่มเข้าตารางอัตโนมัติ)
 */
function handleSearch(e) {
    const query = e.target.value.trim().toLowerCase();
    
    // Clear timeout เดิม
    if (searchDebounceTimer) {
        clearTimeout(searchDebounceTimer);
    }
    
    if (!query) {
        document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
        return;
    }
    
    // แสดง Loading
    document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #4facfe;">🔍 ກໍາລັງຄົ້ນຫາ...</p>';
    
    // Debounce: รอ 300ms ก่อนค้นหา
    searchDebounceTimer = setTimeout(function() {
        performSearch(query);
    }, 300);
}

/**
 * ทำการค้นหาจริง (ฟังก์ชันใหม่)
 */
function performSearch(query) {
    const results = [];
    const seenBarcodeBox = new Set();
    const sourceData = currentDataMode === 'lowStock' ? itemsData : itemsData;
    
    // ค้นหาแบบเร็ว: Loop เดียว
    sourceData.forEach(function(item, barcode) {
        const stockRemaining = parseFloat(item.columnF) || 0;
        const reorderPoint = parseFloat(item.columnD) || 0;
        
        const passStockCheck = currentDataMode === 'allItems' || 
                              (stockRemaining < reorderPoint && reorderPoint > 0);
        
        if (!passStockCheck) return;
        
        let matchFound = false;
        
        if (currentSearchMode === 'scan') {
            matchFound = barcode.toLowerCase().includes(query);
        } else if (currentSearchMode === 'name') {
            const itemName = (item.columnB || '').toLowerCase();
            matchFound = itemName.includes(query);
        }
        
        if (matchFound) {
            const barcodeBox = item.columnJ || barcode;
            
            // ถ้ายังไม่เคยเพิ่มกลุ่มนี้
            if (!seenBarcodeBox.has(barcodeBox)) {
                seenBarcodeBox.add(barcodeBox);
                
                // ดึงสินค้าทั้งหมดในกลุ่มเดียวกัน
                sourceData.forEach(function(relatedItem, relatedBarcode) {
                    const relatedBarcodeBox = relatedItem.columnJ || relatedBarcode;
                    
                    if (relatedBarcodeBox === barcodeBox) {
                        const relatedStock = parseFloat(relatedItem.columnF) || 0;
                        const relatedReorder = parseFloat(relatedItem.columnD) || 0;
                        
                        const relatedPassCheck = currentDataMode === 'allItems' || 
                                                (relatedStock < relatedReorder && relatedReorder > 0);
                        
                        if (relatedPassCheck) {
                            results.push({
                                barcode: relatedBarcode,
                                barcodeBox: relatedBarcodeBox,
                                itemName: relatedItem.columnB || 'ບໍ່ມີຊື່',
                                reorderPoint: relatedReorder,
                                stockRemaining: relatedStock,
                                unit: relatedItem.columnH || 'ຊິ້ນ',
                                quantityPerUnit: parseFloat(relatedItem.columnI) || 1,
                                image: relatedItem.columnK || '',
                                zone: relatedItem.columnM || 'ບໍ່ລະບຸໂຊນ',
                                price: parseFloat(relatedItem.columnN) || 0
                            });
                        }
                    }
                });
            }
        }
    });
    
    // แสดงผลลัพธ์
    displaySearchResultsGrouped(results);
    
    // ⭐ สำหรับโหมดสแกน: ถ้าพบเพียง 1 กลุ่ม → เพิ่มเข้าตารางอัตโนมัติ
    if (currentSearchMode === 'scan' && results.length > 0) {
        const uniqueGroups = new Set(results.map(item => item.barcodeBox));
        
        if (uniqueGroups.size === 1) {
            // พบเพียง 1 กลุ่ม → เพิ่มทันที
            autoAddSearchResultsToOrder(results);
            
            // ล้างช่องค้นหา
            document.getElementById('searchInput').value = '';
            
            // แสดงข้อความสำเร็จ
            document.getElementById('lowStockContent').innerHTML = 
                '<p style="text-align: center; color: #4caf50; font-size: 1.2rem; padding: 30px;">' +
                '✅ ເພີ່ມ ' + results.length + ' ລາຍການສຳເລັດ!<br>' +
                '<span style="font-size: 0.9rem; color: #666;">ສະແກນຕໍ່ໄດ້ເລີຍ</span>' +
                '</p>';
            
            // ล้างข้อความหลัง 1.5 วินาที
            setTimeout(function() {
                document.getElementById('lowStockContent').innerHTML = 
                    '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
            }, 1500);
        }
    }
}

/**
 * เพิ่มสินค้าจากผลค้นหาเข้าตารางอัตโนมัติ (ฟังก์ชันใหม่)
 */
function autoAddSearchResultsToOrder(results) {
    let addedCount = 0;
    
    results.forEach(function(item) {
        // ตรวจสอบว่ายังไม่มีในตารางหลัก
        const isInOrder = orderItems.some(function(orderItem) {
            return orderItem.barcode === item.barcode;
        });
        
        if (!isInOrder) {
            const orderItem = {
                barcode: item.barcode,
                itemName: item.itemName,
                unit: item.unit,
                quantity: 1,
                price: item.price,
                image: item.image,
                total: item.price
            };
            
            orderItems.push(orderItem);
            addedCount++;
        }
    });
    
    // อัพเดทตารางหลัก
    if (addedCount > 0) {
        updateOrderTable();
    }
}

    function displaySearchResults(results) {
        const content = document.getElementById('lowStockContent');
        
        if (results.length === 0) {
            content.innerHTML = '<p style="text-align: center; color: #999;">ບໍ່ພົບຂໍ້ມູນ</p>';
            return;
        }
        
        const uniqueResults = [];
        const seenBarcodes = new Set();
        
        results.forEach(function(item) {
            if (!seenBarcodes.has(item.barcode)) {
                seenBarcodes.add(item.barcode);
                uniqueResults.push(item);
            }
        });
        
        let html = '<div class="search-results">';
        
        uniqueResults.forEach(function(item) {
            const isSelected = selectedItemsForOrder.has(item.barcode);
            const quantity = isSelected ? getItemQuantityFromOrder(item.barcode) : 1;
            
            html += '<div class="selectable-item ' + (isSelected ? 'selected' : '') + '" data-barcode="' + item.barcode + '" onclick="handleItemCardClick(event, \'' + item.barcode + '\')">';
            html += '<input type="checkbox" class="item-checkbox" ' + (isSelected ? 'checked' : '') + ' onclick="event.stopPropagation(); toggleItemSelection(\'' + item.barcode + '\')">';
            
            if (item.image) {
                html += '<img src="' + item.image + '" class="item-image-small">';
            } else {
                html += '<div class="no-product-image">📷</div>';
            }
            
            html += '<div class="item-info-block">';
            html += '<div class="item-name-large">' + item.itemName + '</div>';
            html += '<div class="item-details-small">ລະຫັດ: ' + item.barcode + ' | ໂຊນ: ' + item.zone + '</div>';
            html += '</div>';
            html += '<div class="item-quantity-container">';
            html += '<span class="quantity-label">ຈຳນວນ:</span>';
            html += '<input type="number" class="quantity-input" value="' + quantity + '" min="1" onclick="event.stopPropagation()" onchange="updateItemQuantity(\'' + item.barcode + '\', this.value)">';
            html += '</div>';
            html += '</div>';
        });
        
        html += '</div>';
        content.innerHTML = html;
    }

    function handleItemCardClick(event, barcode) {
        if (event.target.classList.contains('quantity-input') || 
            event.target.classList.contains('item-checkbox')) {
            return;
        }
        
        toggleItemSelection(barcode);
    }

function displayZoneView() {
    const dataSource = currentDataMode === 'lowStock' ? lowStockData : allItemsDataCache;
    
    if (currentDataMode === 'allItems' && Object.keys(allItemsDataCache).length === 0) {
        loadAllItemsData();
    }
    
    const content = document.getElementById('lowStockContent');
    
    if (!dataSource || Object.keys(dataSource).length === 0) {
        if (currentDataMode === 'lowStock') {
            content.innerHTML = '<div class="stock-empty-state"><i>✅</i><h3>ບໍ່ມີສິນຄ້າໃກ້ໜົດສະຕັອກ</h3></div>';
        } else {
            content.innerHTML = '<div class="stock-empty-state"><i>📦</i><h3>ບໍ່ມີຂໍ້ມູນສິນຄ້າ</h3></div>';
        }
        return;
    }

    const sortedZones = Object.entries(dataSource).sort(function(a, b) {
        return a[0].localeCompare(b[0]);
    });

    let html = '';
    sortedZones.forEach(function(zoneEntry) {
        const zoneName = zoneEntry[0];
        const zoneData = zoneEntry[1];
        const productCount = Object.keys(zoneData.products).length;
        const zoneId = 'zone_' + zoneName.replace(/\W/g, '');

        html += '<div class="zone-card" onclick="toggleZoneDetails(\'' + zoneId + '\')">';
        html += '<div class="zone-card-header">';
        html += '<div class="zone-name">📍 ໂຊນ: ' + zoneName + '</div>';
        html += '<div class="zone-count">' + productCount + ' ກຸ່ມສິນຄ້າ</div>';
        html += '</div>';
        html += '<div id="' + zoneId + '" class="zone-details">';
        html += generateZoneDetailsHTMLEnhanced(zoneData);
        html += '</div>';
        html += '</div>';
    });

    content.innerHTML = html;
}

   

    function toggleItemSelection(barcode) {
        const item = itemsData.get(barcode);
        if (!item) return;
        
        if (selectedItemsForOrder.has(barcode)) {
            selectedItemsForOrder.delete(barcode);
        } else {
            selectedItemsForOrder.add(barcode);
        }
        
        const elements = document.querySelectorAll('[data-barcode="' + barcode + '"]');
        elements.forEach(function(el) {
            const checkbox = el.querySelector('.item-checkbox');
            const isSelected = selectedItemsForOrder.has(barcode);
            
            if (checkbox) {
                checkbox.checked = isSelected;
            }
            
            if (isSelected) {
                el.classList.add('selected');
            } else {
                el.classList.remove('selected');
            }
        });
    }

    function updateItemQuantity(barcode, quantity) {
        const qty = parseInt(quantity) || 1;
        
        if (!selectedItemsForOrder.has(barcode)) {
            selectedItemsForOrder.add(barcode);
        }
        
        const existingIndex = orderItems.findIndex(function(item) {
            return item.barcode === barcode;
        });
        if (existingIndex >= 0) {
            orderItems[existingIndex].quantity = qty;
        }
    }

    function getItemQuantityFromOrder(barcode) {
        const item = orderItems.find(function(i) {
            return i.barcode === barcode;
        });
        return item ? item.quantity : 1;
    }

  /**
 * ยืนยันการเลือกสินค้า (แก้ไข: ไม่ปิด Modal)
 */
function confirmItemSelection() {
    if (selectedItemsForOrder.size === 0) {
        alert('ກະລຸນາເລືອກສິນຄ້າກ່ອນ');
        return;
    }
    
    let addedCount = 0;
    
    selectedItemsForOrder.forEach(function(barcode) {
        const item = itemsData.get(barcode);
        if (!item) return;
        
        const existingIndex = orderItems.findIndex(function(i) {
            return i.barcode === barcode;
        });
        
        const quantityInputs = document.querySelectorAll('[data-barcode="' + barcode + '"] .quantity-input');
        let quantity = 1;
        
        for (let i = 0; i < quantityInputs.length; i++) {
            const val = parseInt(quantityInputs[i].value);
            if (val && val > 0) {
                quantity = val;
                break;
            }
        }
        
        const orderItem = {
            barcode: barcode,
            itemName: item.columnB || 'ບໍ່ມີຊື່',
            unit: item.columnH || 'ຊິ້ນ',
            quantity: quantity,
            price: parseFloat(item.columnN) || 0,
            image: item.columnK || '',
            total: quantity * (parseFloat(item.columnN) || 0)
        };
        
        if (existingIndex >= 0) {
            orderItems[existingIndex] = orderItem;
        } else {
            orderItems.push(orderItem);
            addedCount++;
        }
    });
    
    // ล้างการเลือก
    selectedItemsForOrder.clear();
    
    // อัพเดทตารางหลัก
    updateOrderTable();
    
    // รีเฟรช Modal
    if (currentSearchMode === 'zone') {
        displayZoneView();
    } else {
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.value = '';
            document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
        }
    }
    
    // ⭐ ไม่ปิด Modal - ให้สแกนต่อได้
    // closeLowStockModal(); // ลบบรรทัดนี้
    
    // แสดงข้อความสำเร็จ
    if (addedCount > 0) {
        // แสดงแบบชั่วคราว
        const content = document.getElementById('lowStockContent');
        const originalHTML = content.innerHTML;
        
        content.innerHTML = '<p style="text-align: center; color: #4caf50; font-size: 1.2rem; padding: 30px;">✅ ເພີ່ມ ' + addedCount + ' ລາຍການສຳເລັດ!</p>';
        
        setTimeout(function() {
            if (currentSearchMode === 'zone') {
                displayZoneView();
            } else {
                content.innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
            }
        }, 1500);
    }
}

    function checkLowStockAndShowAlert() {
        if (!itemsData || itemsData.size === 0) return;

        const lowStockItems = [];

        itemsData.forEach(function(item) {
            const stockRemaining = parseFloat(item.columnF) || 0;
            const reorderPoint = parseFloat(item.columnD) || 0;

            if (stockRemaining < reorderPoint && reorderPoint > 0) {
                lowStockItems.push({
                    barcode: item.columnA || '',
                    barcodeBox: item.columnJ || '',
                    itemName: item.columnB || 'ບໍ່ມີຊື່',
                    reorderPoint: reorderPoint,
                    stockRemaining: stockRemaining,
                    unit: item.columnH || 'ຊິ້ນ',
                    quantityPerUnit: parseFloat(item.columnI) || 1,
                    image: item.columnK || '',
                    zone: item.columnM || 'ບໍ່ລະບຸໂຊນ',
                    price: parseFloat(item.columnN) || 0
                });
            }
        });

        if (lowStockItems.length > 0) {
            lowStockData = groupLowStockByZone(lowStockItems);
            
            const alertBtn = document.getElementById('lowStockAlertBtn');
            if (alertBtn) {
                alertBtn.classList.add('show');
                
                const totalItems = Object.values(lowStockData).reduce(function(sum, zone) {
                    return sum + Object.keys(zone.products).length;
                }, 0);
                
                const badge = document.getElementById('stockAlertBadge');
                if (badge) badge.textContent = totalItems;
            }
        }
    }

    function groupLowStockByZone(items) {
        const grouped = {};

        items.forEach(function(item) {
            const zone = item.zone;
            const barcodeBox = item.barcodeBox || item.barcode;

            if (!grouped[zone]) {
                grouped[zone] = { zoneName: zone, products: {} };
            }

            if (!grouped[zone].products[barcodeBox]) {
                grouped[zone].products[barcodeBox] = {
                    barcodeBox: barcodeBox,
                    reorderPoint: item.reorderPoint,
                    stockRemaining: item.stockRemaining,
                    items: []
                };
            }

            grouped[zone].products[barcodeBox].items.push(item);
        });

        return grouped;
    }

/**
 * แสดง Modal สินค้า (แก้ไข: เริ่มต้นที่โหมด "สินค้าทั้งหมด")
 */
function showLowStockModal() {
    if (!lowStockModal) return;
    
    // ⭐ เปลี่ยนค่าเริ่มต้นเป็น "สินค้าทั้งหมด"
    currentSearchMode = 'zone';
    currentDataMode = 'allItems'; // ⭐ เปลี่ยนจาก 'lowStock' เป็น 'allItems'
    
    // รีเซ็ตปุ่มค้นหา
    document.querySelectorAll('.search-option-btn').forEach(function(btn) {
        btn.classList.remove('active');
    });
    document.querySelectorAll('.search-option-btn')[0].classList.add('active');
    
    // ⭐ รีเซ็ตปุ่มโหมดข้อมูล → เลือก "สินค้าทั้งหมด"
    document.querySelectorAll('.data-mode-btn').forEach(function(btn) {
        btn.classList.remove('active');
    });
    document.querySelector('.data-mode-btn.mode-all-items').classList.add('active');
    
    // ซ่อน input และแสดงปุ่มยืนยัน
    document.getElementById('searchInputContainer').style.display = 'none';
    document.getElementById('confirmSelectionBtn').style.display = 'block';
    
    // โหลดข้อมูลสินค้าทั้งหมด
    if (Object.keys(allItemsDataCache).length === 0) {
        loadAllItemsData();
    }
    
    // แสดง View
    displayZoneView();
    lowStockModal.classList.add('show');
}
    function toggleZoneDetails(zoneId) {
        const element = document.getElementById(zoneId);
        if (element) {
            element.classList.toggle('show');
            
            if (element.classList.contains('show')) {
                setTimeout(function() {
                    element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                }, 100);
            }
        }
    }

    function closeLowStockModal() {
        if (lowStockModal) lowStockModal.classList.remove('show');
    }

    function updateOrderTable() {
        const tbody = document.getElementById('orderTableBody');
        const comparePriceBtn = document.getElementById('comparePriceBtn');
        
        if (!tbody) return;
        
        if (orderItems.length === 0) {
            tbody.innerHTML = '<tr><td colspan="9" style="text-align: center; padding: 40px; color: #999;">ຍັງບໍ່ມີລາຍການສັ່ງຊື້<br>ກົດປຸ່ມ "🔔 ແຈ້ງເຕືອນສະຕັອກ" ເພື່ອເລືອກສິນຄ້າ</td></tr>';
            comparePriceBtn.disabled = true;
            updateOrderTotal();
            return;
        }
        
        comparePriceBtn.disabled = false;
        
        let html = '';
        orderItems.forEach(function(item, index) {
            const highlightClass = selectedItemsForOrder.has(item.barcode) ? 'item-highlighted' : '';
            const imgHtml = item.image ? '<img src="' + item.image + '" class="order-table-img">' : '<div class="no-order-img">📷</div>';
            
            html += '<tr class="' + highlightClass + '">';
            html += '<td>' + (index + 1) + '</td>';
            html += '<td>' + item.barcode + '</td>';
            html += '<td>' + imgHtml + '</td>';
            html += '<td>' + item.itemName + '</td>';
            html += '<td>' + item.unit + '</td>';
            html += '<td><input type="number" class="order-quantity-input" value="' + item.quantity + '" min="1" onchange="updateOrderItemQuantity(' + index + ', this.value)"></td>';
            html += '<td>' + item.price.toLocaleString() + '</td>';
            html += '<td>' + (item.quantity * item.price).toLocaleString() + '</td>';
            html += '<td><button class="btn-delete-item" onclick="deleteOrderItem(' + index + ')">❌</button></td>';
            html += '</tr>';
        });
        
        tbody.innerHTML = html;
        updateOrderTotal();
    }

    function updateOrderItemQuantity(index, quantity) {
        const qty = parseInt(quantity) || 1;
        orderItems[index].quantity = qty;
        orderItems[index].total = qty * orderItems[index].price;
        updateOrderTable();
    }

 function deleteOrderItem(index) {
    const item = orderItems[index];
    selectedItemsForOrder.delete(item.barcode);
    orderItems.splice(index, 1);
    updateOrderTable();
    
    // ถ้า Modal เปิดอยู่ ให้รีเฟรชเพื่อแสดงสินค้าที่ลบออกกลับมา
    if (lowStockModal && lowStockModal.classList.contains('show')) {
        if (currentSearchMode === 'zone') {
            displayZoneView();
        } else {
            const searchInput = document.getElementById('searchInput');
            if (searchInput && searchInput.value.trim()) {
                handleSearch({ target: searchInput });
            }
        }
    }
}

    function updateOrderTotal() {
        const total = orderItems.reduce(function(sum, item) {
            return sum + item.total;
        }, 0);
        document.getElementById('orderTotalAmount').textContent = total.toLocaleString();
    }

    function showStoreSelectorModal() {
        if (orderItems.length === 0) {
            alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
            return;
        }
        
        const modal = document.createElement('div');
        modal.id = 'storeSelectorModal';
        modal.className = 'store-selector-modal show';
        
        modal.innerHTML = '<div class="store-selector-content">' +
            '<div class="store-selector-header">⚖️ ເລືອກຮ້ານເພື່ອປຽບທຽບລາຄາ</div>' +
            '<input type="text" id="storeSearchInput" class="store-search-input" placeholder="ຄົ້ນຫາຮ້ານ..." onkeyup="filterStores()">' +
            '<div class="store-list" id="storeListContainer">' + generateStoreListHTML() + '</div>' +
            '<div class="store-selector-actions">' +
            '<button class="btn-cancel-stores" onclick="closeStoreSelectorModal()">ຍົກເລີກ</button>' +
            '<button class="btn-confirm-stores" onclick="confirmStoreSelection()">ຢືນຢັນ</button>' +
            '</div>' +
            '</div>';
        
        document.body.appendChild(modal);
        
        modal.addEventListener('click', function(e) {
            if (e.target === modal) closeStoreSelectorModal();
        });
    }

    function generateStoreListHTML() {
        if (!storeList || storeList.length === 0) {
            return '<p style="text-align: center; color: #999;">ບໍ່ມີຂໍ້ມູນຮ້ານ</p>';
        }
        
        let html = '';
        storeList.forEach(function(store) {
            html += '<div class="store-item" onclick="toggleStoreSelection(\'' + store + '\')">';
            html += '<input type="checkbox" class="store-checkbox" value="' + store + '" onchange="event.stopPropagation(); toggleStoreSelection(\'' + store + '\')">';
            html += '<span>' + store + '</span>';
            html += '</div>';
        });
        
        return html;
    }

    function filterStores() {
        const input = document.getElementById('storeSearchInput');
        const filter = input.value.toLowerCase();
        const container = document.getElementById('storeListContainer');
        const items = container.getElementsByClassName('store-item');
        
        for (let i = 0; i < items.length; i++) {
            const text = items[i].textContent || items[i].innerText;
            if (text.toLowerCase().indexOf(filter) > -1) {
                items[i].style.display = '';
            } else {
                items[i].style.display = 'none';
            }
        }
    }

    function toggleStoreSelection(storeName) {
        const item = event.currentTarget;
        const checkbox = item.querySelector('.store-checkbox');
        
        item.classList.toggle('selected');
        checkbox.checked = !checkbox.checked;
    }

    function confirmStoreSelection() {
        const checkboxes = document.querySelectorAll('.store-checkbox:checked');
        const selectedStores = Array.from(checkboxes).map(function(cb) {
            return cb.value;
        });
        
        if (selectedStores.length === 0) {
            alert('ກະລຸນາເລືອກຮ້ານຢ່າງໜ້ອຍ 1 ຮ້ານ');
            return;
        }
        
        closeStoreSelectorModal();
        generateComparisonTables(selectedStores);
    }

    function closeStoreSelectorModal() {
        const modal = document.getElementById('storeSelectorModal');
        if (modal) modal.remove();
    }

   function generateComparisonTables(stores) {
    console.log('=== generateComparisonTables START ===');
    console.log('Selected Stores:', stores);
    
    const compareSection = document.getElementById('compareSection');
    if (!compareSection) {
        console.error('❌ compareSection not found!');
        return;
    }
    
    compareSection.style.display = 'block';
    compareSection.innerHTML = '<h3 style="color: #ffa726; margin-bottom: 20px;">📊 ຕາຕະລາງປຽບທຽບລາຄາ</h3>';
    
    console.log('Order Items:', orderItems);
    
    stores.forEach(function(storeName) {
        console.log('Generating table for store:', storeName);
        const tableHtml = generateSingleComparisonTable(storeName);
        compareSection.innerHTML += tableHtml;
    });
    
    console.log('=== generateComparisonTables END ===');
}

/**
 * สร้างตารางเปรียบเทียบราคาสำหรับร้านหนึ่ง (แก้ไข: Debug + แก้ปัญหาไม่แสดงข้อมูล)
 */
function generateSingleComparisonTable(storeName) {
    console.log('=== generateSingleComparisonTable START ===');
    console.log('Store Name:', storeName);
    console.log('Order Items Count:', orderItems.length);
    console.log('Items Data Size:', itemsData.size);
    console.log('Price Study Data Size:', priceStudyData.size);
    
    let html = '<div class="compare-table-container">' +
        '<div class="compare-table-header">🏪 ' + storeName + '</div>' +
        '<div class="order-table-wrapper">' +
        '<table class="order-table">' +
        '<thead><tr>' +
        '<th>ລຳດັບ</th><th>ລະຫັດ</th><th>ຮູບ</th><th>ຊື່ສິນຄ້າ</th>' +
        '<th>ຫົວໜ່ວຍ</th><th>ຈຳນວນ</th><th>ລາຄາ/ໜ່ວຍ</th><th>ລວມເງິນ</th><th>ແຫຼ່ງຂໍ້ມູນ</th>' +
        '</tr></thead><tbody>';
    
    let totalAmount = 0;
    let rowsAdded = 0;
    
    // ⭐ Loop ผ่าน orderItems
    for (let index = 0; index < orderItems.length; index++) {
        const orderItem = orderItems[index];
        
        console.log('--- Processing item ' + (index + 1) + ' ---');
        console.log('Barcode:', orderItem.barcode);
        
        // ⭐ ดึงข้อมูลจาก itemsData
        const mainItem = itemsData.get(orderItem.barcode);
        
        if (!mainItem) {
            console.warn('❌ Item not found in itemsData:', orderItem.barcode);
            continue; // ข้ามไปรายการถัดไป
        }
        
        console.log('✅ Found in itemsData');
        
        // ⭐ ข้อมูลพื้นฐานจากตารางหลัก
        const baseData = {
            barcode: orderItem.barcode,
            itemName: orderItem.itemName,
            unit: orderItem.unit,
            quantity: orderItem.quantity,
            image: orderItem.image,
            price: orderItem.price // ราคาจากตารางหลัก
        };
        
        console.log('Base Data:', baseData);
        
        // ⭐ ค้นหาราคาจาก priceStudyData
        const barcodeKey = orderItem.barcode.toString().trim();
        const priceStudyItems = priceStudyData.get(barcodeKey) || [];
        
        console.log('Price Study Items for ' + barcodeKey + ':', priceStudyItems.length);
        
        let matchingItem = null;
        let source = 'main-table';
        let priceSource = 'ຕາຕະລາງຫຼັກ';
        let finalPrice = baseData.price;
        
        // ⭐ ค้นหาร้านที่ตรงกัน
        for (let i = 0; i < priceStudyItems.length; i++) {
            const item = priceStudyItems[i];
            const storeInData = (item.columnF || '').toString().trim();
            const storeToFind = storeName.trim();
            
            console.log('Comparing: "' + storeInData + '" vs "' + storeToFind + '"');
            
            if (storeInData === storeToFind) {
                matchingItem = item;
                break;
            }
        }
        
        if (matchingItem) {
            console.log('✅ Found matching store in Price Study');
            finalPrice = parseFloat(matchingItem.columnH) || 0;
            source = 'price-study';
            priceSource = 'ສຶກສາລາຄາຕົ້ນທຶນ';
        } else {
            console.log('⚠️ Store not found, using main table price:', finalPrice);
        }
        
        // ⭐ คำนวณยอดรวม
        const itemTotal = baseData.quantity * finalPrice;
        totalAmount += itemTotal;
        
        console.log('Final Price:', finalPrice);
        console.log('Item Total:', itemTotal);
        
        // ⭐ สร้าง HTML สำหรับรูปภาพ
        const imgHtml = baseData.image ? 
            '<img src="' + baseData.image + '" class="order-table-img">' : 
            '<div class="no-order-img">📷</div>';
        
        // ⭐ กำหนดสี Badge
        const badgeClass = source === 'price-study' ? 'badge-price-study' : 'badge-main-table';
        const rowStyle = source === 'main-table' ? ' style="background: #e3f2fd;"' : '';
        
        // ⭐ สร้าง HTML สำหรับแถว
        html += '<tr' + rowStyle + '>';
        html += '<td>' + (index + 1) + '</td>';
        html += '<td>' + baseData.barcode + '</td>';
        html += '<td>' + imgHtml + '</td>';
        html += '<td>' + baseData.itemName + '</td>';
        html += '<td>' + baseData.unit + '</td>';
        html += '<td>' + baseData.quantity + '</td>';
        html += '<td>' + (finalPrice > 0 ? finalPrice.toLocaleString() : '-') + '</td>';
        html += '<td>' + (itemTotal > 0 ? itemTotal.toLocaleString() : '-') + '</td>';
        html += '<td><span class="item-source-badge ' + badgeClass + '">' + priceSource + '</span></td>';
        html += '</tr>';
        
        rowsAdded++;
    }
    
    console.log('Total Rows Added:', rowsAdded);
    console.log('Total Amount:', totalAmount);
    console.log('=== generateSingleComparisonTable END ===');
    
    // ⭐ ปิด table และเพิ่มยอดรวม
    html += '</tbody></table></div>' +
        '<div class="order-footer">' +
        '<div class="order-total">💰 ລວມທັງໝົດ: ' + totalAmount.toLocaleString() + ' ກີບ</div>' +
        '</div></div>';
    
    return html;
}

 function saveAndPrint() {
    if (orderItems.length === 0) {
        alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
        return;
    }
    
    // แสดง Modal เลือกซ่อนคอลัมน์ก่อน
    showColumnSelectionModal();
}
/**
 * แสดง Modal เลือกคอลัมน์ที่จะซ่อนก่อน Print
 * ฟังก์ชันใหม่
 */
function showColumnSelectionModal() {
    const modal = document.createElement('div');
    modal.id = 'columnSelectionModal';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 500px;">' +
        '<div class="store-selector-header">🖨️ ເລືອກຄໍລໍາທີ່ຕ້ອງການປິດບັງ</div>' +
        '<div style="padding: 20px;">' +
        '<p style="margin-bottom: 15px; color: #666;">ເລືອກຄໍລໍາທີ່ຕ້ອງການເຊື່ອງໃນການປຶມ:</p>' +
        '<div class="column-checkbox-list">' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="index"> <span>ລຳດັບ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="barcode"> <span>ລະຫັດສິນຄ້າ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="image"> <span>ຮູບພາບ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="itemName"> <span>ຊື່ສິນຄ້າ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="quantity"> <span>ຈຳນວນ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="price"> <span>ລາຄາ/ໜ່ວຍ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="total"> <span>ລວມເງິນ</span>' +
        '</label>' +
        '</div>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeColumnSelectionModal()">ຍົກເລີກ</button>' +
        '<button class="btn-confirm-stores" onclick="confirmColumnSelectionAndPrint()">✅ ຢືນຢັນ ແລະ ປຶມ</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeColumnSelectionModal();
    });
}
/**
 * ปิด Modal เลือกคอลัมน์
 * ฟังก์ชันใหม่
 */
function closeColumnSelectionModal() {
    const modal = document.getElementById('columnSelectionModal');
    if (modal) modal.remove();
}
/**
 * ยืนยันการเลือกคอลัมน์และเริ่ม Print
 * ฟังก์ชันใหม่
 */
function confirmColumnSelectionAndPrint() {
    // รับค่าคอลัมน์ที่เลือกจะซ่อน
    const checkboxes = document.querySelectorAll('#columnSelectionModal input[type="checkbox"]:checked');
    const hiddenColumns = [];
    
    checkboxes.forEach(function(checkbox) {
        hiddenColumns.push(checkbox.value);
    });
    
    closeColumnSelectionModal();
    
    // เรียกฟังก์ชัน Print พร้อมส่งข้อมูลคอลัมน์ที่จะซ่อน
    executePrint(hiddenColumns);
}
/**
 * ทำการ Print พร้อมซ่อนข้อมูลในคอลัมน์ตามที่เลือก (แก้ไข: ปิดหน้าต่าง + แสดง Modal ยืนยัน)
 */
function executePrint(hiddenColumns) {
    const printWindow = window.open('', '_blank');
    
    const now = new Date();
    const dateStr = now.toLocaleDateString('lo-LA');
    const timeStr = now.toLocaleTimeString('lo-LA');
    const total = orderItems.reduce(function(sum, item) {
        return sum + item.total;
    }, 0);
    
    const hideIndex = hiddenColumns.includes('index');
    const hideBarcode = hiddenColumns.includes('barcode');
    const hideImage = hiddenColumns.includes('image');
    const hideItemName = hiddenColumns.includes('itemName');
    const hideQuantity = hiddenColumns.includes('quantity');
    const hidePrice = hiddenColumns.includes('price');
    const hideTotal = hiddenColumns.includes('total');
    
    let tableHeader = '<tr>' +
        '<th style="width: 50px;">ລຳດັບ</th>' +
        '<th style="width: 120px;">ລະຫັດສິນຄ້າ</th>' +
        '<th style="width: 80px;">ຮູບ</th>' +
        '<th>ຊື່ສິນຄ້າ</th>' +
        '<th style="width: 100px;">ຈຳນວນ</th>' +
        '<th style="width: 100px;">ລາຄາ/ໜ່ວຍ</th>' +
        '<th style="width: 120px;">ລວມເງິນ</th>' +
        '</tr>';
    
    let itemsRows = '';
    orderItems.forEach(function(item, index) {
        const imgTag = item.image ? 
            '<img src="' + item.image + '" style="width: 60px; height: 60px; object-fit: cover; border-radius: 5px;">' : 
            '<div style="width: 60px; height: 60px; background: #f0f0f0; border-radius: 5px; display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">📷</div>';
        
        itemsRows += '<tr>';
        itemsRows += '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + (hideIndex ? '&nbsp;' : (index + 1)) + '</td>';
        itemsRows += '<td style="padding: 10px; border: 1px solid #ddd;">' + (hideBarcode ? '&nbsp;' : item.barcode) + '</td>';
        itemsRows += '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + (hideImage ? '&nbsp;' : imgTag) + '</td>';
        itemsRows += '<td style="padding: 10px; border: 1px solid #ddd;">' + (hideItemName ? '&nbsp;' : item.itemName) + '</td>';
        itemsRows += '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + (hideQuantity ? '&nbsp;' : (item.quantity + ' ' + item.unit)) + '</td>';
        itemsRows += '<td style="text-align: right; padding: 10px; border: 1px solid #ddd;">' + (hidePrice ? '&nbsp;' : item.price.toLocaleString()) + '</td>';
        itemsRows += '<td style="text-align: right; padding: 10px; border: 1px solid #ddd;">' + (hideTotal ? '&nbsp;' : item.total.toLocaleString()) + '</td>';
        itemsRows += '</tr>';
    });
    
    let totalRow = '<tr class="total-row">' +
        '<td colspan="6" style="text-align: right; padding: 15px;">ລວມທັງໝົດ:</td>' +
        '<td style="text-align: right; padding: 15px;">' + (hideTotal ? '&nbsp;' : (total.toLocaleString() + ' ກີບ')) + '</td>' +
        '</tr>';
    
    const printContent = '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>ໃບສັ່ງຊື້ສິນຄ້າ - ' + currentOrderNumber + '</title><style>body { font-family: "Noto Sans Lao", Arial, sans-serif; padding: 20px; }.header { text-align: center; margin-bottom: 30px; }.header h1 { color: #4facfe; margin: 0; font-size: 2rem; }.info-section { margin-bottom: 20px; }.info-section p { margin: 5px 0; font-size: 1rem; }table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }thead { background: #2c3e50 !important; color: white !important; -webkit-print-color-adjust: exact; print-color-adjust: exact; }th { padding: 12px; border: 1px solid #ddd; font-weight: bold; color: white !important; background: #2c3e50 !important; -webkit-print-color-adjust: exact; print-color-adjust: exact; }td { padding: 10px; border: 1px solid #ddd; }tbody tr:nth-child(even) { background: #f9f9f9; }.total-row { background: #f0f0f0; font-weight: bold; font-size: 1.2em; }.signature-section { margin-top: 50px; display: flex; justify-content: space-around; }.signature-box { text-align: center; }.signature-line { margin-top: 50px; border-top: 1px solid #333; padding-top: 5px; }@media print { body { padding: 10px; }thead { background: #2c3e50 !important; -webkit-print-color-adjust: exact !important; print-color-adjust: exact !important; }th { background: #2c3e50 !important; color: white !important; -webkit-print-color-adjust: exact !important; print-color-adjust: exact !important; }}</style></head><body><div class="header"><h1>🏢 ໃບສັ່ງຊື້ສິນຄ້າ</h1></div><div class="info-section"><p><strong>ເລກທີໃບສັ່ງຊື້:</strong> ' + currentOrderNumber + '</p><p><strong>ວັນທີ:</strong> ' + dateStr + ' ' + timeStr + '</p></div><table><thead>' + tableHeader + '</thead><tbody>' + itemsRows + totalRow + '</tbody></table><div class="signature-section"><div class="signature-box"><p>ລາຍເຊັນຜູ້ສັ່ງຊື້</p><div class="signature-line">_________________</div></div><div class="signature-box"><p>ລາຍເຊັນຜູ້ອະນຸມັດ</p><div class="signature-line">_________________</div></div></div><script>setTimeout(function() { window.print(); }, 500);<\/script></body></html>';
    
    printWindow.document.open();
    printWindow.document.write(printContent);
    printWindow.document.close();
    
    // รอ 2.5 วินาที แล้วปิดหน้าต่างและแสดง Modal ยืนยัน
    setTimeout(function() {
        // ปิดหน้าต่าง Print
        try {
            printWindow.close();
        } catch(e) {
            console.log('Cannot close print window:', e);
        }
        
        // แสดง Modal ยืนยันการบันทึก
        showPrintConfirmationModal();
    }, 2500);
}

function saveAndWhatsapp() {
    if (orderItems.length === 0) {
        alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
        return;
    }
    
    // แสดง Modal เลือกซ่อนคอลัมน์ก่อน (เหมือนกับ Print)
    showColumnSelectionModalForWhatsApp();
}
/**
 * แสดง Modal เลือกคอลัมน์ที่จะซ่อนก่อนส่ง WhatsApp
 * ฟังก์ชันใหม่
 */
function showColumnSelectionModalForWhatsApp() {
    const modal = document.createElement('div');
    modal.id = 'columnSelectionModalWhatsApp';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 500px;">' +
        '<div class="store-selector-header">📱 ເລືອກຄໍລໍາທີ່ຕ້ອງການປິດບັງ (WhatsApp)</div>' +
        '<div style="padding: 20px;">' +
        '<p style="margin-bottom: 15px; color: #666;">ເລືອກຄໍລໍາທີ່ຕ້ອງການເຊື່ອງໃນການສົ່ງ WhatsApp:</p>' +
        '<div class="column-checkbox-list">' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="index"> <span>ລຳດັບ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="barcode"> <span>ລະຫັດສິນຄ້າ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="image"> <span>ຮູບພາບ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="itemName"> <span>ຊື່ສິນຄ້າ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="quantity"> <span>ຈຳນວນ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="price"> <span>ລາຄາ/ໜ່ວຍ</span>' +
        '</label>' +
        '<label class="column-checkbox-item">' +
        '<input type="checkbox" value="total"> <span>ລວມເງິນ</span>' +
        '</label>' +
        '</div>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeColumnSelectionModalForWhatsApp()">ຍົກເລີກ</button>' +
        '<button class="btn-confirm-stores" onclick="confirmColumnSelectionForWhatsApp()">✅ ຢືນຢັນ ແລະ ສົ່ງ WhatsApp</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeColumnSelectionModalForWhatsApp();
    });
}
/**
 * ปิด Modal เลือกคอลัมน์สำหรับ WhatsApp
 * ฟังก์ชันใหม่
 */
function closeColumnSelectionModalForWhatsApp() {
    const modal = document.getElementById('columnSelectionModalWhatsApp');
    if (modal) modal.remove();
}
/**
 * ยืนยันการเลือกคอลัมน์และแสดง Modal กรอกเบอร์โทร
 * ฟังก์ชันใหม่
 */
function confirmColumnSelectionForWhatsApp() {
    // รับค่าคอลัมน์ที่เลือกจะซ่อน
    const checkboxes = document.querySelectorAll('#columnSelectionModalWhatsApp input[type="checkbox"]:checked');
    const hiddenColumns = [];
    
    checkboxes.forEach(function(checkbox) {
        hiddenColumns.push(checkbox.value);
    });
    
    closeColumnSelectionModalForWhatsApp();
    
    // แสดง Modal กรอกเบอร์โทร พร้อมส่งข้อมูลคอลัมน์ที่ซ่อน
    showWhatsAppPhoneModalWithColumns(hiddenColumns);
}
/**
 * แสดง Modal กรอกเบอร์โทรสำหรับ WhatsApp พร้อม Auto-Complete (แก้ไข: เพิ่ม Dropdown)
 */
function showWhatsAppPhoneModalWithColumns(hiddenColumns) {
    const modal = document.createElement('div');
    modal.id = 'whatsappPhoneModal';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 450px;">' +
        '<div class="store-selector-header">📱 ກະລຸນາໃສ່ເບີໂທລະສັບ WhatsApp</div>' +
        '<div style="margin: 20px 0; position: relative;">' +
        '<div style="display: flex; gap: 10px; align-items: center;">' +
        '<div style="background: #25d366; color: white; padding: 12px 15px; border-radius: 8px; font-size: 1.1rem; font-weight: bold;">+856</div>' +
        '<input type="tel" id="whatsappPhoneInput" class="store-search-input" placeholder="ພິມເບີ ຫຼື ຊື່ຮ້ານ..." maxlength="10" style="flex: 1; margin: 0;" autocomplete="off">' +
        '</div>' +
        '<div id="phoneDropdown" style="display: none; position: absolute; top: 100%; left: 50px; right: 0; background: white; border: 2px solid #25d366; border-radius: 8px; max-height: 200px; overflow-y: auto; z-index: 1000; margin-top: 5px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);"></div>' +
        '<div style="margin-top: 10px; font-size: 0.9rem; color: #666;">ຕົວຢ່າງ: 2055512345 (10 ຕົວເລກ)</div>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeWhatsAppPhoneModal()">ຍົກເລີກ</button>' +
        '<button id="confirmWhatsAppBtn" class="btn-confirm-stores" onclick="confirmWhatsAppSendWithPDF()" disabled>ສົ່ງ WhatsApp</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    // เก็บข้อมูลคอลัมน์ที่ซ่อนไว้
    modal.dataset.hiddenColumns = JSON.stringify(hiddenColumns);
    
    const phoneInput = document.getElementById('whatsappPhoneInput');
    const phoneDropdown = document.getElementById('phoneDropdown');
    const confirmBtn = document.getElementById('confirmWhatsAppBtn');
    
    // Focus ที่ช่องกรอกเบอร์
    setTimeout(function() {
        phoneInput.focus();
    }, 100);
    
    // ฟังก์ชันกรองและแสดง Dropdown
    function filterAndShowDropdown() {
        const query = phoneInput.value.trim().toLowerCase();
        
        // ตรวจสอบความยาวและเปิดปุ่ม
        validatePhoneNumber();
        
        if (!query) {
            phoneDropdown.style.display = 'none';
            return;
        }
        
        // กรองข้อมูล
        const filtered = phoneNumberList.filter(function(item) {
            const phoneMatch = item.phone.includes(query);
            const storeMatch = item.store.toLowerCase().includes(query);
            return phoneMatch || storeMatch;
        });
        
        if (filtered.length === 0) {
            phoneDropdown.style.display = 'none';
            return;
        }
        
        // สร้าง HTML สำหรับ Dropdown
        let dropdownHTML = '';
        filtered.forEach(function(item) {
            dropdownHTML += '<div class="phone-dropdown-item" data-phone="' + item.phone + '" style="padding: 12px; cursor: pointer; border-bottom: 1px solid #f0f0f0; transition: background 0.2s;">' +
                '<div style="font-weight: bold; color: #333;">' + item.store + '</div>' +
                '<div style="font-size: 0.9rem; color: #666;">📞 ' + item.phone + '</div>' +
                '</div>';
        });
        
        phoneDropdown.innerHTML = dropdownHTML;
        phoneDropdown.style.display = 'block';
        
        // เพิ่ม Event Listener สำหรับแต่ละรายการ
        const items = phoneDropdown.querySelectorAll('.phone-dropdown-item');
        items.forEach(function(item) {
            item.addEventListener('mouseenter', function() {
                this.style.background = '#e3f2fd';
            });
            item.addEventListener('mouseleave', function() {
                this.style.background = 'white';
            });
            item.addEventListener('click', function() {
                const selectedPhone = this.dataset.phone;
                phoneInput.value = selectedPhone;
                phoneDropdown.style.display = 'none';
                validatePhoneNumber();
                phoneInput.focus();
            });
        });
    }
    
    // ฟังก์ชัน Validate เบอร์โทร
    function validatePhoneNumber() {
        const phone = phoneInput.value.trim();
        const isValid = /^\d{10}$/.test(phone);
        
        if (isValid) {
            confirmBtn.disabled = false;
            confirmBtn.style.opacity = '1';
            confirmBtn.style.cursor = 'pointer';
            phoneInput.style.borderColor = '#25d366';
        } else {
            confirmBtn.disabled = true;
            confirmBtn.style.opacity = '0.5';
            confirmBtn.style.cursor = 'not-allowed';
            phoneInput.style.borderColor = '#e0e0e0';
        }
    }
    
    // Event Listener สำหรับ Input
    phoneInput.addEventListener('input', filterAndShowDropdown);
    
    // Event Listener สำหรับ Enter
    phoneInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !confirmBtn.disabled) {
            confirmWhatsAppSendWithPDF();
        }
    });
    
    // ปิด Dropdown เมื่อคลิกนอก Modal
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeWhatsAppPhoneModal();
        }
        if (!phoneDropdown.contains(e.target) && e.target !== phoneInput) {
            phoneDropdown.style.display = 'none';
        }
    });
}
/**
 * ยืนยันการส่ง WhatsApp พร้อมสร้าง PDF
 * ฟังก์ชันใหม่
 */
function confirmWhatsAppSendWithPDF() {
    const phoneInput = document.getElementById('whatsappPhoneInput');
    const phoneNumber = phoneInput.value.trim();
    
    if (!phoneNumber) {
        alert('ກະລຸນາໃສ່ເບີໂທລະສັບ');
        phoneInput.focus();
        return;
    }
    
    if (!/^\d+$/.test(phoneNumber)) {
        alert('ກະລຸນາໃສ່ເບີໂທລະສັບເປັນຕົວເລກເທົ່ານັ້ນ');
        phoneInput.focus();
        return;
    }
    
    if (phoneNumber.length < 8 || phoneNumber.length > 10) {
        alert('ເບີໂທລະສັບຕ້ອງມີ 8-10 ຕົວເລກ');
        phoneInput.focus();
        return;
    }
    
    // ดึงข้อมูลคอลัมน์ที่ซ่อน
    const modal = document.getElementById('whatsappPhoneModal');
    const hiddenColumns = JSON.parse(modal.dataset.hiddenColumns || '[]');
    
    closeWhatsAppPhoneModal();
    
    const fullPhoneNumber = '856' + phoneNumber;
    
    // สร้างหน้า PDF และส่ง WhatsApp
    generatePDFAndSendWhatsApp(fullPhoneNumber, hiddenColumns);
}
/**
 * สร้าง PDF, อัปโหลดไป Drive, และส่งผ่าน WhatsApp (แก้ไข: ปิด about:blank อัตโนมัติ + แสดง Modal ยืนยัน)
 */
function generatePDFAndSendWhatsApp(phoneNumber, hiddenColumns) {
    const pdfWindow = window.open('', 'pdfWindow');
    
    const now = new Date();
    const dateStr = now.toLocaleDateString('lo-LA');
    const timeStr = now.toLocaleTimeString('lo-LA');
    const total = orderItems.reduce(function(sum, item) {
        return sum + item.total;
    }, 0);
    
    // HTML สำหรับแสดงในหน้าต่าง (Loading)
    const loadingContent = '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>ກຳລັງສ້າງ PDF...</title><style>body { font-family: "Noto Sans Lao", Arial, sans-serif; padding: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; display: flex; align-items: center; justify-content: center; margin: 0; }.container { background: white; border-radius: 20px; padding: 40px; text-align: center; box-shadow: 0 20px 60px rgba(0,0,0,0.3); max-width: 600px; }.loading-spinner { width: 80px; height: 80px; border: 6px solid #f3f3f3; border-top: 6px solid #25d366; border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto 30px; }@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }.loading-text { font-size: 1.5rem; font-weight: bold; color: #25d366; margin-bottom: 15px; }.loading-subtext { font-size: 1rem; color: #666; }.success-content { display: none; }.success-icon { font-size: 5rem; margin-bottom: 20px; }.success-title { font-size: 1.8rem; font-weight: bold; color: #4caf50; margin-bottom: 15px; }.pdf-info { background: #f0f0f0; padding: 15px; border-radius: 10px; margin: 20px 0; font-size: 0.95rem; color: #333; }.whatsapp-btn { display: inline-block; padding: 15px 40px; background: linear-gradient(135deg, #25d366 0%, #128c7e 100%); color: white; text-decoration: none; border-radius: 10px; font-size: 1.2rem; font-weight: bold; margin-top: 20px; transition: all 0.3s; box-shadow: 0 4px 15px rgba(37, 211, 102, 0.4); cursor: pointer; border: none; }.whatsapp-btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(37, 211, 102, 0.6); }</style></head><body><div class="container"><div id="loadingContent"><div class="loading-spinner"></div><div class="loading-text">ກຳລັງສ້າງໄຟລ໌ PDF...</div><div class="loading-subtext">ກະລຸນາລໍຖ້າສັກຄູ່</div></div><div id="successContent" class="success-content"><div class="success-icon">✅</div><div class="success-title">ສ້າງ PDF ສຳເລັດ!</div><div class="pdf-info"><strong>ຊື່ໄຟລ໌:</strong> <span id="pdfFileName"></span><br><strong>ບ່ອນເກັບໄວ້:</strong> Google Drive</div><button id="whatsappBtn" class="whatsapp-btn">📱 ເປີດ WhatsApp Web ເພື່ອສົ່ງໄຟລ໌</button></div></div></body></html>';
    
    pdfWindow.document.open();
    pdfWindow.document.write(loadingContent);
    pdfWindow.document.close();
    
    // เตรียมข้อมูลสำหรับสร้าง PDF
    const pdfData = {
        orderNumber: currentOrderNumber,
        date: dateStr + ' ' + timeStr,
        items: orderItems.map(function(item) {
            return {
                barcode: hiddenColumns.includes('barcode') ? '' : item.barcode,
                itemName: hiddenColumns.includes('itemName') ? '' : item.itemName,
                unit: item.unit,
                quantity: hiddenColumns.includes('quantity') ? '' : item.quantity,
                price: hiddenColumns.includes('price') ? '' : item.price,
                total: hiddenColumns.includes('total') ? '' : item.total,
                image: hiddenColumns.includes('image') ? '' : item.image
            };
        }),
        total: hiddenColumns.includes('total') ? '' : total
    };
    
    // เรียก Google Apps Script เพื่ออัปโหลด PDF
    google.script.run
        .withSuccessHandler(function(result) {
            if (result.success) {
                const loadingDiv = pdfWindow.document.getElementById('loadingContent');
                const successDiv = pdfWindow.document.getElementById('successContent');
                const fileNameSpan = pdfWindow.document.getElementById('pdfFileName');
                const whatsappBtn = pdfWindow.document.getElementById('whatsappBtn');
                
                if (loadingDiv) loadingDiv.style.display = 'none';
                if (successDiv) successDiv.style.display = 'block';
                if (fileNameSpan) fileNameSpan.textContent = result.fileName;
                
                const message = '📱 ໃບສັ່ງຊື້ສິນຄ້າ\n' +
                    'ເລກທີ: ' + currentOrderNumber + '\n' +
                    'ວັນທີ: ' + dateStr + ' ' + timeStr + '\n\n' +
                    '📄 ເບິ່ງໄຟລ໌ PDF: ' + result.fileUrl;
                
                const whatsappUrl = 'https://web.whatsapp.com/send?phone=' + phoneNumber + '&text=' + encodeURIComponent(message);
                
                if (whatsappBtn) {
                    whatsappBtn.onclick = function() {
                        // เปิด WhatsApp Web ในแท็บใหม่
                        window.open(whatsappUrl, '_blank');
                        
                        // ปิดหน้าต่าง about:blank ทันที
                        setTimeout(function() {
                            pdfWindow.close();
                        }, 500);
                        
                        // แสดง Modal ยืนยันการส่งในหน้าหลัก
                        setTimeout(function() {
                            if (window.opener) {
                                window.opener.showWhatsAppConfirmationModal();
                            } else {
                                showWhatsAppConfirmationModal();
                            }
                        }, 1000);
                    };
                }
            } else {
                alert('ເກີດຂໍ້ຜິດພາດໃນການສ້າງ PDF: ' + result.error);
                pdfWindow.close();
            }
        })
        .withFailureHandler(function(error) {
            alert('ເກີດຂໍ້ຜິດພາດ: ' + error.message);
            pdfWindow.close();
        })
        .createPDFFromOrderData(pdfData);
}
/**
 * แสดง Modal ยืนยันการบันทึกหลังส่ง WhatsApp
 * ฟังก์ชันใหม่
 */
function showWhatsAppConfirmationModal() {
    const modal = document.createElement('div');
    modal.id = 'whatsappConfirmModal';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 450px;">' +
        '<div class="store-selector-header">✅ ຢືນຢັນການບັນທຶກ</div>' +
        '<div style="padding: 20px; text-align: center;">' +
        '<p style="font-size: 1.1rem; margin-bottom: 20px;">ສົ່ງ WhatsApp ສຳເລັດແລ້ວບໍ?</p>' +
        '<p style="font-size: 0.95rem; color: #666;">ກົດຢືນຢັນເພື່ອບັນທຶກຂໍ້ມູນລົງໃນລະບົບ</p>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeWhatsAppConfirmationModal()">ຍົກເລີກ</button>' +
        '<button class="btn-confirm-stores" onclick="confirmWhatsAppSave()">✅ ຢືນຢັນບັນທຶກ</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeWhatsAppConfirmationModal();
    });
}
/**
 * ปิด Modal ยืนยันการบันทึก WhatsApp
 * ฟังก์ชันใหม่
 */
function closeWhatsAppConfirmationModal() {
    const modal = document.getElementById('whatsappConfirmModal');
    if (modal) modal.remove();
}
/**
 * ยืนยันการบันทึกหลังส่ง WhatsApp
 * ฟังก์ชันใหม่
 */
function confirmWhatsAppSave() {
    closeWhatsAppConfirmationModal();
    
    showSavingAnimation();
    
    const isLoadedOrder = document.getElementById('currentOrderNumber').dataset.isLoaded === 'true';
    
    const orderData = {
        orderNumber: currentOrderNumber,
        items: orderItems,
        method: 'WHATSAPP',
        isUpdate: isLoadedOrder
    };
    
    google.script.run
        .withSuccessHandler(function(result) {
            if (result.success) {
                showSuccessAnimation();
                
                setTimeout(function() {
                    hideSavingAnimation();
                    
                    orderItems = [];
                    selectedItemsForOrder.clear();
                    updateOrderTable();
                    
                    const compareSection = document.getElementById('compareSection');
                    if (compareSection) compareSection.style.display = 'none';
                    
                    currentOrderNumber = generateOrderNumber();
                    const orderNumberElement = document.getElementById('currentOrderNumber');
                    orderNumberElement.textContent = currentOrderNumber;
                    orderNumberElement.dataset.isLoaded = 'false';
                }, 2000);
            } else {
                hideSavingAnimation();
                alert('ເກີດຂໍ້ຜິດພາດ: ' + result.error);
            }
        })
        .withFailureHandler(function(error) {
            hideSavingAnimation();
            alert('ເກີດຂໍ້ຜິດພາດໃນການບັນທຶກ: ' + error.message);
        })
        .saveOrder(orderData);
}

/**
 * แสดง Modal กรอกเบอร์โทรสำหรับ WhatsApp
 * ฟังก์ชันใหม่
 */
function showWhatsAppPhoneModal() {
    const modal = document.createElement('div');
    modal.id = 'whatsappPhoneModal';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 450px;">' +
        '<div class="store-selector-header">📱 ກະລຸນາໃສ່ເບີໂທລະສັບ WhatsApp</div>' +
        '<div style="margin: 20px 0;">' +
        '<div style="display: flex; gap: 10px; align-items: center;">' +
        '<div style="background: #25d366; color: white; padding: 12px 15px; border-radius: 8px; font-size: 1.1rem; font-weight: bold;">+856</div>' +
        '<input type="tel" id="whatsappPhoneInput" class="store-search-input" placeholder="20 XXXX XXXX" maxlength="10" style="flex: 1; margin: 0;">' +
        '</div>' +
        '<div style="margin-top: 10px; font-size: 0.9rem; color: #666;">ຕົວຢ່າງ: 2055512345 (ບໍ່ຕ້ອງໃສ່ 856)</div>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeWhatsAppPhoneModal()">ຍົກເລີກ</button>' +
        '<button class="btn-confirm-stores" onclick="confirmWhatsAppSend()">ສົ່ງ WhatsApp</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    // Focus ที่ช่องกรอกเบอร์
    setTimeout(function() {
        document.getElementById('whatsappPhoneInput').focus();
    }, 100);
    
    // รองรับการกด Enter
    document.getElementById('whatsappPhoneInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            confirmWhatsAppSend();
        }
    });
    
    // ปิด Modal เมื่อคลิกนอก content
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeWhatsAppPhoneModal();
    });
}
/**
 * ปิด Modal กรอกเบอร์ WhatsApp
 * ฟังก์ชันใหม่
 */
function closeWhatsAppPhoneModal() {
    const modal = document.getElementById('whatsappPhoneModal');
    if (modal) modal.remove();
}
/**
 * ยืนยันการส่ง WhatsApp
 * ฟังก์ชันใหม่
 */
function confirmWhatsAppSend() {
    const phoneInput = document.getElementById('whatsappPhoneInput');
    const phoneNumber = phoneInput.value.trim();
    
    // ตรวจสอบเบอร์โทร
    if (!phoneNumber) {
        alert('ກະລຸນາໃສ່ເບີໂທລະສັບ');
        phoneInput.focus();
        return;
    }
    
    // ตรวจสอบว่าเป็นตัวเลขเท่านั้น
    if (!/^\d+$/.test(phoneNumber)) {
        alert('ກະລຸນາໃສ່ເບີໂທລະສັບເປັນຕົວເລກເທົ່ານັ້ນ');
        phoneInput.focus();
        return;
    }
    
    // ตรวจสอบความยาว (8-10 หลัก)
    if (phoneNumber.length < 8 || phoneNumber.length > 10) {
        alert('ເບີໂທລະສັບຕ້ອງມີ 8-10 ຕົວເລກ');
        phoneInput.focus();
        return;
    }
    
    // ปิด Modal
    closeWhatsAppPhoneModal();
    
    // สร้างเบอร์เต็ม: 856 + เบอร์ที่กรอก
    const fullPhoneNumber = '856' + phoneNumber;
    
    // สร้างข้อความ
    const message = generateWhatsAppMessage();
    const whatsappUrl = 'https://wa.me/' + fullPhoneNumber + '?text=' + encodeURIComponent(message);
    
    // เปิด WhatsApp
    window.open(whatsappUrl, '_blank');
    
    // ถามว่าจะบันทึกหรือไม่
    setTimeout(function() {
        if (confirm('ສົ່ງ WhatsApp ສຳເລັດແລ້ວບໍ? ກົດຢືນຢັນເພື່ອບັນທຶກຂໍ້ມູນ')) {
            saveOrderToSheet('WHATSAPP');
        }
    }, 2000);
}

    function generateWhatsAppMessage() {
        const total = orderItems.reduce(function(sum, item) {
            return sum + item.total;
        }, 0);
        const now = new Date();
        const dateStr = now.toLocaleDateString('lo-LA');
        
        let message = '🧾 *ໃບສັ່ງຊື້ສິນຄ້າ*\n';
        message += 'ເລກທີ: ' + currentOrderNumber + '\n';
        message += 'ວັນທີ: ' + dateStr + '\n\n';
        message += '━━━━━━━━━━━━━━━━━━\n';
        
        orderItems.forEach(function(item, index) {
            message += (index + 1) + '️⃣ ' + item.itemName + '\n';
            message += '   • ລະຫັດ: ' + item.barcode + '\n';
            message += '   • ຈຳນວນ: ' + item.quantity + ' ' + item.unit + '\n';
            message += '   • ລາຄາ: ' + item.total.toLocaleString() + ' ກີບ\n\n';
        });
        
        message += '━━━━━━━━━━━━━━━━━━\n';
        message += '💰 *ລວມທັງໝົດ: ' + total.toLocaleString() + ' ກີບ*';
        
        return message;
    }

  function saveOrderToSheet(method) {
    if (orderItems.length === 0) {
        alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
        return;
    }
    
    // แสดง Saving Animation
    showSavingAnimation();
    
    const isLoadedOrder = document.getElementById('currentOrderNumber').dataset.isLoaded === 'true';
    
    const orderData = {
        orderNumber: currentOrderNumber,
        items: orderItems,
        method: method,
        isUpdate: isLoadedOrder
    };
    
    google.script.run
        .withSuccessHandler(function(result) {
            if (result.success) {
                // แสดง Success Animation
                showSuccessAnimation();
                
                // รอ 2 วินาที แล้วเคลียร์ข้อมูล
                setTimeout(function() {
                    hideSavingAnimation();
                    
                    // ล้างข้อมูล
                    orderItems = [];
                    selectedItemsForOrder.clear();
                    updateOrderTable();
                    
                    const compareSection = document.getElementById('compareSection');
                    if (compareSection) compareSection.style.display = 'none';
                    
                    // สร้างเลขใหม่ทันที
                    currentOrderNumber = generateOrderNumber();
                    const orderNumberElement = document.getElementById('currentOrderNumber');
                    orderNumberElement.textContent = currentOrderNumber;
                    orderNumberElement.dataset.isLoaded = 'false';
                }, 2000);
            } else {
                hideSavingAnimation();
                alert('ເກີດຂໍ້ຜິດພາດ: ' + result.error);
            }
        })
        .withFailureHandler(function(error) {
            hideSavingAnimation();
            alert('ເກີດຂໍ້ຜິດພາດໃນການບັນທຶກ: ' + error.message);
        })
        .saveOrder(orderData);
}

function showLoadOrderModal() {
    // แสดง Loading
    showLoadingOverlay('ກໍາລັງໂຫຼດລາຍການ...', 'ກະລຸນາລໍຖ້າສັກຄູ່');
    
    // โหลดรายการใบสั่งซื้อ
    google.script.run
        .withSuccessHandler(function(orderList) {
            hideLoadingOverlay();
            
            if (!orderList || orderList.length === 0) {
                alert('ບໍ່ມີໃບສັ່ງຊື້ເກົ່າ');
                return;
            }
            
            displayOrderSelectionModal(orderList);
        })
        .withFailureHandler(function(error) {
            hideLoadingOverlay();
            alert('ເກີດຂໍ້ຜິດພາດ: ' + error.message);
        })
        .getOrderList();
}

  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        if (lowStockModal && lowStockModal.classList.contains('show')) {
            closeLowStockModal();
        }
        
        const storeModal = document.getElementById('storeSelectorModal');
        if (storeModal) {
            closeStoreSelectorModal();
        }
    }
});

    /**
 * ========================================
 * ฟังก์ชันใหม่ - Copy ต่อท้ายก่อน window.onload
 * ========================================
 */

/**
 * เปลี่ยนโหมดข้อมูล (ใกล้หมด / ทั้งหมด)
 */
function setDataMode(mode) {
    currentDataMode = mode;
    
    // อัพเดท UI ปุ่ม
    document.querySelectorAll('.data-mode-btn').forEach(function(btn) {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');
    
    // รีเซ็ตการเลือก
    selectedItemsForOrder.clear();
    
    // โหลดข้อมูลใหม่
    if (mode === 'lowStock') {
        checkLowStockAndShowAlert();
    } else {
        loadAllItemsData();
    }
    
    // รีเฟรช view
    if (currentSearchMode === 'zone') {
        displayZoneView();
    } else {
        document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
        document.getElementById('searchInput').value = '';
    }
}

/**
 * โหลดข้อมูลสินค้าทั้งหมด (ไม่มีเงื่อนไข)
 */
function loadAllItemsData() {
    if (!itemsData || itemsData.size === 0) return;
    
    const allItems = [];
    
    itemsData.forEach(function(item) {
        const stockRemaining = parseFloat(item.columnF) || 0;
        const reorderPoint = parseFloat(item.columnD) || 0;
        
        // ดึงทั้งหมด ไม่เช็คเงื่อนไข
        allItems.push({
            barcode: item.columnA || '',
            barcodeBox: item.columnJ || item.columnA || '',
            itemName: item.columnB || 'ບໍ່ມີຊື່',
            reorderPoint: reorderPoint,
            stockRemaining: stockRemaining,
            unit: item.columnH || 'ຊິ້ນ',
            quantityPerUnit: parseFloat(item.columnI) || 1,
            image: item.columnK || '',
            zone: item.columnM || 'ບໍ່ລະບຸໂຊນ',
            price: parseFloat(item.columnN) || 0
        });
    });
    
    allItemsDataCache = groupItemsByZone(allItems);
}

/**
 * จัดกลุ่มสินค้าตามโซน
 */
function groupItemsByZone(items) {
    const grouped = {};
    
    items.forEach(function(item) {
        const zone = item.zone;
        const barcodeBox = item.barcodeBox || item.barcode;
        
        if (!grouped[zone]) {
            grouped[zone] = { zoneName: zone, products: {} };
        }
        
        if (!grouped[zone].products[barcodeBox]) {
            grouped[zone].products[barcodeBox] = {
                barcodeBox: barcodeBox,
                reorderPoint: item.reorderPoint,
                stockRemaining: item.stockRemaining,
                items: []
            };
        }
        
        grouped[zone].products[barcodeBox].items.push(item);
    });
    
    return grouped;
}

/**
 * คำนวณจำนวนพร้อมหน่วย
 */
function calculateQuantityWithUnit(value, quantityPerUnit, unit) {
    if (!value || !quantityPerUnit || quantityPerUnit === 0) {
        return '0 ' + unit;
    }
    
    const result = value / quantityPerUnit;
    const formatted = result % 1 === 0 ? result.toFixed(0) : result.toFixed(2);
    
    return formatted + ' ' + unit;
}

/**
 * แสดงผลการค้นหาแบบจัดกลุ่ม
 */
function displaySearchResultsGrouped(results) {
    const content = document.getElementById('lowStockContent');
    
    if (results.length === 0) {
        content.innerHTML = '<p style="text-align: center; color: #999;">ບໍ່ພົບຂໍ້ມູນ</p>';
        return;
    }
    
    // จัดกลุ่มตาม barcodeBox
    const grouped = {};
    results.forEach(function(item) {
        const key = item.barcodeBox;
        if (!grouped[key]) {
            grouped[key] = [];
        }
        grouped[key].push(item);
    });
    
    let html = '<div class="search-results">';
    const colors = ['color-1', 'color-2', 'color-3', 'color-4', 'color-5', 'color-6'];
    
    Object.keys(grouped).forEach(function(barcodeBox, groupIndex) {
        const group = grouped[barcodeBox];
        
        html += '<div class="product-group">';
        html += '<div class="product-group-header">';
        html += '<strong>📦 ລະຫັດເຊື່ອມໂຍງ: ' + barcodeBox + '</strong>';
        html += '</div>';
        
        group.forEach(function(item, itemIndex) {
            // ตรวจสอบว่าสินค้าอยู่ในตารางหลักแล้วหรือยัง
            const isInOrder = orderItems.some(function(orderItem) {
                return orderItem.barcode === item.barcode;
            });
            
            // ถ้าอยู่ในตารางแล้ว ให้ข้ามไม่แสดง
            if (isInOrder) return;
            
            const isSelected = selectedItemsForOrder.has(item.barcode);
            const quantity = isSelected ? getItemQuantityFromOrder(item.barcode) : 1;
            const colorClass = colors[itemIndex % colors.length];
            
            const stockDisplay = calculateQuantityWithUnit(item.stockRemaining, item.quantityPerUnit, item.unit);
            const reorderDisplay = calculateQuantityWithUnit(item.reorderPoint, item.quantityPerUnit, item.unit);
            
            html += '<div class="selectable-item ' + colorClass + ' ' + (isSelected ? 'selected' : '') + '" data-barcode="' + item.barcode + '" onclick="handleItemCardClick(event, \'' + item.barcode + '\')">';
            html += '<input type="checkbox" class="item-checkbox" ' + (isSelected ? 'checked' : '') + ' onclick="event.stopPropagation(); toggleItemSelection(\'' + item.barcode + '\')">';
            
            if (item.image) {
                html += '<img src="' + item.image + '" class="item-image-small">';
            } else {
                html += '<div class="no-product-image">📷</div>';
            }
            
            html += '<div class="item-info-block">';
            html += '<div class="item-name-large">' + item.itemName + ' - ຫົວໜ່ວຍ: ' + item.unit + '</div>';
            html += '<div class="item-details-extended">';
            html += 'ລະຫັດ: ' + item.barcode + ' | ໂຊນ: ' + item.zone + '<br>';
            html += 'ຈໍານວນຄົງເຫຼືອ: ' + stockDisplay + ' | ';
            html += 'ຈໍານວນແຈ້ງເຕືອນ: ' + reorderDisplay;
            html += '</div>';
            html += '</div>';
            
            html += '<div class="item-quantity-container">';
            html += '<span class="quantity-label">ຈຳນວນ:</span>';
            html += '<input type="number" class="quantity-input" value="' + quantity + '" min="1" onclick="event.stopPropagation()" onchange="updateItemQuantity(\'' + item.barcode + '\', this.value)">';
            html += '</div>';
            html += '</div>';
        });
        
        html += '</div>';
    });
    
    html += '</div>';
    content.innerHTML = html;
}
/**
 * สร้าง HTML สำหรับรายละเอียดโซน (แบบปรับปรุง)
 */
function generateZoneDetailsHTMLEnhanced(zoneData) {
    let html = '';
    let itemNumber = 1;
    const colors = ['color-1', 'color-2', 'color-3', 'color-4', 'color-5', 'color-6'];

    Object.entries(zoneData.products).forEach(function(entry) {
        const barcodeBox = entry[0];
        const productGroup = entry[1];
        
        html += '<div class="product-group">';
        html += '<div class="product-group-header">';
        html += '<strong>' + itemNumber + '. ລະຫັດເຊື່ອມໂຍງ: ' + barcodeBox + '</strong>';
        html += '</div>';

        productGroup.items.forEach(function(item, index) {
            // ตรวจสอบว่าสินค้าอยู่ในตารางหลักแล้วหรือยัง
            const isInOrder = orderItems.some(function(orderItem) {
                return orderItem.barcode === item.barcode;
            });
            
            // ถ้าอยู่ในตารางแล้ว ให้ข้ามไม่แสดง
            if (isInOrder) return;
            
            const isSelected = selectedItemsForOrder.has(item.barcode);
            const orderQty = isSelected ? getItemQuantityFromOrder(item.barcode) : 1;
            const colorClass = colors[index % colors.length];
            
            const stockDisplay = calculateQuantityWithUnit(item.stockRemaining, item.quantityPerUnit, item.unit);
            const reorderDisplay = calculateQuantityWithUnit(item.reorderPoint, item.quantityPerUnit, item.unit);

            html += '<div class="product-item selectable-item ' + colorClass + ' ' + (isSelected ? 'selected' : '') + '" data-barcode="' + item.barcode + '" onclick="event.stopPropagation()">';
            html += '<input type="checkbox" class="item-checkbox" ' + (isSelected ? 'checked' : '') + ' onclick="event.stopPropagation(); toggleItemSelection(\'' + item.barcode + '\')">';
            
            if (item.image) {
                html += '<img src="' + item.image + '" class="product-image">';
            } else {
                html += '<div class="no-product-image">📷</div>';
            }
            
            html += '<div class="product-info">';
            html += '<div class="product-name">' + item.itemName + ' - ຫົວໜ່ວຍ: ' + item.unit + '</div>';
            html += '<div class="product-details">ລະຫັດ: ' + item.barcode + '</div>';
            html += '<div class="product-stock-detail">';
            html += 'ຈໍານວນຄົງເຫຼືອ: ' + stockDisplay + ' | ';
            html += 'ຈໍານວນແຈ້ງເຕືອນ: ' + reorderDisplay;
            html += '</div>';
            html += '</div>';
            
            html += '<div class="item-quantity-container">';
            html += '<span class="quantity-label">ສັ່ງຊື້:</span>';
            html += '<input type="number" class="quantity-input" value="' + orderQty + '" min="1" onclick="event.stopPropagation()" onchange="updateItemQuantity(\'' + item.barcode + '\', this.value)">';
            html += '</div>';
            html += '</div>';
        });

        html += '</div>';
        itemNumber++;
    });

    return html;
}
/**
 * แสดง Modal เลือกใบสั่งซื้อ (Dropdown แบบ Autocomplete)
 * ฟังก์ชันใหม่
 */
/**
 * แสดง Modal เลือกใบสั่งซื้อ (แก้ไข: แสดงจำนวนรายการ)
 */
function displayOrderSelectionModal(orderList) {
    const modal = document.createElement('div');
    modal.id = 'orderSelectionModal';
    modal.className = 'store-selector-modal show';
    
    let optionsHTML = '';
    orderList.forEach(function(order) {
        optionsHTML += '<div class="order-option-item" data-order="' + order.orderNumber + '" onclick="selectOrderFromList(\'' + order.orderNumber + '\')">' +
            '<div class="order-display-text">' + order.date + ' - ' + order.orderNumber + '</div>' +
            '<div class="order-item-count">' + order.itemCount + ' ລາຍການ</div>' +
            '</div>';
    });
    
    modal.innerHTML = '<div class="store-selector-content">' +
        '<div class="store-selector-header">🔄 ເລືອກໃບສັ່ງຊື້ເກົ່າ</div>' +
        '<input type="text" id="orderSearchInput" class="store-search-input" placeholder="ຄົ້ນຫາເລກທີ ຫຼື ວັນທີ..." onkeyup="filterOrderList()">' +
        '<div class="store-list" id="orderListContainer">' + optionsHTML + '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closeOrderSelectionModal()">ຍົກເລີກ</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closeOrderSelectionModal();
    });
}

/**
 * กรองรายการใบสั่งซื้อตามคำค้นหา
 * ฟังก์ชันใหม่
 */
function filterOrderList() {
    const input = document.getElementById('orderSearchInput');
    const filter = input.value.toLowerCase();
    const container = document.getElementById('orderListContainer');
    const items = container.getElementsByClassName('order-option-item');
    
    for (let i = 0; i < items.length; i++) {
        const text = items[i].textContent || items[i].innerText;
        if (text.toLowerCase().indexOf(filter) > -1) {
            items[i].style.display = '';
        } else {
            items[i].style.display = 'none';
        }
    }
}
/**
 * เลือกใบสั่งซื้อจากรายการ
 * ฟังก์ชันใหม่
 */

/**
 * เลือกใบสั่งซื้อจากรายการ (แก้ไข: ลบ alert ออก)
 */
function selectOrderFromList(orderNumber) {
    closeOrderSelectionModal();
    
    // แสดง Loading
    showLoadingOverlay('ກໍາລັງດຶງຂໍ້ມູນ...', 'ກະລຸນາລໍຖ້າສັກຄູ່');
    
    google.script.run
        .withSuccessHandler(function(result) {
            hideLoadingOverlay();
            
            if (result.success && result.items.length > 0) {
                // เคลียร์ข้อมูลเก่า
                orderItems = [];
                selectedItemsForOrder.clear();
                
                // โหลดข้อมูลใหม่
                orderItems = result.items;
                
                result.items.forEach(function(item) {
                    selectedItemsForOrder.add(item.barcode);
                });
                
                // ตั้งเลขที่ใบสั่งซื้อเป็นเลขเดิม
                currentOrderNumber = orderNumber;
                const orderNumberElement = document.getElementById('currentOrderNumber');
                orderNumberElement.textContent = currentOrderNumber;
                orderNumberElement.dataset.isLoaded = 'true'; // ตั้ง flag ว่าเป็นการโหลดใบเก่า
                
                updateOrderTable();
                // ลบ alert ออก - แสดงข้อมูลในตารางเลย
            } else {
                alert('ບໍ່ພົບໃບສັ່ງຊື້ນີ້');
            }
        })
        .withFailureHandler(function(error) {
            hideLoadingOverlay();
            alert('ເກີດຂໍ້ຜິດພາດ: ' + error.message);
        })
        .loadOrder(orderNumber);
}
/**
 * ปิด Modal เลือกใบสั่งซื้อ
 * ฟังก์ชันใหม่
 */
function closeOrderSelectionModal() {
    const modal = document.getElementById('orderSelectionModal');
    if (modal) modal.remove();
}

/**
 * แสดง Loading Overlay
 * ฟังก์ชันใหม่
 */
function showLoadingOverlay(mainText, subText) {
    // ลบ overlay เก่าถ้ามี
    const existingOverlay = document.getElementById('loadingOverlay');
    if (existingOverlay) {
        existingOverlay.remove();
    }
    
    const overlay = document.createElement('div');
    overlay.id = 'loadingOverlay';
    overlay.className = 'loading-overlay show';
    
    overlay.innerHTML = '<div class="loading-content">' +
        '<div class="loading-spinner"></div>' +
        '<div class="loading-text">' + mainText + '</div>' +
        '<div class="loading-subtext">' + subText + '</div>' +
        '</div>';
    
    document.body.appendChild(overlay);
}
/**
 * ซ่อน Loading Overlay
 * ฟังก์ชันใหม่
 */
function hideLoadingOverlay() {
    const overlay = document.getElementById('loadingOverlay');
    if (overlay) {
        overlay.remove();
    }
}
/**
 * แสดง Modal ยืนยันการบันทึกหลัง Print
 */
function showPrintConfirmationModal() {
    const modal = document.createElement('div');
    modal.id = 'printConfirmModal';
    modal.className = 'store-selector-modal show';
    
    modal.innerHTML = '<div class="store-selector-content" style="max-width: 450px;">' +
        '<div class="store-selector-header">✅ ຢືນຢັນການບັນທຶກ</div>' +
        '<div style="padding: 20px; text-align: center;">' +
        '<p style="font-size: 1.1rem; margin-bottom: 20px;">ປຶມສຳເລັດແລ້ວບໍ?</p>' +
        '<p style="font-size: 0.95rem; color: #666;">ກົດຢືນຢັນເພື່ອບັນທຶກຂໍ້ມູນລົງໃນລະບົບ</p>' +
        '</div>' +
        '<div class="store-selector-actions">' +
        '<button class="btn-cancel-stores" onclick="closePrintConfirmationModal()">ຍົກເລີກ</button>' +
        '<button class="btn-confirm-stores" onclick="confirmPrintSave()">✅ ຢືນຢັນບັນທຶກ</button>' +
        '</div>' +
        '</div>';
    
    document.body.appendChild(modal);
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) closePrintConfirmationModal();
    });
}

/**
 * ปิด Modal ยืนยันการบันทึก
 */
function closePrintConfirmationModal() {
    const modal = document.getElementById('printConfirmModal');
    if (modal) modal.remove();
}

/**
 * ยืนยันการบันทึกหลัง Print
 */
function confirmPrintSave() {
    closePrintConfirmationModal();
    
    showSavingAnimation();
    
    const isLoadedOrder = document.getElementById('currentOrderNumber').dataset.isLoaded === 'true';
    
    const orderData = {
        orderNumber: currentOrderNumber,
        items: orderItems,
        method: 'PRINT',
        isUpdate: isLoadedOrder
    };
    
    google.script.run
        .withSuccessHandler(function(result) {
            if (result.success) {
                showSuccessAnimation();
                
                setTimeout(function() {
                    hideSavingAnimation();
                    
                    orderItems = [];
                    selectedItemsForOrder.clear();
                    updateOrderTable();
                    
                    const compareSection = document.getElementById('compareSection');
                    if (compareSection) compareSection.style.display = 'none';
                    
                    currentOrderNumber = generateOrderNumber();
                    const orderNumberElement = document.getElementById('currentOrderNumber');
                    orderNumberElement.textContent = currentOrderNumber;
                    orderNumberElement.dataset.isLoaded = 'false';
                }, 2000);
            } else {
                hideSavingAnimation();
                alert('ເກີດຂໍ້ຜິດພາດ: ' + result.error);
            }
        })
        .withFailureHandler(function(error) {
            hideSavingAnimation();
            alert('ເກີດຂໍ້ຜິດພາດໃນການບັນທຶກ: ' + error.message);
        })
        .saveOrder(orderData);
}


/**
 * ซ่อน Animation บันทึก
 * ฟังก์ชันใหม่
 */
function hideSavingAnimation() {
    const overlay = document.getElementById('savingAnimationOverlay');
    if (overlay) {
        overlay.classList.add('fade-out');
        setTimeout(function() {
            overlay.remove();
        }, 300);
    }
}
/**
 * แสดง Animation บันทึกสำเร็จ
 * ฟังก์ชันใหม่
 */
function showSuccessAnimation() {
    const statusText = document.getElementById('savingStatusText');
    const spinner = document.querySelector('.saving-spinner');
    
    if (statusText) {
        statusText.innerHTML = '✅ ບັນທຶກສຳເລັດ!';
        statusText.style.color = '#4caf50';
    }
    
    if (spinner) {
        spinner.innerHTML = '<div class="success-checkmark">✓</div>';
        spinner.style.border = 'none';
        spinner.style.animation = 'none';
    }
}
/**
 * แสดง Animation กำลังบันทึก
 * ฟังก์ชันใหม่
 */
function showSavingAnimation() {
    const existingOverlay = document.getElementById('savingAnimationOverlay');
    if (existingOverlay) {
        existingOverlay.remove();
    }
    
    const overlay = document.createElement('div');
    overlay.id = 'savingAnimationOverlay';
    overlay.className = 'loading-overlay show';
    
    overlay.innerHTML = '<div class="saving-animation-content">' +
        '<div class="saving-spinner"></div>' +
        '<div id="savingStatusText" class="saving-text">ກໍາລັງບັນທຶກຂໍ້ມູນ...</div>' +
        '<div class="saving-subtext">ກະລຸນາລໍຖ້າສັກຄູ່</div>' +
        '</div>';
    
    document.body.appendChild(overlay);
}

// เพิ่มหลังบรรทัด: const barcodeKey = orderItem.barcode.toString().trim();

console.log('Looking for barcode:', barcodeKey);
console.log('Available keys in itemsData:');
let count = 0;
itemsData.forEach(function(item, key) {
    if (count < 5) { // แสดง 5 อันแรก
        console.log('  Key:', key);
        count++;
    }
});
    </script>
</body>
</html>

/**
 * ระบบสแกนขายสินค้า - Google Apps Script Backend
 */

// กำหนดชื่อ Spreadsheet และ Sheet
const SPREADSHEET_ID = '10SgCZ2H-4d37-3Slcj-riBK2SDgAbYpXW6SZvgSFUa8';
const ITEMS_SHEET = 'Items';
const PRICE_STUDY_SHEET = 'ສຶກສາລາຄາຕົ້ນທຶນ';
const ORDER_SHEET_ID = '1zk7v8iClQjGf7WseWld_hwix4upAr7KoGqn-eo01fgk';
const ORDER_SHEET = 'ສັ່ງຊື້ສິນຄ້າ';

const INITIAL_QUOTA = 20000;

/**
 * เปิดหน้าเว็บ HTML
 */
function doGet() {
  return HtmlService.createTemplateFromFile('index')
    .evaluate()
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

/**
 * ดึงข้อมูลจากตาราง Items
 */
function getItemsData() {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(ITEMS_SHEET);
   
    if (!sheet) {
      Logger.log('Sheet "' + ITEMS_SHEET + '" not found');
      return [];
    }
   
    const data = sheet.getDataRange().getValues();
    if (!data || data.length <= 1) {
      Logger.log('No data in Items sheet');
      return [];
    }
    
    const headers = data[0];
    const rows = data.slice(1);
   
    const result = [];
    for (let i = 0; i < rows.length; i++) {
      const row = rows[i];
      const item = {};
      for (let j = 0; j < headers.length; j++) {
        item['column' + String.fromCharCode(65 + j)] = row[j] || '';
      }
      result.push(item);
    }
    
    return result;
  } catch (error) {
    Logger.log('Error getting items data: ' + error.toString());
    return [];
  }
}

/**
 * ดึงข้อมูลจากตาราง ສຶກສາລາຄາຕົ້ນທຶນ
 */
function getPriceStudyData() {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(PRICE_STUDY_SHEET);
   
    if (!sheet) {
      Logger.log('Sheet "' + PRICE_STUDY_SHEET + '" not found - returning empty array');
      return [];
    }
   
    const lastRow = sheet.getLastRow();
    if (lastRow <= 1) {
      Logger.log('Sheet "' + PRICE_STUDY_SHEET + '" has no data - returning empty array');
      return [];
    }
    
    const data = sheet.getDataRange().getValues();
    const headers = data[0];
    const rows = data.slice(1);
   
    const result = [];
    for (let i = 0; i < rows.length; i++) {
      const row = rows[i];
      const item = {};
      for (let j = 0; j < headers.length; j++) {
        item['column' + String.fromCharCode(65 + j)] = row[j] || '';
      }
      result.push(item);
    }
    
    Logger.log('getPriceStudyData returning ' + result.length + ' items');
    return result;
  } catch (error) {
    Logger.log('Error getting price study data: ' + error.toString());
    return [];
  }
}

/**
 * ดึงรายการร้านทั้งหมดจาก Column F
 */
function getStoreList() {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(PRICE_STUDY_SHEET);
   
    if (!sheet) {
      Logger.log('Sheet "' + PRICE_STUDY_SHEET + '" not found');
      return [];
    }
   
    const lastRow = sheet.getLastRow();
    if (lastRow <= 1) {
      return [];
    }
    
    const data = sheet.getRange('F2:F' + lastRow).getValues();
    const storesSet = {};
    
    for (let i = 0; i < data.length; i++) {
      const store = data[i][0];
      if (store && store.toString().trim()) {
        storesSet[store.toString().trim()] = true;
      }
    }
    
    const stores = Object.keys(storesSet).sort();
    return stores;
  } catch (error) {
    Logger.log('Error getting store list: ' + error.toString());
    return [];
  }
}

/**
 * บันทึกใบสั่งซื้อ
 */
function saveOrder(orderData) {
  try {
    const ss = SpreadsheetApp.openById(ORDER_SHEET_ID);
    let sheet = ss.getSheetByName(ORDER_SHEET);
    
    // ถ้ายังไม่มี sheet ให้สร้างใหม่
    if (!sheet) {
      sheet = ss.insertSheet(ORDER_SHEET);
      // สร้าง header
      sheet.appendRow(['ວັນທີ', 'ເລກທີໃບສັ່ງຊື້', 'ລະຫັດສິນຄ້າ', 'ຊື່ສິນຄ້າ', 'ຫົວໜ່ວຍ', 'ຈຳນວນ', 'ລາຄາ/ໜ່ວຍ', 'ລວມເງິນ', 'ວິທີການ']);
    }
    
    const timestamp = new Date();
    const orderNumber = orderData.orderNumber;
    const method = orderData.method;
    
    // เพิ่มข้อมูลแต่ละรายการ
    const items = orderData.items;
    for (let i = 0; i < items.length; i++) {
      const item = items[i];
      sheet.appendRow([
        timestamp,
        orderNumber,
        item.barcode,
        item.itemName,
        item.unit,
        item.quantity,
        item.price,
        item.total,
        method
      ]);
    }
    
    return { success: true, orderNumber: orderNumber };
  } catch (error) {
    Logger.log('Error saving order: ' + error.toString());
    return { success: false, error: error.toString() };
  }
}

/**
 * ดึงข้อมูลใบสั่งซื้อเดิม
 */
function loadOrder(orderNumber) {
  try {
    const ss = SpreadsheetApp.openById(ORDER_SHEET_ID);
    const sheet = ss.getSheetByName(ORDER_SHEET);
    
    if (!sheet) {
      return { success: false, items: [] };
    }
    
    const data = sheet.getDataRange().getValues();
    if (!data || data.length <= 1) {
      return { success: false, items: [] };
    }
    
    const headers = data[0];
    const rows = data.slice(1);
    
    const orderItems = [];
    for (let i = 0; i < rows.length; i++) {
      const row = rows[i];
      if (row[1] === orderNumber) {
        orderItems.push({
          barcode: row[2],
          itemName: row[3],
          unit: row[4],
          quantity: row[5],
          price: row[6],
          total: row[7]
        });
      }
    }
    
    return { success: true, items: orderItems };
  } catch (error) {
    Logger.log('Error loading order: ' + error.toString());
    return { success: false, items: [] };
  }
}

/**
 * สร้างเลขที่ใบสั่งซื้อใหม่
 */
function generateOrderNumber() {
  const now = new Date();
  const year = now.getFullYear();
  const month = String(now.getMonth() + 1).padStart(2, '0');
  const day = String(now.getDate()).padStart(2, '0');
  const time = String(now.getHours()).padStart(2, '0') + String(now.getMinutes()).padStart(2, '0');
  
  return 'PO-' + year + month + day + '-' + time;
}

function debugPriceStudy() {
  try {
    const ss = SpreadsheetApp.openById('10SgCZ2H-4d37-3Slcj-riBK2SDgAbYpXW6SZvgSFUa8');
    Logger.log('Spreadsheet opened: ' + ss.getName());
    
    const sheet = ss.getSheetByName('ສຶກສາລາຄາຕົ້ນທຶນ');
    Logger.log('Sheet found: ' + (sheet ? 'YES' : 'NO'));
    
    if (sheet) {
      Logger.log('Last Row: ' + sheet.getLastRow());
      Logger.log('Last Column: ' + sheet.getLastColumn());
      
      const data = sheet.getDataRange().getValues();
      Logger.log('Data rows: ' + data.length);
      Logger.log('First row: ' + JSON.stringify(data[0]));
    }
    
    const result = getPriceStudyData();
    Logger.log('getPriceStudyData result length: ' + result.length);
    Logger.log('First item: ' + JSON.stringify(result[0]));
    
  } catch (error) {
    Logger.log('ERROR: ' + error.toString());
  }
}













<!DOCTYPE html>
<html lang="lo">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ລະບົບແຈ້ງເຕືອນສະຕັອກສິນຄ້າ</title>
    <style>
     * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Noto Sans Lao', Arial, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .header {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        padding: 30px;
        text-align: center;
    }

    .header h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .data-status {
        margin-top: 20px;
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .status-indicator {
        display: flex;
        align-items: center;
        gap: 8px;
        background: rgba(255,255,255,0.2);
        padding: 8px 15px;
        border-radius: 20px;
    }

    .status-icon {
        width: 12px;
        height: 12px;
        border-radius: 50%;
    }

    .status-loading { background: #ffa726; animation: pulse 2s infinite; }
    .status-success { background: #4caf50; }
    .status-error { background: #f44336; }

    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }

    .main-content {
        padding: 30px;
    }

    .loading-section {
        text-align: center;
        padding: 40px;
    }

    .loading-icon {
        width: 60px;
        height: 60px;
        border: 4px solid #e3f2fd;
        border-top: 4px solid #4facfe;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: 0 auto 20px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* LOW STOCK ALERT SYSTEM */
    .low-stock-alert-btn {
        position: fixed;
        top: 20px;
        left: 20px;
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 50px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
        z-index: 999;
        display: none;
        align-items: center;
        gap: 8px;
        animation: lowStockPulse 1.5s infinite;
    }

    .low-stock-alert-btn.show {
        display: flex;
    }

    @keyframes lowStockPulse {
        0%, 100% {
            transform: scale(1);
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        }
        50% {
            transform: scale(1.15);
            background: linear-gradient(135deg, #ff4757 0%, #ff3838 100%);
        }
    }

    .stock-alert-badge {
        background: white;
        color: #ff4757;
        border-radius: 12px;
        padding: 4px 10px;
        font-size: 0.9rem;
        font-weight: bold;
    }

    .low-stock-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        padding: 20px;
    }

    .low-stock-modal.show {
        display: flex;
    }

    .low-stock-modal-content {
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 900px;
        width: 100%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .low-stock-modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 3px solid #f0f0f0;
    }

    .low-stock-modal-title {
        font-size: 2rem;
        font-weight: bold;
        color: #ff6b6b;
    }

    .stock-close-btn {
        background: #f0f0f0;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 1.5rem;
    }

    .zone-card {
        background: #f8f9fa;
        border: 3px solid #e1e5e9;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 15px;
        cursor: pointer;
    }

    .zone-card:hover {
        border-color: #ff6b6b;
    }

    .zone-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .zone-name {
        font-size: 1.5rem;
        font-weight: bold;
    }

    .zone-count {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
        color: white;
        padding: 6px 15px;
        border-radius: 20px;
    }

    .zone-details {
        display: none;
        margin-top: 20px;
        padding-top: 20px;
        border-top: 2px solid #dee2e6;
    }

    .zone-details.show {
        display: block;
    }

    .product-group {
        background: white;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 15px;
        border-left: 4px solid #ff6b6b;
    }

    .product-group-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        padding-bottom: 10px;
        border-bottom: 2px solid #f0f0f0;
    }

    .product-stock-info {
        display: flex;
        gap: 15px;
    }

    .stock-alert-text {
        color: #ff6b6b;
        font-weight: bold;
    }

    .stock-remain-text {
        color: #ffa502;
        font-weight: bold;
    }

    .product-item {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 12px;
        background: #f8f9ff;
        border-radius: 10px;
        margin-bottom: 10px;
    }

    .product-icon {
        font-size: 1.5rem;
    }

    .product-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }

    .no-product-image {
        width: 60px;
        height: 60px;
        background: #f0f0f0;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        color: #999;
    }

    .product-info {
        flex: 1;
    }

    .product-name {
        font-size: 1.05rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .product-details {
        font-size: 0.9rem;
        color: #666;
    }

    .stock-empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

    .stock-empty-state i {
        font-size: 4rem;
        color: #4caf50;
    }

    /* ORDER TABLE STYLES */
    .order-section {
        margin-top: 30px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 15px;
    }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .order-number-display {
        font-size: 1.3rem;
        font-weight: bold;
        color: #4facfe;
    }

    .order-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .order-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: all 0.3s;
    }

    .btn-load-order {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .btn-compare-price {
        background: linear-gradient(135deg, #ffa726 0%, #fb8c00 100%);
        color: white;
    }

    .btn-compare-price:disabled {
        background: #ccc;
        cursor: not-allowed;
    }

    .order-table-wrapper {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .order-table {
        width: 100%;
        border-collapse: collapse;
    }

    .order-table thead {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
    }

    .order-table th {
        padding: 15px;
        text-align: left;
        font-weight: bold;
    }

    .order-table td {
        padding: 12px 15px;
        border-bottom: 1px solid #f0f0f0;
    }

    .order-table tbody tr {
        transition: background 0.2s;
    }

    .order-table tbody tr:hover {
        background: #f8f9ff;
    }

    .order-table-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 8px;
    }

    .no-order-img {
        width: 50px;
        height: 50px;
        background: #f0f0f0;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .order-quantity-input {
        width: 80px;
        padding: 8px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        text-align: center;
        font-size: 1rem;
    }

    .order-quantity-input:focus {
        border-color: #4facfe;
        outline: none;
    }

    .btn-delete-item {
        background: #f44336;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-delete-item:hover {
        background: #d32f2f;
    }

    .order-footer {
        padding: 20px;
        background: #f8f9fa;
        border-top: 3px solid #4facfe;
    }

    .order-total {
        text-align: right;
        font-size: 1.5rem;
        font-weight: bold;
        color: #4facfe;
        margin-bottom: 15px;
    }

    .order-submit-actions {
        display: flex;
        justify-content: flex-end;
        gap: 15px;
    }

    .btn-save-print,
    .btn-save-whatsapp {
        padding: 15px 30px;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        font-size: 1.1rem;
        font-weight: bold;
        color: white;
        transition: all 0.3s;
    }

    .btn-save-print {
        background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
    }

    .btn-save-whatsapp {
        background: linear-gradient(135deg, #25d366 0%, #128c7e 100%);
    }

    .btn-save-print:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.4);
    }

    .btn-save-whatsapp:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(37, 211, 102, 0.4);
    }

    /* COMPARE PRICE TABLE */
    .compare-section {
        margin-top: 20px;
    }

    .compare-table-container {
        margin-bottom: 20px;
        background: white;
        border-radius: 12px;
        padding: 15px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .compare-table-header {
        font-size: 1.2rem;
        font-weight: bold;
        color: #ffa726;
        margin-bottom: 10px;
        padding-bottom: 10px;
        border-bottom: 2px solid #ffa726;
    }

    .item-highlighted {
        background: #fff3cd !important;
        border-left: 4px solid #ffc107;
    }

    .item-source-badge {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 0.85rem;
        font-weight: bold;
    }

    .badge-items {
        background: #4caf50;
        color: white;
    }

    .badge-price-study {
        background: #ffa726;
        color: white;
    }

    /* STORE SELECTOR MODAL */
    .store-selector-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 10001;
        padding: 20px;
    }

    .store-selector-modal.show {
        display: flex;
    }

    .store-selector-content {
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 600px;
        width: 100%;
        max-height: 80vh;
        overflow-y: auto;
    }

    .store-selector-header {
        font-size: 1.8rem;
        font-weight: bold;
        color: #ffa726;
        margin-bottom: 20px;
    }

    .store-search-input {
        width: 100%;
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
        margin-bottom: 15px;
    }

    .store-search-input:focus {
        border-color: #ffa726;
        outline: none;
    }

    .store-list {
        max-height: 300px;
        overflow-y: auto;
        margin-bottom: 20px;
    }

    .store-item {
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .store-item:hover {
        border-color: #ffa726;
        background: #fff8e1;
    }

    .store-item.selected {
        background: #ffa726;
        color: white;
        border-color: #ffa726;
    }

    .store-checkbox {
        width: 20px;
        height: 20px;
        cursor: pointer;
    }

    .store-selector-actions {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }

    .btn-confirm-stores,
    .btn-cancel-stores {
        padding: 12px 25px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
    }

    .btn-confirm-stores {
        background: #ffa726;
        color: white;
    }

    .btn-cancel-stores {
        background: #e0e0e0;
        color: #333;
    }

    /* SEARCH MODAL ENHANCEMENTS */
    .search-options {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
        padding: 15px;
        background: #f0f0f0;
        border-radius: 10px;
    }

    .search-option-btn {
        flex: 1;
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        background: white;
        cursor: pointer;
        font-size: 1rem;
        font-weight: bold;
        transition: all 0.3s;
    }

    .search-option-btn.active {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
        border-color: #4facfe;
    }

    .search-input-container {
        margin-bottom: 20px;
    }

    .search-input {
        width: 100%;
        padding: 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 1.1rem;
    }

    .search-input:focus {
        border-color: #4facfe;
        outline: none;
    }

    .search-results {
        max-height: 400px;
        overflow-y: auto;
    }

    .selectable-item {
        padding: 15px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        margin-bottom: 10px;
        cursor: pointer;
        transition: all 0.3s;
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .selectable-item:hover {
        border-color: #4facfe;
        background: #f0f8ff;
    }

    .selectable-item.selected {
        background: #fff3cd;
        border-color: #ffc107;
    }

    .item-checkbox {
        width: 24px;
        height: 24px;
        cursor: pointer;
    }

    .item-image-small {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }

    .item-info-block {
        flex: 1;
    }

    .item-name-large {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .item-details-small {
        font-size: 0.9rem;
        color: #666;
    }

    .item-quantity-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .quantity-label {
        font-weight: bold;
    }

    .quantity-input {
        width: 80px;
        padding: 8px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        text-align: center;
        font-size: 1rem;
    }

    .confirm-selection-btn {
        margin-top: 20px;
        width: 100%;
        padding: 15px;
        background: linear-gradient(135deg, #4caf50 0%, #45a049 100%);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 1.2rem;
        font-weight: bold;
        cursor: pointer;
    }

    .confirm-selection-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.4);
    }

    /* PRINT STYLES */
    @media print {
        body * {
            visibility: hidden;
        }
        
        .print-area,
        .print-area * {
            visibility: visible;
        }
        
        .print-area {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }
        
        .order-actions,
        .order-submit-actions,
        .btn-delete-item {
            display: none !important;
        }
    }

    @media (max-width: 768px) {
        .low-stock-alert-btn {
            top: 10px;
            left: 10px;
            padding: 10px 15px;
            font-size: 0.9rem;
        }

        .product-item {
            flex-direction: column;
            text-align: center;
        }

        .order-header {
            flex-direction: column;
            gap: 15px;
        }
        
        .order-table {
            font-size: 0.9rem;
        }
        
        .order-table th,
        .order-table td {
            padding: 8px;
        }
        
        .order-submit-actions {
            flex-direction: column;
        }
        
        .btn-save-print,
        .btn-save-whatsapp {
            width: 100%;
        }
    }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🔔 ລະບົບແຈ້ງເຕືອນສະຕັອກສິນຄ້າ</h1>
            <p>ລະບົບຕິດຕາມສິນຄ້າໃກ້ໝົດອັດຕະໂນມັດ</p>
            
            <div class="data-status">
                <div class="status-indicator" id="itemsStatus">
                    <div class="status-icon status-loading"></div>
                    <span>Items: ກໍາລັງໂຫຼດ...</span>
                </div>
            </div>
        </div>

        <div class="main-content">
            <div id="loadingSection" class="loading-section">
                <div class="loading-icon"></div>
                <h3>ກໍາລັງໂຫຼດຂໍ້ມູນ...</h3>
                <p>ກະລຸນາລໍຖ້າສັກຄູ່</p>
                <div style="margin-top: 15px; color: #666;">
                    <div id="dataCount">0 ລາຍການ</div>
                </div>
            </div>

            <div id="orderSection" class="order-section" style="display: none;">
                <div class="order-header">
                    <div class="order-number-display">
                        🧾 ເລກທີໃບສັ່ງຊື້: <span id="currentOrderNumber">-</span>
                    </div>
                    <div class="order-actions">
                        <button class="order-btn btn-load-order" onclick="showLoadOrderModal()">
                            🔄 ດຶງໃບສັ່ງຊື້ເກົ່າ
                        </button>
                        <button class="order-btn btn-compare-price" id="comparePriceBtn" onclick="showStoreSelectorModal()" disabled>
                            ⚖️ ປຽບທຽບລາຄາ
                        </button>
                    </div>
                </div>

                <div class="order-table-wrapper">
                    <table class="order-table">
                        <thead>
                            <tr>
                                <th>ລຳດັບ</th>
                                <th>ລະຫັດ</th>
                                <th>ຮູບ</th>
                                <th>ຊື່ສິນຄ້າ</th>
                                <th>ຫົວໜ່ວຍ</th>
                                <th>ຈຳນວນ</th>
                                <th>ລາຄາ/ໜ່ວຍ</th>
                                <th>ລວມເງິນ</th>
                                <th>ລົບ</th>
                            </tr>
                        </thead>
                        <tbody id="orderTableBody">
                        </tbody>
                    </table>
                </div>

                <div class="order-footer">
                    <div class="order-total">
                        💰 ລວມທັງໝົດ: <span id="orderTotalAmount">0</span> ກີບ
                    </div>
                    <div class="order-submit-actions">
                        <button class="btn-save-print" onclick="saveAndPrint()">
                            🖨️ ບັນທຶກ + PRINT
                        </button>
                        <button class="btn-save-whatsapp" onclick="saveAndWhatsapp()">
                            📱 ບັນທຶກ + WhatsApp
                        </button>
                    </div>
                </div>

                <div id="compareSection" class="compare-section" style="display: none;">
                </div>
            </div>
        </div>
    </div>

    <script>
    let itemsData = new Map();
    let priceStudyData = new Map();
    let storeList = [];
    let dataLoaded = { items: false, priceStudy: false };
    let loadStartTime = Date.now();
    let lowStockData = [];
    let lowStockModal = null;
    let currentOrderNumber = '';
    let orderItems = [];
    let selectedItemsForOrder = new Set();
    let currentSearchMode = 'zone';

    window.onload = function() {
        loadAllData();
    };

    async function loadAllData() {
        await Promise.all([
            loadItemsData(),
            loadPriceStudyData(),
            loadStoreList()
        ]);
    }

   async function loadItemsData() {
    updateDataStatus('items', 'loading');
    
    return new Promise(function(resolve) {
        google.script.run
            .withSuccessHandler(function(data) {
                itemsData.clear();
                
                // เพิ่ม error handling
                if (!data || !Array.isArray(data)) {
                    console.error('Invalid data received from getItemsData');
                    updateDataStatus('items', 'error');
                    dataLoaded.items = true;
                    checkAndInitialize();
                    resolve();
                    return;
                }
                
                data.forEach(function(item) {
                    if (item.columnA) {
                        itemsData.set(item.columnA.toString().trim(), item);
                    }
                });
                
                updateDataStatus('items', 'success', itemsData.size);
                dataLoaded.items = true;
                checkAndInitialize();
                resolve();
            })
            .withFailureHandler(function(error) {
                console.error('Error in loadItemsData:', error);
                updateDataStatus('items', 'error');
                dataLoaded.items = true;
                checkAndInitialize();
                resolve();
            })
            .getItemsData();
    });
}

  async function loadPriceStudyData() {
    return new Promise(function(resolve) {
        google.script.run
            .withSuccessHandler(function(data) {
                priceStudyData.clear();
                
                // แก้ไขให้รองรับทุกกรณี
                if (!data) {
                    console.warn('getPriceStudyData returned null or undefined');
                    dataLoaded.priceStudy = true;
                    checkAndInitialize();
                    resolve();
                    return;
                }
                
                if (!Array.isArray(data)) {
                    console.warn('getPriceStudyData did not return an array:', typeof data);
                    dataLoaded.priceStudy = true;
                    checkAndInitialize();
                    resolve();
                    return;
                }
                
                if (data.length === 0) {
                    console.warn('getPriceStudyData returned empty array');
                    dataLoaded.priceStudy = true;
                    checkAndInitialize();
                    resolve();
                    return;
                }
                
                data.forEach(function(item) {
                    if (item && item.columnB) {
                        const key = item.columnB.toString().trim();
                        if (!priceStudyData.has(key)) {
                            priceStudyData.set(key, []);
                        }
                        priceStudyData.get(key).push(item);
                    }
                });
                
                console.log('Price study data loaded: ' + priceStudyData.size + ' items');
                dataLoaded.priceStudy = true;
                checkAndInitialize();
                resolve();
            })
            .withFailureHandler(function(error) {
                console.error('Error loading price study data:', error);
                dataLoaded.priceStudy = true;
                checkAndInitialize();
                resolve();
            })
            .getPriceStudyData();
    });
}

    async function loadStoreList() {
        return new Promise((resolve) => {
            google.script.run
                .withSuccessHandler((stores) => {
                    storeList = stores;
                    resolve();
                })
                .withFailureHandler((error) => {
                    console.error('Error loading store list:', error);
                    resolve();
                })
                .getStoreList();
        });
    }

    function checkAndInitialize() {
        if (dataLoaded.items && dataLoaded.priceStudy) {
            initializeUI();
        }
    }

    function updateDataStatus(type, status, count = 0) {
        const statusElement = document.getElementById(type + 'Status');
        if (!statusElement) return;
        
        const icon = statusElement.querySelector('.status-icon');
        const text = statusElement.querySelector('span');
        
        if (icon) icon.className = 'status-icon status-' + status;
        
        if (text) {
            if (status === 'success') {
                text.textContent = 'Items: ' + count.toLocaleString() + ' ລາຍການ ✓';
            } else if (status === 'error') {
                text.textContent = 'Items: ຜິດພາດ ✗';
            }
        }
    }

    function initializeUI() {
        const loadingSection = document.getElementById('loadingSection');
        const orderSection = document.getElementById('orderSection');
        
        if (loadingSection) loadingSection.style.display = 'none';
        if (orderSection) orderSection.style.display = 'block';
        
        currentOrderNumber = generateOrderNumber();
        document.getElementById('currentOrderNumber').textContent = currentOrderNumber;

        createLowStockAlertButton();
        checkLowStockAndShowAlert();
    }

    function generateOrderNumber() {
        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        
        return 'PO-' + year + month + day + '-' + hours + minutes;
    }

    function createLowStockAlertButton() {
        if (document.getElementById('lowStockAlertBtn')) return;

        const alertButton = document.createElement('button');
        alertButton.id = 'lowStockAlertBtn';
        alertButton.className = 'low-stock-alert-btn';
        alertButton.innerHTML = '🔔 ແຈ້ງເຕືອນສະຕັອກ <span class="stock-alert-badge" id="stockAlertBadge">0</span>';
        alertButton.onclick = showLowStockModal;
        document.body.appendChild(alertButton);

        createLowStockModal();
    }

    function createLowStockModal() {
        const modal = document.createElement('div');
        modal.id = 'lowStockModal';
        modal.className = 'low-stock-modal';
        
        const content = '<div class="low-stock-modal-content">' +
            '<div class="low-stock-modal-header">' +
            '<h2 class="low-stock-modal-title">🔔 ສິນຄ້າໃກ້ໜົດສະຕັອກ</h2>' +
            '<button class="stock-close-btn" onclick="closeLowStockModal()">×</button>' +
            '</div>' +
            '<div class="search-options">' +
            '<button class="search-option-btn active" onclick="setSearchMode(\'zone\')">📍 ເລືອກຕາມໂຊນ</button>' +
            '<button class="search-option-btn" onclick="setSearchMode(\'scan\')">📷 ສະແກນບາໂຄດ</button>' +
            '<button class="search-option-btn" onclick="setSearchMode(\'name\')">🔍 ຄົ້ນຫາຊື່</button>' +
            '</div>' +
            '<div id="searchInputContainer" class="search-input-container" style="display: none;">' +
            '<input type="text" id="searchInput" class="search-input" placeholder="ປ້ອນບາໂຄດ ຫຼື ຊື່ສິນຄ້າ...">' +
            '</div>' +
            '<div id="lowStockContent"></div>' +
            '<button id="confirmSelectionBtn" class="confirm-selection-btn" style="display: none;" onclick="confirmItemSelection()">✅ ຢືນຢັນການເລືອກ</button>' +
            '</div>';
        
        modal.innerHTML = content;
        document.body.appendChild(modal);
        lowStockModal = modal;

        modal.addEventListener('click', function(e) {
            if (e.target === modal) closeLowStockModal();
        });
        
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', handleSearch);
        }
    }

    function setSearchMode(mode) {
        currentSearchMode = mode;
        
        document.querySelectorAll('.search-option-btn').forEach(function(btn) {
            btn.classList.remove('active');
        });
        event.target.classList.add('active');
        
        const searchContainer = document.getElementById('searchInputContainer');
        const searchInput = document.getElementById('searchInput');
        const confirmBtn = document.getElementById('confirmSelectionBtn');
        
        if (mode === 'zone') {
            searchContainer.style.display = 'none';
            confirmBtn.style.display = 'none';
            displayZoneView();
        } else {
            searchContainer.style.display = 'block';
            confirmBtn.style.display = 'block';
            searchInput.value = '';
            searchInput.placeholder = mode === 'scan' ? 'ປ້ອນບາໂຄດ...' : 'ປ້ອນຊື່ສິນຄ້າ...';
            searchInput.focus();
            document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
        }
    }

    function handleSearch(e) {
        const query = e.target.value.trim().toLowerCase();
        
        if (!query) {
            document.getElementById('lowStockContent').innerHTML = '<p style="text-align: center; color: #999;">ກະລຸນາປ້ອນຂໍ້ມູນເພື່ອຄົ້ນຫາ</p>';
            return;
        }
        
        const results = [];
        
        if (currentSearchMode === 'scan') {
            itemsData.forEach(function(item, barcode) {
                if (barcode.toLowerCase().includes(query)) {
                    const stockRemaining = parseFloat(item.columnF) || 0;
                    const reorderPoint = parseFloat(item.columnD) || 0;
                    
                    if (stockRemaining < reorderPoint && reorderPoint > 0) {
                        const barcodeBox = item.columnJ || barcode;
                        itemsData.forEach(function(relatedItem, relatedBarcode) {
                            if ((relatedItem.columnJ || relatedBarcode) === barcodeBox) {
                                const relatedStock = parseFloat(relatedItem.columnF) || 0;
                                const relatedReorder = parseFloat(relatedItem.columnD) || 0;
                                
                                if (relatedStock < relatedReorder && relatedReorder > 0) {
                                    results.push({
                                        barcode: relatedBarcode,
                                        barcodeBox: relatedItem.columnJ || relatedBarcode,
                                        itemName: relatedItem.columnB || 'ບໍ່ມີຊື່',
                                        reorderPoint: relatedReorder,
                                        stockRemaining: relatedStock,
                                        unit: relatedItem.columnH || 'ຊິ້ນ',
                                        quantityPerUnit: parseFloat(relatedItem.columnI) || 1,
                                        image: relatedItem.columnK || '',
                                        zone: relatedItem.columnM || 'ບໍ່ລະບຸໂຊນ',
                                        price: parseFloat(relatedItem.columnN) || 0
                                    });
                                }
                            }
                        });
                    }
                }
            });
        } else if (currentSearchMode === 'name') {
            itemsData.forEach(function(item, barcode) {
                const itemName = (item.columnB || '').toLowerCase();
                
                if (itemName.includes(query)) {
                    const stockRemaining = parseFloat(item.columnF) || 0;
                    const reorderPoint = parseFloat(item.columnD) || 0;
                    
                    if (stockRemaining < reorderPoint && reorderPoint > 0) {
                        const barcodeBox = item.columnJ || barcode;
                        itemsData.forEach(function(relatedItem, relatedBarcode) {
                            if ((relatedItem.columnJ || relatedBarcode) === barcodeBox) {
                                const relatedStock = parseFloat(relatedItem.columnF) || 0;
                                const relatedReorder = parseFloat(relatedItem.columnD) || 0;
                                
                                if (relatedStock < relatedReorder && relatedReorder > 0) {
                                    results.push({
                                        barcode: relatedBarcode,
                                        barcodeBox: relatedItem.columnJ || relatedBarcode,
                                        itemName: relatedItem.columnB || 'ບໍ່ມີຊື່',
                                        reorderPoint: relatedReorder,
                                        stockRemaining: relatedStock,
                                        unit: relatedItem.columnH || 'ຊິ້ນ',
                                        quantityPerUnit: parseFloat(relatedItem.columnI) || 1,
                                        image: relatedItem.columnK || '',
                                        zone: relatedItem.columnM || 'ບໍ່ລະບຸໂຊນ',
                                        price: parseFloat(relatedItem.columnN) || 0
                                    });
                                }
                            }
                        });
                    }
                }
            });
        }
        
        displaySearchResults(results);
    }

    function displaySearchResults(results) {
        const content = document.getElementById('lowStockContent');
        
        if (results.length === 0) {
            content.innerHTML = '<p style="text-align: center; color: #999;">ບໍ່ພົບຂໍ້ມູນ</p>';
            return;
        }
        
        const uniqueResults = [];
        const seenBarcodes = new Set();
        
        results.forEach(function(item) {
            if (!seenBarcodes.has(item.barcode)) {
                seenBarcodes.add(item.barcode);
                uniqueResults.push(item);
            }
        });
        
        let html = '<div class="search-results">';
        
        uniqueResults.forEach(function(item) {
            const isSelected = selectedItemsForOrder.has(item.barcode);
            const quantity = isSelected ? getItemQuantityFromOrder(item.barcode) : 1;
            
            html += '<div class="selectable-item ' + (isSelected ? 'selected' : '') + '" data-barcode="' + item.barcode + '">';
            html += '<input type="checkbox" class="item-checkbox" ' + (isSelected ? 'checked' : '') + ' onchange="toggleItemSelection(\'' + item.barcode + '\')">';
            
            if (item.image) {
                html += '<img src="' + item.image + '" class="item-image-small">';
            } else {
                html += '<div class="no-product-image">📷</div>';
            }
            
            html += '<div class="item-info-block">';
            html += '<div class="item-name-large">' + item.itemName + '</div>';
            html += '<div class="item-details-small">ລະຫັດ: ' + item.barcode + ' | ໂຊນ: ' + item.zone + '</div>';
            html += '</div>';
            html += '<div class="item-quantity-container">';
            html += '<span class="quantity-label">ຈຳນວນ:</span>';
            html += '<input type="number" class="quantity-input" value="' + quantity + '" min="1" onchange="updateItemQuantity(\'' + item.barcode + '\', this.value)">';
            html += '</div>';
            html += '</div>';
        });
        
        html += '</div>';
        content.innerHTML = html;
    }

    function displayZoneView() {
        if (!lowStockData || Object.keys(lowStockData).length === 0) {
            checkLowStockAndShowAlert();
        }
        
        const content = document.getElementById('lowStockContent');
        
        if (!lowStockData || Object.keys(lowStockData).length === 0) {
            content.innerHTML = '<div class="stock-empty-state"><i>✅</i><h3>ບໍ່ມີສິນຄ້າໃກ້ໜົດສະຕັອກ</h3></div>';
            return;
        }

        const sortedZones = Object.entries(lowStockData).sort(function(a, b) {
            return a[0].localeCompare(b[0]);
        });

        let html = '';
        sortedZones.forEach(function(zoneEntry) {
            const zoneName = zoneEntry[0];
            const zoneData = zoneEntry[1];
            const productCount = Object.keys(zoneData.products).length;
            const zoneId = 'zone_' + zoneName.replace(/\W/g, '');

            html += '<div class="zone-card" onclick="toggleZoneDetails(\'' + zoneId + '\')">';
            html += '<div class="zone-card-header">';
            html += '<div class="zone-name">📍 โซນ: ' + zoneName + '</div>';
            html += '<div class="zone-count">' + productCount + ' ລາຍການ</div>';
            html += '</div>';
            html += '<div id="' + zoneId + '" class="zone-details">';
            html += generateZoneDetailsHTMLWithSelection(zoneData);
            html += '</div>';
            html += '</div>';
        });

        content.innerHTML = html;
    }

    function generateZoneDetailsHTMLWithSelection(zoneData) {
        let html = '';
        let itemNumber = 1;
        const icons = ['🟡', '🟠', '🔵', '🟢', '🟣', '🔴'];

        Object.entries(zoneData.products).forEach(function(entry) {
            const barcodeBox = entry[0];
            const productGroup = entry[1];
            
            html += '<div class="product-group">';
            html += '<div class="product-group-header">';
            html += '<strong>' + itemNumber + '. ລະຫັດ: ' + barcodeBox + '</strong>';
            html += '<div class="product-stock-info">';
            html += '<span class="stock-alert-text">ແຈ້ງເຕືອນ ' + productGroup.reorderPoint + '</span>';
            html += '<span class="stock-remain-text">ເຫຼືອສະຕັອກ ' + productGroup.stockRemaining + '</span>';
            html += '</div>';
            html += '</div>';

            productGroup.items.forEach(function(item, index) {
                let quantity = item.stockRemaining / item.quantityPerUnit;
                quantity = quantity % 1 === 0 ? Math.round(quantity) : quantity.toFixed(2);
                
                const isSelected = selectedItemsForOrder.has(item.barcode);
                const orderQty = isSelected ? getItemQuantityFromOrder(item.barcode) : 1;

                html += '<div class="product-item selectable-item ' + (isSelected ? 'selected' : '') + '" data-barcode="' + item.barcode + '" onclick="event.stopPropagation()">';
                html += '<input type="checkbox" class="item-checkbox" ' + (isSelected ? 'checked' : '') + ' onchange="toggleItemSelection(\'' + item.barcode + '\')">';
                html += '<span class="product-icon">' + icons[index % icons.length] + '</span>';
                
                if (item.image) {
                    html += '<img src="' + item.image + '" class="product-image">';
                } else {
                    html += '<div class="no-product-image">📷</div>';
                }
                
                html += '<div class="product-info">';
                html += '<div class="product-name">' + item.itemName + '</div>';
                html += '<div class="product-details">ລະຫັດ: ' + item.barcode + ' | ຈໍານວນ: ' + quantity + ' ' + item.unit + '</div>';
                html += '</div>';
                html += '<div class="item-quantity-container">';
                html += '<span class="quantity-label">ສັ່ງຊື້:</span>';
                html += '<input type="number" class="quantity-input" value="' + orderQty + '" min="1" onclick="event.stopPropagation()" onchange="updateItemQuantity(\'' + item.barcode + '\', this.value)">';
                html += '</div>';
                html += '</div>';
            });

            html += '</div>';
            itemNumber++;
        });

        return html;
    }

    function toggleItemSelection(barcode) {
        const item = itemsData.get(barcode);
        if (!item) return;
        
        if (selectedItemsForOrder.has(barcode)) {
            selectedItemsForOrder.delete(barcode);
        } else {
            selectedItemsForOrder.add(barcode);
        }
        
        if (currentSearchMode === 'zone') {
            displayZoneView();
        } else {
            const searchInput = document.getElementById('searchInput');
            if (searchInput && searchInput.value) {
                handleSearch({ target: searchInput });
            }
        }
    }

    function updateItemQuantity(barcode, quantity) {
        const qty = parseInt(quantity) || 1;
        
        if (!selectedItemsForOrder.has(barcode)) {
            selectedItemsForOrder.add(barcode);
        }
        
        const existingIndex = orderItems.findIndex(function(item) {
            return item.barcode === barcode;
        });
        if (existingIndex >= 0) {
            orderItems[existingIndex].quantity = qty;
        }
    }

    function getItemQuantityFromOrder(barcode) {
        const item = orderItems.find(function(i) {
            return i.barcode === barcode;
        });
        return item ? item.quantity : 1;
    }

    function confirmItemSelection() {
        if (selectedItemsForOrder.size === 0) {
            alert('ກະລຸນາເລືອກສິນຄ້າກ່ອນ');
            return;
        }
        
        selectedItemsForOrder.forEach(function(barcode) {
            const item = itemsData.get(barcode);
            if (!item) return;
            
            const existingIndex = orderItems.findIndex(function(i) {
                return i.barcode === barcode;
            });
            
            const quantityInputs = document.querySelectorAll('[data-barcode="' + barcode + '"] .quantity-input');
            const quantity = quantityInputs.length > 0 ? parseInt(quantityInputs[0].value) || 1 : 1;
            
            const orderItem = {
                barcode: barcode,
                itemName: item.columnB || 'ບໍ່ມີຊື່',
                unit: item.columnH || 'ຊິ້ນ',
                quantity: quantity,
                price: parseFloat(item.columnN) || 0,
                image: item.columnK || '',
                total: quantity * (parseFloat(item.columnN) || 0)
            };
            
            if (existingIndex >= 0) {
                orderItems[existingIndex] = orderItem;
            } else {
                orderItems.push(orderItem);
            }
        });
        
        updateOrderTable();
        closeLowStockModal();
        
        alert('ເພີ່ມ ' + selectedItemsForOrder.size + ' ລາຍການລົງໃນຕາຕະລາງສຳເລັດ');
    }

    function checkLowStockAndShowAlert() {
        if (!itemsData || itemsData.size === 0) return;

        const lowStockItems = [];

        itemsData.forEach(function(item) {
            const stockRemaining = parseFloat(item.columnF) || 0;
            const reorderPoint = parseFloat(item.columnD) || 0;

            if (stockRemaining < reorderPoint && reorderPoint > 0) {
                lowStockItems.push({
                    barcode: item.columnA || '',
                    barcodeBox: item.columnJ || '',
                    itemName: item.columnB || 'ບໍ່ມີຊື່',
                    reorderPoint: reorderPoint,
                    stockRemaining: stockRemaining,
                    unit: item.columnH || 'ຊິ້ນ',
                    quantityPerUnit: parseFloat(item.columnI) || 1,
                    image: item.columnK || '',
                    zone: item.columnM || 'ບໍ່ລະບຸໂຊນ',
                    price: parseFloat(item.columnN) || 0
                });
            }
        });

        if (lowStockItems.length > 0) {
            lowStockData = groupLowStockByZone(lowStockItems);
            
            const alertBtn = document.getElementById('lowStockAlertBtn');
            if (alertBtn) {
                alertBtn.classList.add('show');
                
                const totalItems = Object.values(lowStockData).reduce(function(sum, zone) {
                    return sum + Object.keys(zone.products).length;
                }, 0);
                
                const badge = document.getElementById('stockAlertBadge');
                if (badge) badge.textContent = totalItems;
            }
        }
    }

    function groupLowStockByZone(items) {
        const grouped = {};

        items.forEach(function(item) {
            const zone = item.zone;
            const barcodeBox = item.barcodeBox || item.barcode;

            if (!grouped[zone]) {
                grouped[zone] = { zoneName: zone, products: {} };
            }

            if (!grouped[zone].products[barcodeBox]) {
                grouped[zone].products[barcodeBox] = {
                    barcodeBox: barcodeBox,
                    reorderPoint: item.reorderPoint,
                    stockRemaining: item.stockRemaining,
                    items: []
                };
            }

            grouped[zone].products[barcodeBox].items.push(item);
        });

        return grouped;
    }

    function showLowStockModal() {
        if (!lowStockModal) return;
        
        currentSearchMode = 'zone';
        document.querySelectorAll('.search-option-btn').forEach(function(btn) {
            btn.classList.remove('active');
        });
        document.querySelectorAll('.search-option-btn')[0].classList.add('active');
        
        document.getElementById('searchInputContainer').style.display = 'none';
        document.getElementById('confirmSelectionBtn').style.display = 'none';
        
        displayZoneView();
        lowStockModal.classList.add('show');
    }

    function toggleZoneDetails(zoneId) {
        const element = document.getElementById(zoneId);
        if (element) element.classList.toggle('show');
    }

    function closeLowStockModal() {
        if (lowStockModal) lowStockModal.classList.remove('show');
    }

    function updateOrderTable() {
        const tbody = document.getElementById('orderTableBody');
        const comparePriceBtn = document.getElementById('comparePriceBtn');
        
        if (!tbody) return;
        
        if (orderItems.length === 0) {
            tbody.innerHTML = '<tr><td colspan="9" style="text-align: center; padding: 40px; color: #999;">ຍັງບໍ່ມີລາຍການສັ່ງຊື້<br>ກົດປຸ່ມ "🔔 ແຈ້ງເຕືອນສະຕັອກ" ເພື່ອເລືອກສິນຄ້າ</td></tr>';
            comparePriceBtn.disabled = true;
            updateOrderTotal();
            return;
        }
        
        comparePriceBtn.disabled = false;
        
        let html = '';
        orderItems.forEach(function(item, index) {
            const highlightClass = selectedItemsForOrder.has(item.barcode) ? 'item-highlighted' : '';
            const imgHtml = item.image ? '<img src="' + item.image + '" class="order-table-img">' : '<div class="no-order-img">📷</div>';
            
            html += '<tr class="' + highlightClass + '">';
            html += '<td>' + (index + 1) + '</td>';
            html += '<td>' + item.barcode + '</td>';
            html += '<td>' + imgHtml + '</td>';
            html += '<td>' + item.itemName + '</td>';
            html += '<td>' + item.unit + '</td>';
            html += '<td><input type="number" class="order-quantity-input" value="' + item.quantity + '" min="1" onchange="updateOrderItemQuantity(' + index + ', this.value)"></td>';
            html += '<td>' + item.price.toLocaleString() + '</td>';
            html += '<td>' + (item.quantity * item.price).toLocaleString() + '</td>';
            html += '<td><button class="btn-delete-item" onclick="deleteOrderItem(' + index + ')">❌</button></td>';
            html += '</tr>';
        });
        
        tbody.innerHTML = html;
        updateOrderTotal();
    }

    function updateOrderItemQuantity(index, quantity) {
        const qty = parseInt(quantity) || 1;
        orderItems[index].quantity = qty;
        orderItems[index].total = qty * orderItems[index].price;
        updateOrderTable();
    }

    function deleteOrderItem(index) {
        const item = orderItems[index];
        selectedItemsForOrder.delete(item.barcode);
        orderItems.splice(index, 1);
        updateOrderTable();
    }

    function updateOrderTotal() {
        const total = orderItems.reduce(function(sum, item) {
            return sum + item.total;
        }, 0);
        document.getElementById('orderTotalAmount').textContent = total.toLocaleString();
    }

    function showStoreSelectorModal() {
        if (orderItems.length === 0) {
            alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
            return;
        }
        
        const modal = document.createElement('div');
        modal.id = 'storeSelectorModal';
        modal.className = 'store-selector-modal show';
        
        modal.innerHTML = '<div class="store-selector-content">' +
            '<div class="store-selector-header">⚖️ ເລືອກຮ້ານເພື່ອປຽບທຽບລາຄາ</div>' +
            '<input type="text" id="storeSearchInput" class="store-search-input" placeholder="ຄົ້ນຫາຮ້ານ..." onkeyup="filterStores()">' +
            '<div class="store-list" id="storeListContainer">' + generateStoreListHTML() + '</div>' +
            '<div class="store-selector-actions">' +
            '<button class="btn-cancel-stores" onclick="closeStoreSelectorModal()">ຍົກເລີກ</button>' +
            '<button class="btn-confirm-stores" onclick="confirmStoreSelection()">ຢືນຢັນ</button>' +
            '</div>' +
            '</div>';
        
        document.body.appendChild(modal);
        
        modal.addEventListener('click', function(e) {
            if (e.target === modal) closeStoreSelectorModal();
        });
    }

    function generateStoreListHTML() {
        if (!storeList || storeList.length === 0) {
            return '<p style="text-align: center; color: #999;">ບໍ່ມີຂໍ້ມູນຮ້ານ</p>';
        }
        
        let html = '';
        storeList.forEach(function(store) {
            html += '<div class="store-item" onclick="toggleStoreSelection(\'' + store + '\')">';
            html += '<input type="checkbox" class="store-checkbox" value="' + store + '" onchange="event.stopPropagation(); toggleStoreSelection(\'' + store + '\')">';
            html += '<span>' + store + '</span>';
            html += '</div>';
        });
        
        return html;
    }

    function filterStores() {
        const input = document.getElementById('storeSearchInput');
        const filter = input.value.toLowerCase();
        const container = document.getElementById('storeListContainer');
        const items = container.getElementsByClassName('store-item');
        
        for (let i = 0; i < items.length; i++) {
            const text = items[i].textContent || items[i].innerText;
            if (text.toLowerCase().indexOf(filter) > -1) {
                items[i].style.display = '';
            } else {
                items[i].style.display = 'none';
            }
        }
    }

    function toggleStoreSelection(storeName) {
        const item = event.currentTarget;
        const checkbox = item.querySelector('.store-checkbox');
        
        item.classList.toggle('selected');
        checkbox.checked = !checkbox.checked;
    }

    function confirmStoreSelection() {
        const checkboxes = document.querySelectorAll('.store-checkbox:checked');
        const selectedStores = Array.from(checkboxes).map(function(cb) {
            return cb.value;
        });
        
        if (selectedStores.length === 0) {
            alert('ກະລຸນາເລືອກຮ້ານຢ່າງໜ້ອຍ 1 ຮ້ານ');
            return;
        }
        
        closeStoreSelectorModal();
        generateComparisonTables(selectedStores);
    }

    function closeStoreSelectorModal() {
        const modal = document.getElementById('storeSelectorModal');
        if (modal) modal.remove();
    }

    function generateComparisonTables(stores) {
        const compareSection = document.getElementById('compareSection');
        if (!compareSection) return;
        
        compareSection.style.display = 'block';
        compareSection.innerHTML = '<h3 style="color: #ffa726; margin-bottom: 20px;">📊 ຕາຕະລາງປຽບທຽບລາຄາ</h3>';
        
        stores.forEach(function(storeName) {
            const tableHtml = generateSingleComparisonTable(storeName);
            compareSection.innerHTML += tableHtml;
        });
    }

    function generateSingleComparisonTable(storeName) {
        let html = '<div class="compare-table-container">' +
            '<div class="compare-table-header">🏪 ' + storeName + '</div>' +
            '<div class="order-table-wrapper">' +
            '<table class="order-table">' +
            '<thead><tr>' +
            '<th>ລຳດັບ</th><th>ລະຫັດ</th><th>ຮູບ</th><th>ຊື່ສິນຄ້າ</th>' +
            '<th>ຫົວໜ່ວຍ</th><th>ຈຳນວນ</th><th>ລາຄາ/ໜ່ວຍ</th><th>ລວມເງິນ</th><th>ແຫຼ່ງຂໍ້ມູນ</th>' +
            '</tr></thead><tbody>';
        
        let totalAmount = 0;
        
        orderItems.forEach(function(orderItem, index) {
            const priceStudyItems = priceStudyData.get(orderItem.barcode) || [];
            const matchingItem = priceStudyItems.find(function(item) {
                return (item.columnF || '').trim() === storeName.trim();
            });
            
            let displayItem, source;
            
            if (matchingItem) {
                displayItem = {
                    barcode: matchingItem.columnB || orderItem.barcode,
                    itemName: matchingItem.columnC || orderItem.itemName,
                    unit: matchingItem.columnE || orderItem.unit,
                    quantity: orderItem.quantity,
                    price: parseFloat(matchingItem.columnH) || 0,
                    image: matchingItem.columnL || orderItem.image
                };
                source = 'price-study';
            } else {
                displayItem = {
                    barcode: orderItem.barcode,
                    itemName: orderItem.itemName,
                    unit: orderItem.unit,
                    quantity: orderItem.quantity,
                    price: orderItem.price,
                    image: orderItem.image
                };
                source = 'items';
            }
            
            const itemTotal = displayItem.quantity * displayItem.price;
            totalAmount += itemTotal;
            
            const imgHtml = displayItem.image ? '<img src="' + displayItem.image + '" class="order-table-img">' : '<div class="no-order-img">📷</div>';
            const badgeClass = source === 'items' ? 'badge-items' : 'badge-price-study';
            const badgeText = source === 'items' ? 'Items' : 'ສຶກສາລາຄາ';
            
            html += '<tr>';
            html += '<td>' + (index + 1) + '</td>';
            html += '<td>' + displayItem.barcode + '</td>';
            html += '<td>' + imgHtml + '</td>';
            html += '<td>' + displayItem.itemName + '</td>';
            html += '<td>' + displayItem.unit + '</td>';
            html += '<td>' + displayItem.quantity + '</td>';
            html += '<td>' + displayItem.price.toLocaleString() + '</td>';
            html += '<td>' + itemTotal.toLocaleString() + '</td>';
            html += '<td><span class="item-source-badge ' + badgeClass + '">' + badgeText + '</span></td>';
            html += '</tr>';
        });
        
        html += '</tbody></table></div>' +
            '<div class="order-footer">' +
            '<div class="order-total">💰 ລວມທັງໝົດ: ' + totalAmount.toLocaleString() + ' ກີບ</div>' +
            '</div></div>';
        
        return html;
    }

    function saveAndPrint() {
        if (orderItems.length === 0) {
            alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
            return;
        }
        
        const printDiv = document.createElement('div');
        printDiv.style.display = 'none';
        printDiv.id = 'printArea';
        printDiv.className = 'print-area';
        
        const now = new Date();
        const dateStr = now.toLocaleDateString('lo-LA');
        const total = orderItems.reduce(function(sum, item) {
            return sum + item.total;
        }, 0);
        
        let itemsRows = '';
        orderItems.forEach(function(item, index) {
            const imgTag = item.image ? '<img src="' + item.image + '" style="width: 50px; height: 50px; object-fit: cover;">' : '📷';
            
            itemsRows += '<tr>' +
                '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + (index + 1) + '</td>' +
                '<td style="padding: 10px; border: 1px solid #ddd;">' + item.barcode + '</td>' +
                '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + imgTag + '</td>' +
                '<td style="padding: 10px; border: 1px solid #ddd;">' + item.itemName + '</td>' +
                '<td style="text-align: center; padding: 10px; border: 1px solid #ddd;">' + item.quantity + ' ' + item.unit + '</td>' +
                '<td style="text-align: right; padding: 10px; border: 1px solid #ddd;">' + item.price.toLocaleString() + '</td>' +
                '<td style="text-align: right; padding: 10px; border: 1px solid #ddd;">' + item.total.toLocaleString() + '</td>' +
                '</tr>';
        });
        
        printDiv.innerHTML = '<style>@media print { body * { visibility: hidden; } #printArea, #printArea * { visibility: visible; } #printArea { position: absolute; left: 0; top: 0; width: 100%; padding: 20px; } }</style>' +
            '<div style="font-family: \'Noto Sans Lao\', Arial, sans-serif;">' +
            '<div style="text-align: center; margin-bottom: 30px;"><h1 style="color: #4facfe; margin: 0;">🏢 ໃບສັ່ງຊື້ສິນຄ້າ</h1></div>' +
            '<div style="margin-bottom: 20px;"><p><strong>ເລກທີ:</strong> ' + currentOrderNumber + '</p><p><strong>ວັນທີ:</strong> ' + dateStr + '</p></div>' +
            '<table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">' +
            '<thead><tr style="background: #4facfe; color: white;">' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ລຳດັບ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ລະຫັດສິນຄ້າ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ຮູບ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ຊື່ສິນຄ້າ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ຈຳນວນ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ລາຄາ/ໜ່ວຍ</th>' +
            '<th style="padding: 12px; border: 1px solid #ddd;">ລວມເງິນ</th>' +
            '</tr></thead><tbody>' + itemsRows +
            '<tr style="background: #f0f0f0; font-weight: bold; font-size: 1.2em;">' +
            '<td colspan="6" style="text-align: right; padding: 15px; border: 1px solid #ddd;">ລວມທັງໝົດ:</td>' +
            '<td style="text-align: right; padding: 15px; border: 1px solid #ddd;">' + total.toLocaleString() + ' ກີບ</td>' +
            '</tr></tbody></table>' +
            '<div style="margin-top: 50px; display: flex; justify-content: space-around;">' +
            '<div style="text-align: center;"><p>ລາຍເຊັນຜູ້ສັ່ງ</p><p style="margin-top: 50px;">_________________</p></div>' +
            '<div style="text-align: center;"><p>ລາຍເຊັນຜູ້ອະນຸມັດ</p><p style="margin-top: 50px;">_________________</p></div>' +
            '</div></div>';
        
        document.body.appendChild(printDiv);
        window.print();
        
        setTimeout(function() {
            printDiv.remove();
            if (confirm('ປຶມສຳເລັດແລ້ວບໍ? ກົດຢືນຢັນເພື່ອບັນທຶກຂໍ້ມູນ')) {
                saveOrderToSheet('PRINT');
            }
        }, 500);
    }

    function saveAndWhatsapp() {
        if (orderItems.length === 0) {
            alert('ກະລຸນາເພີ່ມສິນຄ້າລົງໃນຕາຕະລາງກ່ອນ');
            return;
        }
        
        const message = generateWhatsAppMessage();
        const whatsappUrl = 'https://wa.me/?text=' + encodeURIComponent(message);
        
        window.open(whatsappUrl, '_blank');
        
        setTimeout(function() {
            if (confirm('ສົ່ງ WhatsApp ສຳເລັດແລ້ວບໍ? ກົດຢືນຢັນເພື່ອບັນທຶກຂໍ້ມູນ')) {
                saveOrderToSheet('WHATSAPP');
            }
        }, 2000);
    }

    function generateWhatsAppMessage() {
        const total = orderItems.reduce(function(sum, item) {
            return sum + item.total;
        }, 0);
        const now = new Date();
        const dateStr = now.toLocaleDateString('lo-LA');
        
        let message = '🧾 *ໃບສັ່ງຊື້ສິນຄ້າ*\n';
        message += 'ເລກທີ: ' + currentOrderNumber + '\n';
        message += 'ວັນທີ: ' + dateStr + '\n\n';
        message += '━━━━━━━━━━━━━━━━━━\n';
        
        orderItems.forEach(function(item, index) {
            message += (index + 1) + '️⃣ ' + item.itemName + '\n';
            message += '   • ລະຫັດ: ' + item.barcode + '\n';
            message += '   • ຈຳນວນ: ' + item.quantity + ' ' + item.unit + '\n';
            message += '   • ລາຄາ: ' + item.total.toLocaleString() + ' ກີບ\n\n';
        });
        
        message += '━━━━━━━━━━━━━━━━━━\n';
        message += '💰 *ລວມທັງໝົດ: ' + total.toLocaleString() + ' ກີບ*';
        
        return message;
    }

    function saveOrderToSheet(method) {
        const orderData = {
            orderNumber: currentOrderNumber,
            items: orderItems,
            method: method
        };
        
        google.script.run
            .withSuccessHandler(function(result) {
                if (result.success) {
                    alert('ບັນທຶກຂໍ້ມູນສຳເລັດ!');
                    
                    orderItems = [];
                    selectedItemsForOrder.clear();
                    updateOrderTable();
                    
                    const compareSection = document.getElementById('compareSection');
                    if (compareSection) compareSection.style.display = 'none';
                    
                    currentOrderNumber = generateOrderNumber();
                    document.getElementById('currentOrderNumber').textContent = currentOrderNumber;
                } else {
                    alert('ເກີດຂໍ້ຜິດພາດ: ' + result.error);
                }
            })
            .withFailureHandler(function(error) {
                alert('ເກີດຂໍ້ຜິດພາດໃນການບັນທຶກ: ' + error.message);
            })
            .saveOrder(orderData);
    }

    function showLoadOrderModal() {
        const orderNumber = prompt('ປ້ອນເລກທີໃບສັ່ງຊື້ທີ່ຕ້ອງການດຶງ:');
        
        if (!orderNumber) return;
        
        google.script.run
            .withSuccessHandler(function(result) {
                if (result.success && result.items.length > 0) {
                    orderItems = result.items;
                    
                    result.items.forEach(function(item) {
                        selectedItemsForOrder.add(item.barcode);
                    });
                    
                    updateOrderTable();
                    alert('ດຶງຂໍ້ມູນສຳເລັດ: ' + result.items.length + ' ລາຍການ');
                } else {
                    alert('ບໍ່ພົບໃບສັ່ງຊື້ນີ້');
                }
            })
            .withFailureHandler(function(error) {
                alert('ເກີດຂໍ້ຜິດພາດ: ' + error.message);
            })
            .loadOrder(orderNumber);
    }

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            if (lowStockModal && lowStockModal.classList.contains('show')) {
                closeLowStockModal();
            }
            
            const storeModal = document.getElementById('storeSelectorModal');
            if (storeModal) {
                closeStoreSelectorModal();
            }
        }
    });
    </script>
</body>
</html>



<!DOCTYPE html>
<html lang="lo">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫Ç‡∫≤‡∫ç‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</title>
    <style>


/* ==============================================
   üîê LOGIN SYSTEM STYLES
   ============================================== */

.login-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.85);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 99999;
    backdrop-filter: blur(10px);
}

.login-modal {
    background: white;
    border-radius: 25px;
    padding: 40px;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 30px 60px rgba(0, 0, 0, 0.3);
    animation: loginModalAppear 0.4s ease-out;
}

@keyframes loginModalAppear {
    from {
        opacity: 0;
        transform: scale(0.8) translateY(-50px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

.login-header {
    text-align: center;
    margin-bottom: 35px;
}

.login-header h2 {
    font-size: 2rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 10px;
}

.login-header p {
    color: #666;
    font-size: 1rem;
}

.login-form-group {
    margin-bottom: 25px;
}

.login-form-label {
    display: block;
    font-weight: bold;
    margin-bottom: 10px;
    color: #333;
    font-size: 1rem;
}

.login-form-input {
    width: 100%;
    padding: 15px 20px;
    border: 3px solid #e1e5e9;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-sizing: border-box;
}

.login-form-input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.login-autocomplete-container {
    position: relative;
}

.login-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 3px solid #e1e5e9;
    border-top: none;
    border-radius: 0 0 12px 12px;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
}

.login-suggestion-item {
    padding: 12px 20px;
    cursor: pointer;
    transition: background 0.2s ease;
    border-bottom: 1px solid #f0f0f0;
}

.login-suggestion-item:hover {
    background: #f8f9ff;
}

.login-suggestion-item:last-child {
    border-bottom: none;
}

.login-btn {
    width: 100%;
    padding: 15px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.2rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    margin-top: 10px;
}

.login-btn:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
}

.login-btn:disabled {
    background: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.login-error {
    background: #f8d7da;
    color: #721c24;
    padding: 12px 20px;
    border-radius: 10px;
    margin-top: 20px;
    text-align: center;
    display: none;
    animation: shake 0.5s ease-in-out;
}

.login-error.show {
    display: block;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
}

.login-success {
    background: #d4edda;
    color: #155724;
    padding: 12px 20px;
    border-radius: 10px;
    margin-top: 20px;
    text-align: center;
    display: none;
}

.login-success.show {
    display: block;
}

/* User Display in Header */
#currentUserDisplay {
    display: inline-flex;
    align-items: center;
    gap: 5px;
}

#currentUserDisplay::before {
    content: '|';
    margin-right: 10px;
    color: #e1e5e9;
}

/* Logout Button Styles */
.logout-btn {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 20px;
    cursor: pointer;
    font-size: 0.85rem;
    font-weight: bold;
    margin-left: 10px;
    transition: all 0.2s ease;
    box-shadow: 0 3px 10px rgba(255, 107, 107, 0.3);
}

.logout-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
}

/* Responsive Design */
@media (max-width: 768px) {
    .login-modal {
        padding: 25px;
        width: 95%;
    }
    
    .login-header h2 {
        font-size: 1.5rem;
    }
    
    #currentUserDisplay {
        display: block;
        margin-top: 10px;
        margin-left: 0 !important;
    }
    
    #currentUserDisplay::before {
        display: none;
    }
}








/* ==============================================
   üîß CHANGE CALCULATOR BUTTON & MODAL STYLES
   ============================================== */
/* Change Calculator Modal */
.change-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    font-family: inherit;
    padding: 20px;
    box-sizing: border-box;
}

.change-modal-content {
    background: white;
    border-radius: 20px;
    padding: 40px;
    max-width: 500px;
    width: 100%;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    animation: modalSlideIn 0.3s ease-out;
}

.change-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-bottom: 2px solid #f0f0f0;
}

.change-modal-title {
    font-size: 2rem;
    font-weight: bold;
    background: linear-gradient(135deg, #00b894 0%, #00cec9 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.change-close-btn {
    background: #f0f0f0;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.change-close-btn:hover {
    background: #e0e0e0;
    transform: rotate(90deg);
}

.change-summary {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 15px;
    padding: 20px;
    margin-bottom: 25px;
}

.change-summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px;
    margin-bottom: 10px;
    background: white;
    border-radius: 10px;
    font-size: 1.1rem;
}

.change-summary-row:last-child {
    margin-bottom: 0;
}

.change-summary-row.total {
    background: linear-gradient(135deg, #00b894 0%, #00cec9 100%);
    color: white;
    font-weight: bold;
    font-size: 1.3rem;
    box-shadow: 0 5px 15px rgba(0, 184, 148, 0.3);
}

.change-input-group {
    margin-bottom: 25px;
}

.change-input-label {
    display: block;
    font-weight: bold;
    margin-bottom: 10px;
    color: #333;
    font-size: 1.1rem;
}

.change-input-field {
    width: 100%;
    padding: 15px 20px;
    border: 3px solid #e1e5e9;
    border-radius: 10px;
    font-size: 1.5rem;
    text-align: center;
    font-weight: bold;
    transition: all 0.3s ease;
    box-sizing: border-box;
}

.change-input-field:focus {
    outline: none;
    border-color: #00b894;
    box-shadow: 0 0 0 3px rgba(0, 184, 148, 0.1);
}

.change-result {
    background: linear-gradient(135deg, #74b9ff 0%, #a29bfe 100%);
    border-radius: 15px;
    padding: 25px;
    text-align: center;
    transition: all 0.3s ease;
    min-height: 120px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.change-result.insufficient {
    background: linear-gradient(135deg, #ff7675 0%, #fd79a8 100%);
    animation: shake 0.5s ease-in-out;
}

.change-result.exact {
    background: linear-gradient(135deg, #00b894 0%, #00cec9 100%);
}

.change-result.has-change {
    background: linear-gradient(135deg, #74b9ff 0%, #a29bfe 100%);
    animation: bounceIn 0.5s ease-out;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
}

.change-result-label {
    font-size: 1.2rem;
    color: white;
    margin-bottom: 10px;
    opacity: 0.9;
}

.change-result-amount {
    font-size: 3rem;
    font-weight: bold;
    color: white;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Responsive Design */
@media (max-width: 768px) {
    .change-modal {
        padding: 10px;
    }
    
    .change-modal-content {
        padding: 25px;
    }
    
    .change-modal-title {
        font-size: 1.5rem;
    }
    
    .change-input-field {
        font-size: 1.3rem;
    }
    
    .change-result-amount {
        font-size: 2rem;
    }
    
    .change-calculator-btn {
        font-size: 1rem;
        padding: 12px 20px;
    }
}







/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö price input field
 * (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô <style> section ‡∏Ç‡∏≠‡∏á HTML)
 */
const priceInputCSS = `
.price-input {
    width: 100px;
    padding: 8px;
    border: 2px solid #e1e5e9;
    border-radius: 6px;
    text-align: center;
    font-size: 1rem;
    transition: border-color 0.2s ease;
}

.price-input:focus {
    border-color: #4facfe;
    outline: none;
    box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
}

.price-input:hover {
    border-color: #4facfe;
}

/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ */
.price-input.modified {
    background: #fff3cd !important;
    border-color: #ffc107 !important;
}
`;


      
/* ==============================================
   üîß ENHANCED DEBT MODAL STYLES
   ============================================== */

/* Price Option Cards */
.price-option-card {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border: 3px solid #e1e5e9;
    border-radius: 20px;
    padding: 30px 20px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 300px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    position: relative;
    overflow: hidden;
}

.price-option-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0,0,0,0.15);
    border-color: #4facfe;
}

.price-option-card.selected {
    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    border-color: #2196F3;
    color: white;
    transform: translateY(-8px);
    box-shadow: 0 15px 40px rgba(79, 172, 254, 0.3);
}

.price-option-card.selected::before {
    content: '‚úì';
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 24px;
    font-weight: bold;
    color: white;
    background: rgba(255,255,255,0.2);
    width: 35px;
    height: 35px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.option-icon {
    font-size: 3rem;
    margin-bottom: 15px;
    opacity: 0.8;
}

.option-title {
    font-size: 1.3rem;
    font-weight: bold;
    margin-bottom: 8px;
}

.option-subtitle {
    font-size: 1.1rem;
    margin-bottom: 12px;
    opacity: 0.9;
}

.option-description {
    font-size: 0.9rem;
    opacity: 0.8;
    line-height: 1.4;
}

.price-option-card.selected .option-icon,
.price-option-card.selected .option-title,
.price-option-card.selected .option-subtitle,
.price-option-card.selected .option-description {
    opacity: 1;
}

/* WhatsApp Action Buttons */
.whatsapp-action-btn {
    background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
    color: white;
    border: none;
    padding: 15px 30px;
    border-radius: 15px;
    font-size: 1.1rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);
    display: flex;
    align-items: center;
    gap: 8px;
}

.whatsapp-action-btn:hover:not(:disabled) {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(37, 211, 102, 0.4);
}

.whatsapp-action-btn:disabled {
    background: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
    opacity: 0.6;
}

.whatsapp-action-btn:nth-child(2) {
    background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
    box-shadow: 0 5px 15px rgba(67, 233, 123, 0.3);
}

.whatsapp-action-btn:nth-child(2):hover:not(:disabled) {
    box-shadow: 0 8px 25px rgba(67, 233, 123, 0.4);
}

/* Enhanced Autocomplete Container */
.enhanced-autocomplete-container {
    position: relative;
    display: flex;
    align-items: stretch;
}

.enhanced-autocomplete-container input[type="text"] {
    flex: 1;
    border-radius: 10px 0 0 10px;
    border-right: none;
}

.dropdown-toggle {
    background: #f8f9fa;
    border: 2px solid #e1e5e9;
    border-left: none;
    border-radius: 0 10px 10px 0;
    padding: 0 15px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.9rem;
    color: #666;
}

.dropdown-toggle:hover {
    background: #e9ecef;
    color: #333;
}

/* Enhanced Dropdown */
.enhanced-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 2px solid #e1e5e9;
    border-top: none;
    border-radius: 0 0 15px 15px;
    z-index: 1000;
    display: none;
    max-height: 400px;
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    overflow: hidden;
}

.dropdown-header {
    padding: 15px;
    border-bottom: 1px solid #e1e5e9;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.dropdown-search {
    width: 100%;
    padding: 10px 15px;
    border: 2px solid #e1e5e9;
    border-radius: 8px;
    font-size: 0.9rem;
    outline: none;
    transition: border-color 0.2s ease;
}

.dropdown-search:focus {
    border-color: #4facfe;
}

.dropdown-list {
    max-height: 300px;
    overflow-y: auto;
}

.dropdown-item {
    padding: 15px;
    cursor: pointer;
    transition: background 0.2s ease;
    border-bottom: 1px solid #f0f0f0;
}

.dropdown-item:hover {
    background: #f8f9ff;
}

.dropdown-item:last-child {
    border-bottom: none;
}

.dropdown-item.no-results {
    color: #999;
    font-style: italic;
    text-align: center;
    cursor: default;
}

.dropdown-item.no-results:hover {
    background: transparent;
}

.customer-name {
    font-weight: bold;
    color: #333;
    margin-bottom: 4px;
    font-size: 1rem;
}

.customer-phone {
    color: #666;
    font-size: 0.9rem;
}

.customer-name mark {
    background: #fff3cd;
    color: #856404;
    padding: 2px 4px;
    border-radius: 3px;
}

/* File Upload Button */
.file-upload-btn {
    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: bold;
    transition: all 0.2s ease;
    box-shadow: 0 3px 10px rgba(79, 172, 254, 0.3);
}

.file-upload-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(79, 172, 254, 0.4);
}

/* Enhanced Summary Section */
.enhanced-summary-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 15px;
    padding: 20px;
    border: 2px solid #e1e5e9;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #dee2e6;
}

.summary-row:last-child {
    border-bottom: none;
}

.summary-row.final-total {
    background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
    color: white;
    padding: 15px 20px;
    border-radius: 10px;
    margin-top: 15px;
    box-shadow: 0 5px 15px rgba(67, 233, 123, 0.3);
    font-weight: bold;
}

/* Enhanced Items Table */
.debt-items-table thead tr {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

.debt-items-table th {
    padding: 15px 10px;
    font-weight: bold;
    text-align: center;
}

.debt-items-table td {
    padding: 12px 10px;
    text-align: center;
    vertical-align: middle;
}

.debt-items-table tbody tr:nth-child(even) {
    background: #f8f9ff;
}

.debt-items-table tbody tr:hover {
    background: #e3f2fd;
}

.debt-item-image {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.no-image {
    width: 50px;
    height: 50px;
    background: #f0f0f0;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    font-size: 1.5rem;
    margin: 0 auto;
}

/* Responsive Design for Enhanced Modal */
@media (max-width: 768px) {
    .price-option-card {
        width: 100%;
        margin-bottom: 15px;
        padding: 20px 15px;
    }
    
    .option-icon {
        font-size: 2.5rem;
    }
    
    .option-title {
        font-size: 1.1rem;
    }
    
    .option-subtitle {
        font-size: 1rem;
    }
    
    .whatsapp-action-btn {
        padding: 12px 20px;
        font-size: 1rem;
        width: 100%;
        margin-bottom: 10px;
    }
    
    .enhanced-autocomplete-container {
        flex-direction: column;
    }
    
    .enhanced-autocomplete-container input[type="text"] {
        border-radius: 10px;
        border-right: 2px solid #e1e5e9;
        margin-bottom: 10px;
    }
    
    .dropdown-toggle {
        border-radius: 10px;
        border-left: 2px solid #e1e5e9;
        padding: 12px;
    }
    
    .enhanced-dropdown {
        top: calc(100% + 50px);
    }
    
    .debt-items-table {
        font-size: 0.85rem;
    }
    
    .debt-items-table th,
    .debt-items-table td {
        padding: 8px 5px;
    }
    
    .debt-item-image,
    .no-image {
        width: 40px;
        height: 40px;
    }
    
    .summary-row {
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
    }
    
    .summary-row span:first-child {
        font-weight: bold;
    }
}

/* Animation for modal appearance */
.debt-modal#enhancedDebtModal {
    animation: enhancedModalAppear 0.4s ease-out;
}

@keyframes enhancedModalAppear {
    from {
        opacity: 0;
        transform: scale(0.9) translateY(50px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* Loading states */
.whatsapp-action-btn:disabled::before {
    content: 'üîÑ';
    display: inline-block;
    animation: spin 1s linear infinite;
    margin-right: 8px;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}


/* Debt Payment Button Styles */
.payment-buttons-container {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
}

.payment-button {
    border: none;
    padding: 10px 20px;
    border-radius: 10px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: bold;
    transition: all 0.2s ease;
    white-space: nowrap;
}

.payment-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.3);
}

.pay-debt-btn {
    background: linear-gradient(135deg, #ff9500 0%, #ff7043 100%);
    color: white;
}

.share-image-btn {
    background: linear-gradient(135deg, #4caf50 0%, #43a047 100%);
    color: white;
}

.edit-debtor-btn {
    background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%);
    color: white;
}

/* Payment Modal Styles */
.bill-item {
    border: 2px solid #e1e5e9;
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.bill-item:hover {
    border-color: #4facfe;
    background: #f8f9ff;
}

      /* ==============================================
         * üîß DEBT TRACKING STYLES
         * ============================================== */

        .debt-button {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            margin-left: 10px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
            display: none;
        }

        .debt-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);
            background: linear-gradient(135deg, #ff5252 0%, #d84315 100%);
        }

        .debt-button.show {
            display: inline-block;
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        /* Debt Modal Styles */
        .debt-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            font-family: inherit;
            padding: 20px;
            box-sizing: border-box;
        }

        .debt-modal-content {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 800px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.3s ease-out;
        }

        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: scale(0.9) translateY(50px);
            }
            to {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }

        .debt-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 2px solid #f0f0f0;
        }

        .debt-modal-title {
            font-size: 2rem;
            font-weight: bold;
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .debt-close-btn {
            background: #f0f0f0;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .debt-close-btn:hover {
            background: #e0e0e0;
            transform: rotate(90deg);
        }

        .debt-form-section {
            margin-bottom: 25px;
        }

        .debt-section-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .debt-items-summary {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .debt-summary-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            padding: 10px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .debt-summary-row:last-child {
            margin-bottom: 0;
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            color: white;
            font-weight: bold;
        }

        .debt-form-group {
            margin-bottom: 20px;
        }

        .debt-form-label {
            display: block;
            font-weight: bold;
            margin-bottom: 8px;
            color: #333;
        }

        .debt-form-input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        .debt-form-input:focus {
            outline: none;
            border-color: #ff6b6b;
            box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.1);
        }

        .debt-form-row {
            display: flex;
            gap: 20px;
        }

        .debt-form-col {
            flex: 1;
        }

        .autocomplete-container {
            position: relative;
        }

        .autocomplete-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 2px solid #e1e5e9;
            border-top: none;
            border-radius: 0 0 10px 10px;
            max-height: 400px;
            overflow-y: auto;
            z-index: 1000;
            display: none;
        }

        .autocomplete-suggestion {
            padding: 10px 15px;
            cursor: pointer;
            transition: background 0.2s ease;
            border-bottom: 1px solid #f0f0f0;
        }

        .autocomplete-suggestion:hover {
            background: #f8f9fa;
        }

        .autocomplete-suggestion.active {
            background: #ff6b6b;
            color: white;
        }

        .debt-modal-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 2px solid #f0f0f0;
        }

        .debt-action-btn {
            padding: 12px 30px;
            border: none;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .debt-save-btn {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            color: white;
            box-shadow: 0 5px 15px rgba(67, 233, 123, 0.3);
        }

        .debt-save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(67, 233, 123, 0.4);
        }

        .debt-cancel-btn {
            background: #6c757d;
            color: white;
        }

        .debt-cancel-btn:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .debt-items-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            font-size: 0.9rem;
        }

        .debt-items-table th,
        .debt-items-table td {
            padding: 8px 10px;
            text-align: left;
            border-bottom: 1px solid #e1e5e9;
        }

        .debt-items-table th {
            background: #f8f9fa;
            font-weight: bold;
            color: #495057;
        }

        .debt-item-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .debt-modal {
                padding: 10px;
            }
            
            .debt-modal-content {
                padding: 20px;
                max-height: 95vh;
            }
            
            .debt-modal-title {
                font-size: 1.5rem;
            }
            
            .debt-form-row {
                flex-direction: column;
                gap: 10px;
            }
            
            .debt-modal-actions {
                flex-direction: column;
            }
            
            .debt-items-table {
                font-size: 0.8rem;
            }
            
            .debt-items-table th,
            .debt-items-table td {
                padding: 5px;
            }
            
            .debt-button {
                font-size: 0.8rem;
                padding: 6px 12px;
            }
        }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Noto Sans Lao', Arial, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            color: #333;
        }

 .container {
    max-width: 100vw;
    width: calc(100% - 20px);
    margin: 0 10px;
    background: white;
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.1);
    overflow: hidden;
}

        .header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        /* Data Status Indicator */
        .data-status {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .status-indicator {
            display: flex;
            align-items: center;
            gap: 8px;
            background: rgba(255,255,255,0.2);
            backdrop-filter: blur(10px);
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            border: 1px solid rgba(255,255,255,0.3);
        }

        .status-icon {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        .status-loading { background: #ffa726; }
        .status-success { background: #4caf50; animation: none; }
        .status-error { background: #f44336; animation: none; }

        @keyframes pulse {
            0%, 100% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.7; transform: scale(1.1); }
        }

        .main-content {
            padding: 30px;
        }

        .loading-section {
            text-align: center;
            padding: 40px;
            background: #f8f9ff;
            border-radius: 15px;
            margin-bottom: 30px;
        }

        .loading-icon {
            width: 80px;
            height: 80px;
            border: 6px solid #e3f2fd;
            border-top: 6px solid #4facfe;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: #4caf50;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            color: white;
            font-size: 2.5rem;
            animation: success-bounce 0.6s ease-out;
        }

        @keyframes success-bounce {
            0% { transform: scale(0.3); opacity: 0; }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); opacity: 1; }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .scan-section {
            display: none;
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .scan-input {
            width: 100%;
            padding: 15px 20px;
            font-size: 1.2rem;
            border: 3px solid #e1e5e9;
            border-radius: 10px;
            outline: none;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        }

        .scan-input:focus {
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
        }

        .save-button {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.1rem;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(67, 233, 123, 0.3);
            pointer-events: auto !important;
        }

        .save-button:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(67, 233, 123, 0.4);
        }

        .save-button:disabled {
            background: #ccc !important;
            cursor: not-allowed !important;
            transform: none !important;
            box-shadow: none !important;
            opacity: 0.6;
            pointer-events: none !important;
        }

        .items-table {
            width: 100%;
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            margin-top: 20px;
        }

        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
        }

        .table-header h3 {
            font-size: 1.3rem;
            margin-bottom: 5px;
        }

        .table-content {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 15px 10px;
            text-align: left;
            border-bottom: 1px solid #e1e5e9;
        }

        th {
            background: #f8f9ff;
            font-weight: 600;
            color: #4a5568;
            white-space: nowrap;
        }

        tr:hover {
            background: #f8f9ff;
        }

        .item-image {
            width: 180px;
            height: 180px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .item-image:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 20px rgba(0,0,0,0.3);
        }

        .quantity-input {
            width: 80px;
            padding: 8px;
            border: 2px solid #e1e5e9;
            border-radius: 6px;
            text-align: center;
            font-size: 1rem;
        }

        .quantity-input:focus {
            border-color: #4facfe;
            outline: none;
        }

        .delete-btn {
            background: #ff6b6b;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        .delete-btn:hover {
            background: #ff5252;
        }

        .total-section {
            background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%);
            color: white;
            padding: 25px;
            text-align: center;
            border-radius: 15px;
            margin-top: 20px;
        }

        .total-amount {
            font-size: 2.5rem;
            font-weight: bold;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .status-message {
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            text-align: center;
            font-weight: 500;
        }

        .status-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 20px;
            color: #ddd;
        }

        .badge {
            display: inline-block;
            padding: 4px 12px;
            background: #4facfe;
            color: white;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .performance-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8f9ff;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-size: 0.9rem;
            color: #666;
        }

        .search-speed {
            color: #4caf50;
            font-weight: 600;
        }

        /* Checkbox ‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */
        .item-checkbox {
            width: 18px;
            height: 18px;
            cursor: pointer;
            accent-color: #4facfe;
        }

        .selected-amount {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%) !important;
            color: white !important;
            padding: 12px 25px;
            border-radius: 30px;
            backdrop-filter: blur(15px);
            margin-left: 15px;
            border: 2px solid rgba(255,255,255,0.4);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
            animation: highlightPulse 2s infinite;
            font-weight: bold;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        @keyframes highlightPulse {
            0%, 100% { 
                box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
                transform: scale(1);
            }
            50% { 
                box-shadow: 0 12px 35px rgba(255, 107, 107, 0.6);
                transform: scale(1.02);
            }
        }

        .selected-amount.active {
            animation: highlightActive 1.5s infinite;
            background: linear-gradient(135deg, #ff4757 0%, #ff3838 100%) !important;
        }

        @keyframes highlightActive {
            0%, 100% { 
                box-shadow: 0 8px 25px rgba(255, 71, 87, 0.5);
                border-color: rgba(255,255,255,0.6);
            }
            50% { 
                box-shadow: 0 15px 40px rgba(255, 71, 87, 0.8);
                border-color: rgba(255,255,255,0.9);
            }
        }

        tr.selected {
            background: rgba(79, 172, 254, 0.1) !important;
            border-left: 4px solid #4facfe;
        }

        /* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */
        .clear-selection-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            border: none;
            border-radius: 50px;
            padding: 15px 25px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            box-shadow: 0 8px 25px rgba(79, 172, 254, 0.4);
            transition: all 0.3s ease;
            z-index: 1000;
            display: none;
            align-items: center;
            gap: 8px;
        }

        .clear-selection-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(79, 172, 254, 0.5);
            background: linear-gradient(135deg, #2196F3 0%, #21CBF3 100%);
        }

        .clear-selection-btn.show {
            display: flex;
            animation: bounceIn 0.5s ease-out;
        }

        @keyframes bounceIn {
            0% { transform: scale(0.3) translateY(100px); opacity: 0; }
            50% { transform: scale(1.05) translateY(-10px); }
            70% { transform: scale(0.9) translateY(0px); }
            100% { transform: scale(1) translateY(0px); opacity: 1; }
        }

        /* API Quota Display */
        .api-quota-detail {
            margin-top: 15px;
            background: rgba(255,255,255,0.15);
            padding: 15px;
            border-radius: 10px;
            font-size: 0.85rem;
        }

        .api-quota-detail > div {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }

        /* Offline Controls */
        .offline-controls {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
        }

        /* Status Display */
        .offline-status {
            position: fixed;
            top: 20px;
            left: 20px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 0.9rem;
            z-index: 1000;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.2);
            transition: all 0.3s ease;
        }

        /* Recovery Modal */
        .recovery-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0,0,0,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            font-family: inherit;
        }

        .recovery-content {
            background: white;
            border-radius: 15px;
            padding: 30px;
            max-width: 500px;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        }

        .recovery-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-top: 25px;
        }

        .recovery-btn {
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .recovery-btn:hover {
            transform: translateY(-2px);
        }

        .btn-primary {
            background: #4facfe;
            color: white;
        }

        .btn-danger {
            background: #ff6b6b;
            color: white;
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 15px;
            }
           
            .header h1 {
                font-size: 2rem;
            }
           
            .main-content {
                padding: 20px;
            }
           
            .data-status {
                position: relative;
                top: auto;
                right: auto;
                justify-content: center;
                margin-top: 20px;
            }
           
            table {
                font-size: 0.9rem;
            }
           
            th, td {
                padding: 10px 5px;
            }

            .table-header div[style*="justify-content: space-between"] {
                flex-direction: column !important;
                align-items: flex-start !important;
                gap: 10px !important;
            }
            
            .table-header div[style*="justify-content: space-between"] > div:last-child {
                align-self: stretch;
                justify-content: center;
                padding: 8px 15px !important;
                font-size: 0.9rem !important;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üõí ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫Ç‡∫≤‡∫ç‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</h1>
            <p>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç</p>
           
            <div class="data-status">
                <div class="status-indicator" id="itemsStatus">
                    <div class="status-icon status-loading"></div>
                    <span>Items: ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î...</span>
                </div>
                <div class="status-indicator" id="costStatus">
                    <div class="status-icon status-loading"></div>
                    <span>Cost: ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î...</span>
                </div>
                <div class="status-indicator" id="quotaStatus">
                    <div class="status-icon status-loading"></div>
                    <span>API: ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î...</span>
                </div>









            </div>
        </div>

        <div class="main-content">
            <div id="loadingSection" class="loading-section">
                <div class="loading-icon"></div>
                <h3>‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤...</h3>
                <p>‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫à‡∫≤‡∫Å‡∫ñ‡∫≤‡∫ô‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫™‡∫±‡∫Å‡∫Ñ‡∫π‡ªà</p>
                <div style="margin-top: 20px; color: #666; font-size: 0.9rem;">
                    <div>üìä ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤...</div>
                    <div>üí∞ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫ï‡∫ª‡ªâ‡∫ô‡∫ó‡∫∂‡∫ô...</div>
                </div>
            </div>

            <div id="scanSection" class="scan-section">
                <div class="performance-info">
    <div>
        üìä ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÉ‡∫ô‡ªÑ‡∫Ñ‡∫•‡ªå: <strong id="dataCount">0</strong> ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô |
        üöÄ ‡∫Ñ‡∫ß‡∫≤‡∫°‡ªÑ‡∫ß‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Ñ‡∫ª‡ªâ‡∫ô‡∫´‡∫≤: <span class="search-speed" id="searchSpeed">< 0.1ms</span>
        <span id="currentUserDisplay" style="margin-left: 15px; color: #4facfe; font-weight: bold;"></span>
    </div>
    <div id="lastUpdate">‡∫≠‡∫±‡∫ö‡ªÄ‡∫î‡∫î‡∫•‡ªà‡∫≤‡∫™‡∫∏‡∫î: --</div>
</div>

                <div style="display: flex; gap: 15px; align-items: center; margin-bottom: 20px; flex-wrap: wrap;">
                    <input
                        type="text"
                        id="barcodeInput"
                        class="scan-input"
                        placeholder="‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î ‡∫´‡∫º‡∫∑ ‡∫û‡∫¥‡∫°‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤..."
                        style="flex: 1; min-width: 250px;"
                    >
                    

<button id="saveButton" class="save-button" onclick="handleSaveWithWhatsApp(this)" disabled>
    üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + WhatsApp
</button>


                </div>

                

                <div id="statusMessage"></div>

                <div class="items-table">
                    <div class="table-header">
                        <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 15px;">
                            <div style="display: flex; align-items: center; gap: 10px; flex-wrap: wrap;">
                                <h3>üìã ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å</h3>
                                <span class="badge" id="itemCount">0 ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</span>
                                <span class="badge" id="scanCount" style="background: #ff6b6b;">0 ‡∫Ñ‡∫±‡ªâ‡∫á</span>
                            </div>
                            
                            <div style="display: flex; align-items: center; gap: 15px; background: rgba(255,255,255,0.2); padding: 10px 20px; border-radius: 25px; backdrop-filter: blur(10px);">
                                <span style="font-size: 1rem; opacity: 0.9;">üí∞ ‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</span>
                                <span style="font-size: 1.5rem; font-weight: bold; text-shadow: 0 2px 4px rgba(0,0,0,0.3);" id="totalAmountHeader">0 ‚Ç≠</span>
                                
                                <div class="selected-amount" id="selectedAmountDisplay" style="display: none;">
                                    <span style="font-size: 0.9rem; opacity: 0.9;">‚úì ‡∫ç‡∫≠‡∫î‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å:</span>
                                    <span style="font-size: 1.2rem; font-weight: bold; margin-left: 8px;" id="selectedAmountValue">0 ‚Ç≠</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table-content">
                        <table>
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAllCheckbox" class="item-checkbox" onchange="toggleSelectAll(this.checked)">
                                        <label for="selectAllCheckbox" style="margin-left: 5px; font-size: 0.9rem;">‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å</label>
                                    </th>
                                    <th>‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                                    <th>‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                                    <th>‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç</th>
                                    <th>‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ï‡ªç‡ªà‡ªú‡ªà‡∫ß‡∫ç</th>
                                    <th>‡∫•‡∫≤‡∫Ñ‡∫≤</th>
                                    <th>‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                                    <th>‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö</th>
                                    <th>‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô</th>
                                    <th>‡∫à‡∫±‡∫î‡∫Å‡∫≤‡∫ô</th>
                                </tr>
                            </thead>
                            <tbody id="itemsTableBody">
                                <tr class="empty-state">
                                    <td colspan="10">
                                        <i>üì¶</i>
                                        <div>‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                                        <small>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</small>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="total-section">
                    <h3>üí∞ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</h3>
                    <div class="total-amount" id="totalAmount">0 ‚Ç≠</div>
                    
                <div class="api-quota-detail">
                    <div>
                        <span>‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß:</span>
                        <span id="quotaUsed" style="color: #ff6b6b; font-weight: bold;">0</span>
                    </div>
                    <div>
                        <span>‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</span>
                        <span id="quotaRemaining" style="color: #4caf50; font-weight: bold;">20,000</span>
                    </div>
            
                    <div style="background: rgba(255,255,255,0.3); height: 6px; border-radius: 3px; overflow: hidden;">
                        <div id="quotaProgress" style="height: 100%; background: linear-gradient(90deg, #4caf50, #ffa726, #ff6b6b); width: 0%; transition: width 0.3s ease;"></div>
                    </div>
                    <div style="text-align: center; margin-top: 5px; font-size: 0.8rem; opacity: 0.9;">
                        <span id="quotaPercentage">0%</span> ‡∫Å‡∫≤‡∫ô‡∫ô‡ªç‡∫≤‡ªÉ‡∫ä‡ªâ
                    </div>

                    <!-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
    <div style="margin-top: 15px; display: flex; gap: 8px; flex-wrap: wrap; justify-content: center;">
        <button id="syncButton" class="save-button" onclick="manualSync()" style="background: linear-gradient(135deg, #ffa726 0%, #fb8c00 100%); display: none; padding: 6px 12px; font-size: 0.75rem;">
            ‚¨ÜÔ∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
        
        <button id="showPendingButton" class="save-button" onclick="showPendingData()" style="background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%); display: none; padding: 6px 12px; font-size: 0.75rem;">
            üìã ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå
        </button>
        
        <button id="clearOfflineButton" class="save-button" onclick="clearAllOfflineData()" style="background: linear-gradient(135deg, #f44336 0%, #d32f2f 100%); display: none; padding: 6px 12px; font-size: 0.75rem;">
            üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå
        </button>
    </div>
                </div>

                </div>
            </div>
        </div>
    </div>

    <!-- Clear Selection Button -->
    <button id="clearSelectionBtn" class="clear-selection-btn" onclick="clearSelectionOnly()">
        üîÑ ‡ªÄ‡∫Ñ‡∫•‡∫ç‡∫Å‡∫≤‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å
    </button>

    <script>
        // ==============================================
        // üîß GLOBAL VARIABLES & INITIALIZATION
        // ==============================================
        
        // Core Data Variables
        let itemsData = new Map();
        let costData = new Map();
        let scannedItems = [];
        let selectedItems = new Set();

        // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°)
let activeCurrencyChoice = null; // 1=‡∏ö‡∏≤‡∏ó, 2=‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå, 3=‡∏Å‡∏µ‡∏ö
let currencyExchangeRate = null;
let printItemsDataCurrency = [];
// Global Variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤
let priceUpdateQueue = []; // ‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤
// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
let changeCalculatorButton = null;

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö WhatsApp (‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏¥‡πâ‡∏ô)
let activeWhatsAppCurrencyChoice = null; // 1=‡∏ö‡∏≤‡∏ó, 2=‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå, 3=‡∏Å‡∏µ‡∏ö
let whatsappExchangeRate = null;
let whatsappItemsData = [];
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit Debtor Options (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏î‡∏¥‡∏°)
let selectedEditActionOption = null; // 1 = Print, 2 = WhatsApp
     
        // System State
        let itemCounter = 1;
        let dataLoaded = { items: false, cost: false, quota: false };
        let loadStartTime = Date.now();
        let totalScanCount = 0;
        let isOnline = navigator.onLine;

        let debtorsList = [];
let selectedDebtData = null;


// ==============================================
// üîß EDIT DEBTOR SYSTEM - ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
// ==============================================

let editDebtorsList = [];
let selectedEditDebtData = null;
let editDebtNewItems = []; // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°
let editItemCounter = 1;

// Global variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ (‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ)
let selectedPaymentOption = null; // 1 = Print, 2 = WhatsApp
let currentPaymentData = null;
// ==============================================
// üîß GENERAL PRINT & WHATSAPP FUNCTIONS
// ==============================================

// Global variables for general functions
let generalPrintButton = null;
let generalWhatsAppButton = null;

// Global variables for the new features
let selectedPriceOption = null; // 1 = ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô, 2 = ‡∏Ç‡∏≤‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
let selectedPrintOption = null;
let enhancedCustomerList = { customers: [], customerPhoneMap: {} };
        
        // Offline Storage Keys
        const offlineStorage = {
            scannedItems: 'scanned_items_temp_v2',
            pendingSales: 'pending_sales_data_v2',
            lastSyncTime: 'last_sync_time_v2',
            sessionData: 'current_session_v2'
        };

        // ==============================================
        // üîß SYSTEM INITIALIZATION
        // ==============================================
        
        window.onload = function() {
            console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πÅ‡∏Å‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...');
            loadStartTime = Date.now();
            initializeSystem();
        };

      async function initializeSystem() {
    try {
        // Initialize offline system first
        initializeOfflineSystem();
        
        // Load data in parallel
        await Promise.all([
            loadItemsData(),
            loadCostData(),
            loadApiQuota(),
            loadUserInfoData() // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• userinfo
        ]);

        const loadTime = Date.now() - loadStartTime;
        console.log(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô ${loadTime}ms`);
        
        // ‡πÅ‡∏™‡∏î‡∏á Login Modal ‡∏Å‡πà‡∏≠‡∏ô initializeUI
        checkLoginSession();

    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:', error);
        handleError(error);
    }
}

        // ==============================================
        // üîß DATA LOADING FUNCTIONS
        // ==============================================

        async function loadItemsData() {
            updateDataStatus('items', 'loading');
           
            return new Promise((resolve) => {
                google.script.run
                    .withSuccessHandler((data) => {
                        try {
                            itemsData.clear();
                            data.forEach(item => {
                                if (item.columnA && item.columnA.toString().trim()) {
                                    itemsData.set(item.columnA.toString().trim(), item);
                                }
                            });
                           
                            console.log(`üì¶ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${itemsData.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                            updateDataStatus('items', 'success', itemsData.size);
                            dataLoaded.items = true;
                            resolve();
                        } catch (error) {
                            console.error('‚ùå ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                            updateDataStatus('items', 'error');
                            resolve();
                        }
                    })
                    .withFailureHandler((error) => {
                        console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                        updateDataStatus('items', 'error');
                        resolve();
                    })
                    .getItemsData();
            });
        }

        async function loadCostData() {
            updateDataStatus('cost', 'loading');
           
            return new Promise((resolve) => {
                google.script.run
                    .withSuccessHandler((data) => {
                        try {
                            costData.clear();
                            data.forEach(item => {
                                const barcode = (item.columnB || item.columnA || item.barcode || '').toString().trim();
                                if (barcode) {
                                    costData.set(barcode, item);
                                }
                            });
                           
                            console.log(`üí∞ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô: ${costData.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                            updateDataStatus('cost', 'success', costData.size);
                            dataLoaded.cost = true;
                            resolve();
                        } catch (error) {
                            console.error('‚ùå ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                            updateDataStatus('cost', 'error');
                            resolve();
                        }
                    })
                    .withFailureHandler((error) => {
                        console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                        updateDataStatus('cost', 'error');
                        resolve();
                    })
                    .getCostData();
            });
        }

        async function loadApiQuota() {
            updateDataStatus('quota', 'loading');
            
            return new Promise((resolve) => {
                google.script.run
                    .withSuccessHandler((result) => {
                        updateDataStatus('quota', 'success', result.remaining);
                        updateQuotaDisplay(result);
                        dataLoaded.quota = true;
                        resolve();
                    })
                    .withFailureHandler((error) => {
                        console.error('‚ùå ‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤ API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                        updateDataStatus('quota', 'error');
                        resolve();
                    })
                    .getQuotaStats();
            });
        }

        // ==============================================
        // üîß UI STATUS FUNCTIONS
        // ==============================================

        function updateDataStatus(type, status, count = 0) {
            const statusElement = document.getElementById(`${type}Status`);
            if (!statusElement) return;
            
            const icon = statusElement.querySelector('.status-icon');
            const text = statusElement.querySelector('span');
           
            if (icon) icon.className = `status-icon status-${status}`;
           
            const labels = { items: 'Items', cost: 'Cost', quota: 'API' };
            const label = labels[type];
           
            switch(status) {
                case 'loading':
                    if (text) text.textContent = `${label}: ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î...`;
                    break;
                case 'success':
                    if (type === 'quota') {
                        // Text updated in loadApiQuota
                    } else {
                        if (text) text.textContent = `${label}: ${count.toLocaleString()} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô ‚úì`;
                    }
                    break;
                case 'error':
                    if (text) text.textContent = `${label}: ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î ‚úó`;
                    break;
            }
        }

        function updateQuotaDisplay(quotaData) {
            const quotaText = `API: ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${quotaData.remaining.toLocaleString()} / ${quotaData.initial.toLocaleString()}`;
            const statusSpan = document.getElementById('quotaStatus')?.querySelector('span');
            if (statusSpan) statusSpan.textContent = quotaText;
            
            // Update details
            const elements = {
                quotaUsed: quotaData.used.toLocaleString(),
                quotaRemaining: quotaData.remaining.toLocaleString(),
                quotaPercentage: quotaData.percentage + '%'
            };
            
            Object.entries(elements).forEach(([id, value]) => {
                const element = document.getElementById(id);
                if (element) element.textContent = value;
            });
            
            // Update progress bar
            const progressBar = document.getElementById('quotaProgress');
            if (progressBar) {
                progressBar.style.width = quotaData.percentage + '%';
                
                if (quotaData.percentage < 50) {
                    progressBar.style.background = '#4caf50';
                } else if (quotaData.percentage < 80) {
                    progressBar.style.background = '#ffa726';
                } else {
                    progressBar.style.background = '#ff6b6b';
                }
            }
        }

        function initializeUI() {
            if (!dataLoaded.items || !dataLoaded.cost || !dataLoaded.quota) return;
            
            const loadTime = Date.now() - loadStartTime;
            console.log('üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
           
            // Update performance info
           // Update performance info
const dataCountElement = document.getElementById('dataCount');
const lastUpdateElement = document.getElementById('lastUpdate');

if (dataCountElement) {
    dataCountElement.textContent = (itemsData.size + costData.size).toLocaleString();
}
if (lastUpdateElement) {
    lastUpdateElement.textContent = `‡∫≠‡∫±‡∫ö‡ªÄ‡∫î‡∫î‡∫•‡ªà‡∫≤‡∫™‡∫∏‡∫î: ${new Date().toLocaleString('lo-LA')}`;
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ñ‡πâ‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß)
updateUserDisplayName();
           
            // Show success message
            const loadingSection = document.getElementById('loadingSection');
            if (loadingSection) {
                loadingSection.innerHTML = `
                    <div class="success-icon">‚úÖ</div>
                    <h3 style="color: #4caf50;">‡ªÇ‡∫´‡∫º‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î!</h3>
                    <p>‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß - ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ô ${loadTime}ms</p>
                    <div style="display: flex; justify-content: center; gap: 30px; margin-top: 20px; font-size: 0.9rem; color: #666;">
                        <div>üìä ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤: ${itemsData.size.toLocaleString()} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                        <div>üí∞ ‡∫ï‡∫ª‡ªâ‡∫ô‡∫ó‡∫∂‡∫ô: ${costData.size.toLocaleString()} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                    </div>
                `;
            }

            // Update offline controls
            updateOfflineControlsVisibility();
            
            // Check for recovered data
            setTimeout(() => {
                recoverDataOnStartup();
                
                setTimeout(() => {
                    if (loadingSection) loadingSection.style.display = 'none';
                    const scanSection = document.getElementById('scanSection');
                    if (scanSection) {
                        scanSection.style.display = 'block';
                        const barcodeInput = document.getElementById('barcodeInput');
                        if (barcodeInput) barcodeInput.focus();
                    }
                }, 2000);
            }, 1000);
        }
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å initializeUI ‡πÄ‡∏î‡∏¥‡∏° (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 1169)
window.addEventListener('load', function() {
    setTimeout(() => {
        if (document.getElementById('saveButton')) {
            addDebtPaymentButtons();
            loadDebtorsList();
            loadCustomerList();
            addChangeCalculatorButton(); // ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
        }
    }, 5000);
});

        // ==============================================
        // üîß BARCODE SCANNING & ITEM MANAGEMENT
        // ==============================================

        // Event listener for barcode input
        document.addEventListener('DOMContentLoaded', function() {
            const barcodeInput = document.getElementById('barcodeInput');
            if (barcodeInput) {
                barcodeInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        const barcode = this.value.trim();
                        if (barcode) {
                            if (!dataLoaded.items || !dataLoaded.cost) {
                                showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÇ‡∫´‡∫º‡∫î‡ªÄ‡∫™‡∫î‡∫Å‡ªà‡∫≠‡∫ô', 'error');
                                return;
                            }
                            
                            const searchStartTime = performance.now();
                            addItemToList(barcode);
                            const searchTime = performance.now() - searchStartTime;
                            
                            const searchSpeedElement = document.getElementById('searchSpeed');
                            if (searchSpeedElement) {
                                searchSpeedElement.textContent = `${searchTime.toFixed(2)}ms`;
                            }
                            
                            this.value = '';
                            this.focus();
                        }
                    }
                });
            }
        });

        function addItemToList(barcode) {
            console.log('üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™:', barcode);
           
            // Search for item with flexible matching
            let item = findItemByBarcode(barcode);
            
            if (!item) {
                console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - barcode:', barcode);
                showMessage('‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫•‡∫∞‡∫´‡∫±‡∫î: ' + barcode, 'error');
                return;
            }

            const barcodeKey = barcode.toString().trim();
            const existingItem = scannedItems.find(i => 
                i.barcode.toString().trim() === barcodeKey
            );
            
            if (existingItem) {
                // Update existing item
                existingItem.quantity += 1;
                existingItem.totalPrice = existingItem.quantity * existingItem.price;
                updateItemInTable(existingItem);
                showMessage(`‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô "${existingItem.name}"`, 'success');
            } else {
                // Add new item
                const costInfo = findCostByBarcode(barcode);
                
                const newItem = {
                    id: itemCounter++,
                    barcode: barcodeKey,
                    name: item.columnB || '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ä‡∫∑‡ªà',
                    unit: item.columnH || '‡∫ä‡∫¥‡ªâ‡∫ô',
                    quantityPerPack: parseFloat(item.columnI) || 1,
                    price: parseFloat(item.columnC) || 0,
                    quantity: 1,
                    image: item.columnK || '',
                    totalPrice: parseFloat(item.columnC) || 0,
                    profit: costInfo ? (parseFloat(costInfo.columnP) || 0) : 0,
                    costPrice: costInfo ? (parseFloat(costInfo.columnN) || 0) : 0
                };

                console.log('‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà:', newItem);
                scannedItems.push(newItem);
                addItemToTable(newItem);
                showMessage(`‡ªÄ‡∫û‡∫µ‡ªà‡∫° "${item.columnB}" ‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß`, 'success');
            }

            // Update UI
            updateTotal();
            updateItemCount();
            updateScanCount();
            updateSaveButtonState();
            autoSaveScannedItems();
        }

        function findItemByBarcode(barcode) {
            const key = barcode.toString().trim();
            
            // Direct match
            let item = itemsData.get(key);
            if (item) return item;
            
            // Flexible search
            for (let [itemKey, itemValue] of itemsData.entries()) {
                if (itemKey && itemKey.toString().trim().toLowerCase() === key.toLowerCase()) {
                    return itemValue;
                }
            }
            
            return null;
        }

        function findCostByBarcode(barcode) {
            const key = barcode.toString().trim();
            
            // Direct match
            let cost = costData.get(key);
            if (cost) return cost;
            
            // Flexible search
            for (let [costKey, costValue] of costData.entries()) {
                if (costKey && costKey.toString().trim().toLowerCase() === key.toLowerCase()) {
                    return costValue;
                }
            }
            
            return null;
        }

        
/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÉ‡∏´‡∏°‡πà - ‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏∞‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
 * @param {number} itemId - ID ‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 * @param {string|number} newPrice - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà
 */
function updatePrice(itemId, newPrice) {
    console.log(`üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤ ID: ${itemId}, ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà: ${newPrice}`);
    
    const item = scannedItems.find(i => i.id === itemId);
    if (!item) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: ${itemId}`);
        return;
    }
    
    const oldPrice = item.price;
    const parsedNewPrice = parseFloat(newPrice) || 0;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (oldPrice === parsedNewPrice) {
        console.log(`‚ÑπÔ∏è ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô: ${parsedNewPrice}`);
        return;
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
    item.price = parsedNewPrice;
    item.totalPrice = item.quantity * parsedNewPrice;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á Sheet
    addToPriceUpdateQueue(item.barcode, oldPrice, parsedNewPrice);
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
    updateItemInTable(item);
    updateTotal();
    updateSelectedAmount();
    autoSaveScannedItems();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    showMessage(`üí∞ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤ "${item.name}" ‡∏à‡∏≤‡∏Å ${formatCurrency(oldPrice)} ‡πÄ‡∏õ‡πá‡∏ô ${formatCurrency(parsedNewPrice)}`, 'success');
    
    console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${item.barcode} = ${parsedNewPrice}`);
}

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤
 */
function addToPriceUpdateQueue(barcode, oldPrice, newPrice) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingIndex = priceUpdateQueue.findIndex(item => item.barcode === barcode);
    
    if (existingIndex !== -1) {
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ)
        priceUpdateQueue[existingIndex].newPrice = newPrice;
        console.log(`üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏¥‡∏ß: ${barcode} = ${newPrice}`);
    } else {
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
        priceUpdateQueue.push({
            barcode: barcode,
            oldPrice: oldPrice,
            newPrice: newPrice,
            timestamp: Date.now()
        });
        console.log(`‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß: ${barcode} = ${newPrice}`);
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏¥‡∏ß
    updatePriceQueueDisplay();
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏¥‡∏ß‡∏£‡∏≤‡∏Ñ‡∏≤
 */
function updatePriceQueueDisplay() {
    if (priceUpdateQueue.length > 0) {
        console.log(`üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤: ${priceUpdateQueue.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI indicator (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        const saveButton = document.getElementById('saveButton');
        if (saveButton && priceUpdateQueue.length > 0) {
            const originalText = saveButton.textContent;
            if (!originalText.includes('üìù')) {
                saveButton.textContent = `üìù ${originalText} (+${priceUpdateQueue.length} ‡∏£‡∏≤‡∏Ñ‡∏≤)`;
            }
        }
    }
}

/**
 * ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets
 */
function updatePriceInSheet(items) {
    return new Promise((resolve, reject) => {
        if (!items || items.length === 0) {
            console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï');
            resolve({ success: true, updatedCount: 0 });
            return;
        }
        
        console.log(`üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏õ Sheet: ${items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        
        google.script.run
            .withSuccessHandler((result) => {
                console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result);
                resolve(result);
            })
            .withFailureHandler((error) => {
                console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                reject(error);
            })
            .updateItemPrices(items);
    });
}

       
/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô addItemToTable() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° input field ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤
 * (‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
 */
function addItemToTable(item) {
    const tbody = document.getElementById('itemsTableBody');
    if (!tbody) return;
   
    // Clear empty state if this is first item
    if (scannedItems.length === 1) {
        tbody.innerHTML = '';
    }

    const row = document.createElement('tr');
    row.id = `item-${item.id}`;
    row.innerHTML = `
        <td>
            <input type="checkbox" id="checkbox-${item.id}" class="item-checkbox" onchange="toggleItemSelection(${item.id}, this.checked)">
        </td>
        <td><strong>${item.id}</strong></td>
        <td><strong>${item.name}</strong></td>
        <td>${item.unit}</td>
        <td>${item.quantityPerPack}</td>
        <td>
            <input type="number" class="price-input" value="${item.price}" 
                   min="0" step="0.01" onchange="updatePrice(${item.id}, this.value)"
                   style="width: 100px; padding: 8px; border: 2px solid #e1e5e9; border-radius: 6px; text-align: center; font-size: 1rem;">
        </td>
        <td>
            <input type="number" class="quantity-input" value="${item.quantity}"
                   min="1" onchange="updateQuantity(${item.id}, this.value)">
        </td>
        <td>
            ${item.image ?
                `<img src="${item.image}" alt="${item.name}" class="item-image" 
                      onclick="showLargeImage('${item.image}', '${item.name}')"
                      onerror="this.style.display='none'">` :
                '<div style="width: 180px; height: 180px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: #999;">üì∑<br><small>‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Æ‡∫π‡∫ö</small></div>'
            }
        </td>
        <td><strong>${formatCurrency(item.totalPrice)}</strong></td>
        <td>
            <button class="delete-btn" onclick="removeItem(${item.id})">üóëÔ∏è ‡∫•‡∫ª‡∫ö</button>
        </td>
    `;
   
    tbody.insertBefore(row, tbody.firstChild);
    
    // Force update save button state
    setTimeout(() => {
        updateSaveButtonState();
    }, 100);
}

       
/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateItemInTable() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö input field ‡∏£‡∏≤‡∏Ñ‡∏≤
 * (‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
 */
function updateItemInTable(item) {
    const row = document.getElementById(`item-${item.id}`);
    if (!row) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏ñ‡∏ß ID ${item.id}`);
        return;
    }
    
    // Update price input (column 5)
    const priceCell = row.cells[5];
    if (priceCell) {
        priceCell.innerHTML = `
            <input type="number" class="price-input" value="${item.price}" 
                   min="0" step="0.01" onchange="updatePrice(${item.id}, this.value)"
                   style="width: 100px; padding: 8px; border: 2px solid #e1e5e9; border-radius: 6px; text-align: center; font-size: 1rem;">
        `;
    }
    
    // Update quantity input (column 6)
    const quantityCell = row.cells[6];
    if (quantityCell) {
        quantityCell.innerHTML = `<input type="number" class="quantity-input" value="${item.quantity}" min="1" onchange="updateQuantity(${item.id}, this.value)">`;
    }
    
    // Update total price (column 8)
    const totalPriceCell = row.cells[8];
    if (totalPriceCell) {
        totalPriceCell.innerHTML = `<strong>${formatCurrency(item.totalPrice)}</strong>`;
    }
    
    // Maintain checkbox state
    const checkboxCell = row.cells[0];
    const checkbox = checkboxCell?.querySelector('.item-checkbox');
    if (checkbox && selectedItems.has(item.id)) {
        checkbox.checked = true;
        row.classList.add('selected');
    }
    
    console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ß ID ${item.id} - ‡∏£‡∏≤‡∏Ñ‡∏≤: ${formatCurrency(item.price)}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${item.quantity}, ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: ${formatCurrency(item.totalPrice)}`);
}

        function updateQuantity(itemId, newQuantity) {
            const item = scannedItems.find(i => i.id === itemId);
            if (!item) return;
            
            const quantity = parseInt(newQuantity) || 1;
            item.quantity = quantity;
            item.totalPrice = item.quantity * item.price;
            
            updateItemInTable(item);
            updateTotal();
            updateSelectedAmount();
            autoSaveScannedItems();
        }

        function removeItem(itemId) {
            const itemIndex = scannedItems.findIndex(i => i.id === itemId);
            if (itemIndex === -1) return;
            
            const itemName = scannedItems[itemIndex].name;
            scannedItems.splice(itemIndex, 1);
            
            // Remove from DOM
            const row = document.getElementById(`item-${itemId}`);
            if (row) row.remove();

            // Remove from selection
            selectedItems.delete(itemId);
            
            // Update UI
            updateTotal();
            updateItemCount();
            updateScanCount();
            updateSaveButtonState();
            updateSelectedAmount();
            updateSelectAllCheckbox();
            updateClearButtonVisibility();
            autoSaveScannedItems();
            
            // Handle empty table
            if (scannedItems.length === 0) {
                const tbody = document.getElementById('itemsTableBody');
                if (tbody) {
                    tbody.innerHTML = `
                        <tr class="empty-state">
                            <td colspan="10">
                                <i>üì¶</i>
                                <div>‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                                <small>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</small>
                            </td>
                        </tr>
                    `;
                }
            }
            
            showMessage(`‡∫•‡∫ª‡∫ö "${itemName}" ‡∫≠‡∫≠‡∫Å‡∫à‡∫≤‡∫Å‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß`, 'success');
        }

        // ==============================================
        // üîß UI UPDATE FUNCTIONS
        // ==============================================

        function updateTotal() {
            const total = scannedItems.reduce((sum, item) => sum + item.totalPrice, 0);
            const formattedTotal = formatCurrency(total);
            
            const totalAmountElement = document.getElementById('totalAmount');
            const totalAmountHeaderElement = document.getElementById('totalAmountHeader');
            
            if (totalAmountElement) totalAmountElement.textContent = formattedTotal;
            if (totalAmountHeaderElement) totalAmountHeaderElement.textContent = formattedTotal;
        }

        function updateItemCount() {
            const itemCountElement = document.getElementById('itemCount');
            if (itemCountElement) {
                itemCountElement.textContent = `${scannedItems.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô`;
            }
        }

        function updateScanCount() {
            const totalScans = scannedItems.reduce((sum, item) => sum + item.quantity, 0);
            const scanCountElement = document.getElementById('scanCount');
            if (scanCountElement) {
                scanCountElement.textContent = `${totalScans} ‡∫Ñ‡∫±‡ªâ‡∫á`;
            }
        }
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateSaveButtonState 
function updateSaveButtonState() {
    const saveButton = document.getElementById('saveButton');
    if (!saveButton) return;
    
    const hasItems = scannedItems && scannedItems.length > 0;
    
    console.log(`üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£=${scannedItems.length}, ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤=${hasItems}`);
    
    if (hasItems) {
        saveButton.disabled = false;
        saveButton.style.pointerEvents = 'auto';
        saveButton.style.cursor = 'pointer';
        saveButton.style.opacity = '1';
        saveButton.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
        saveButton.style.boxShadow = '0 5px 15px rgba(67, 233, 123, 0.3)';
        saveButton.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç';
        
        // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleSaveClick ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        saveButton.onclick = function() { handleSaveClick(this); };
        
        console.log('‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    } else {
        saveButton.disabled = true;
        saveButton.style.pointerEvents = 'none';
        saveButton.style.cursor = 'not-allowed';
        saveButton.style.opacity = '0.6';
        saveButton.style.background = '#ccc';
        saveButton.style.boxShadow = 'none';
        
        console.log('‚ùå ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    }
}

/**
 * ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleSaveClick() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤
 * (‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
 */
function handleSaveClick(button) {
    console.log('üéØ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleSaveClick - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤');
    
    if (scannedItems.length === 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return false;
    }

    button.disabled = true;
    button.textContent = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...';
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
    async function saveSalesData() {
        return new Promise((resolve, reject) => {
            google.script.run
                .withSuccessHandler(resolve)
                .withFailureHandler(reject)
                .saveSalesData(scannedItems);
        });
    }
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    async function performSave() {
        try {
            // 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
            const salesResult = await saveSalesData();
            
            if (!salesResult.success) {
                throw new Error(salesResult.message);
            }
            
            // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            let priceUpdateResult = { success: true, updatedCount: 0 };
            
            if (priceUpdateQueue.length > 0) {
                console.log(`üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤: ${priceUpdateQueue.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                
                try {
                    priceUpdateResult = await updatePriceInSheet([...priceUpdateQueue]);
                    
                    if (priceUpdateResult.success && priceUpdateResult.updatedCount > 0) {
                        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${priceUpdateResult.updatedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                    }
                } catch (priceError) {
                    console.error('‚ö†Ô∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', priceError);
                    // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡πâ‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
                    priceUpdateResult = { success: false, error: priceError.message };
                }
            }
            
            // 3. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            let successMessage = `‚úÖ ${salesResult.message} (‡ªÄ‡∫•‡∫Å‡∫ó‡∫µ: ${salesResult.orderNumber})`;
            
            if (priceUpdateResult.success && priceUpdateResult.updatedCount > 0) {
                successMessage += ` ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤ ${priceUpdateResult.updatedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
            } else if (!priceUpdateResult.success && priceUpdateQueue.length > 0) {
                successMessage += ` (‚ö†Ô∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${priceUpdateResult.error || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'})`;
            }
            
            showMessage(successMessage, 'success');
            
            // 4. Update API quota display
            if (salesResult.remainingQuota !== undefined) {
                const quotaData = {
                    remaining: salesResult.remainingQuota,
                    initial: salesResult.initialQuota || 20000,
                    used: (salesResult.initialQuota || 20000) - salesResult.remainingQuota,
                    percentage: (((salesResult.initialQuota || 20000) - salesResult.remainingQuota) / (salesResult.initialQuota || 20000) * 100).toFixed(1)
                };
                updateQuotaDisplay(quotaData);
            }
            
            // 5. Show API usage info
            if (salesResult.apiCallsUsed) {
                setTimeout(() => {
                    showMessage(`‚ÑπÔ∏è ‡πÉ‡∏ä‡πâ API ${salesResult.apiCallsUsed} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ`, 'success');
                }, 3500);
            }
            
            // 6. Clear data after successful save
            priceUpdateQueue.splice(0); // Clear price update queue
            clearSavedData();
            
        } catch (error) {
            console.error('‚ùå Save error:', error);
            showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å: ${error.message || error}`, 'error');
            
            // Reset button
            button.disabled = scannedItems.length === 0;
            button.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç';
        }
    }
    
    if (isOnline) {
        performSave();
    } else {
        saveOfflineData(button);
    }
}




/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
 */
function addPriceInputStyles() {
    const existingStyle = document.getElementById('priceInputStyles');
    if (existingStyle) return;
    
    const style = document.createElement('style');
    style.id = 'priceInputStyles';
    style.textContent = priceInputCSS;
    document.head.appendChild(style);
    
    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö price input ‡πÅ‡∏•‡πâ‡∏ß');
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener('DOMContentLoaded', function() {
    addPriceInputStyles();
});

/**
 * ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏¥‡∏ß‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
 */
function showPriceUpdateQueue() {
    if (priceUpdateQueue.length === 0) {
        showMessage('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤', 'success');
        return;
    }
    
    const queueList = priceUpdateQueue.map(item => 
        `${item.barcode}: ${formatCurrency(item.oldPrice)} ‚Üí ${formatCurrency(item.newPrice)}`
    ).join('\n');
    
    alert(`‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤ (${priceUpdateQueue.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):\n\n${queueList}`);
}

console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');


function toggleItemSelection(itemId, isChecked) {
    const row = document.getElementById(`item-${itemId}`);
    if (!row) return;
    
    if (isChecked) {
        selectedItems.add(itemId);
        row.classList.add('selected');
    } else {
        selectedItems.delete(itemId);
        row.classList.remove('selected');
    }
    
    updateSelectedAmount();
    updateSelectAllCheckbox();
    updateClearButtonVisibility();
    updateDebtButtonVisibility();
    updateGeneralButtonsVisibility();
    updateChangeCalculatorVisibility(); // ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
}

  
function toggleSelectAll(isChecked) {
    const checkboxes = document.querySelectorAll('.item-checkbox:not(#selectAllCheckbox)');
    
    checkboxes.forEach(checkbox => {
        checkbox.checked = isChecked;
        const itemId = parseInt(checkbox.id.replace('checkbox-', ''));
        if (!isNaN(itemId)) {
            toggleItemSelection(itemId, isChecked);
        }
    });
}

        function updateSelectAllCheckbox() {
            const allCheckboxes = document.querySelectorAll('.item-checkbox:not(#selectAllCheckbox)');
            const checkedCheckboxes = document.querySelectorAll('.item-checkbox:not(#selectAllCheckbox):checked');
            const selectAllCheckbox = document.getElementById('selectAllCheckbox');
            
            if (!selectAllCheckbox) return;
            
            if (allCheckboxes.length === 0) {
                selectAllCheckbox.indeterminate = false;
                selectAllCheckbox.checked = false;
            } else if (checkedCheckboxes.length === allCheckboxes.length) {
                selectAllCheckbox.indeterminate = false;
                selectAllCheckbox.checked = true;
            } else if (checkedCheckboxes.length > 0) {
                selectAllCheckbox.indeterminate = true;
            } else {
                selectAllCheckbox.indeterminate = false;
                selectAllCheckbox.checked = false;
            }
        }

        function updateSelectedAmount() {
            let selectedTotal = 0;
            let selectedCount = 0;
            
            selectedItems.forEach(itemId => {
                const item = scannedItems.find(i => i.id === itemId);
                if (item) {
                    selectedTotal += item.totalPrice;
                    selectedCount++;
                }
            });
            
            const selectedAmountDisplay = document.getElementById('selectedAmountDisplay');
            const selectedAmountValue = document.getElementById('selectedAmountValue');
            
            if (selectedItems.size > 0 && selectedAmountDisplay && selectedAmountValue) {
                selectedAmountDisplay.style.display = 'flex';
                selectedAmountValue.textContent = formatCurrency(selectedTotal);
                selectedAmountDisplay.classList.add('active');
                
                const selectedText = selectedAmountDisplay.querySelector('span:first-child');
                if (selectedText) {
                    selectedText.textContent = `‚úì ‡∫ç‡∫≠‡∫î‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å (${selectedCount} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô):`;
                }
                
                console.log(`üí∞ ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${selectedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ = ${formatCurrency(selectedTotal)}`);
            } else if (selectedAmountDisplay) {
                selectedAmountDisplay.style.display = 'none';
                selectedAmountDisplay.classList.remove('active');
            }
        }

        function updateClearButtonVisibility() {
            let clearBtn = document.getElementById('clearSelectionBtn');
            
            if (!clearBtn) {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° clearSelectionBtn');
                return;
            }
            
            if (selectedItems.size > 0) {
                clearBtn.classList.add('show');
                clearBtn.innerHTML = `üîÑ ‡ªÄ‡∫Ñ‡∫•‡∫ç‡∫Å‡∫≤‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å (${selectedItems.size})`;
            } else {
                clearBtn.classList.remove('show');
            }
        }

function clearSelectionOnly() {
    if (selectedItems.size === 0) {
        showMessage('‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å', 'error');
        return;
    }
    
    if (confirm(`‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡ªÄ‡∫Ñ‡∫•‡∫ç‡∫Å‡∫≤‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å ${selectedItems.size} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ö‡ªç? (‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫à‡∫∞‡∫ç‡∫±‡∫á‡∫Ñ‡∫ª‡∫á‡∫¢‡∫π‡ªà‡ªÉ‡∫ô‡∫ï‡∫≤‡∫ï‡∫∞‡∫•‡∫≤‡∫á)`)) {
        selectedItems.forEach(itemId => {
            const checkbox = document.getElementById(`checkbox-${itemId}`);
            const row = document.getElementById(`item-${itemId}`);
            
            if (checkbox) checkbox.checked = false;
            if (row) row.classList.remove('selected');
        });
        
        selectedItems.clear();
        updateSelectedAmount();
        updateSelectAllCheckbox();
        updateClearButtonVisibility();
        updateGeneralButtonsVisibility(); // ‚Üê ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö General Buttons
        
        showMessage('‡ªÄ‡∫Ñ‡∫•‡∫ç‡∫Å‡∫≤‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡ªÅ‡∫•‡ªâ‡∫ß (‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ç‡∫±‡∫á‡∫¢‡∫π‡ªà‡ªÉ‡∫ô‡∫ï‡∫≤‡∫ï‡∫∞‡∫•‡∫≤‡∫á)', 'success');
    }
}

        // ==============================================
        // üîß SAVE SYSTEM
        // ==============================================

        function handleSaveWithWhatsApp(button) {
    if (scannedItems.length === 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return false;
    }

    button.disabled = true;
    button.textContent = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...';
    
    if (isOnline) {
        google.script.run
            .withSuccessHandler((result) => {
                if (result.success) {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
const message = generateWhatsAppMessage(result.orderNumber);

// ‡∏™‡πà‡∏á WhatsApp ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
sendToWhatsApp(message, null); // null ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥
                    
                    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    showMessage(`‚úÖ ${result.message} ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á WhatsApp ‡πÅ‡∏•‡πâ‡∏ß`, 'success');
                    clearSavedData();
                } else {
                    showMessage(`‚ùå ${result.message}`, 'error');
                }
                
                // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°
                button.disabled = false;
                button.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + WhatsApp';
            })
            .withFailureHandler((error) => {
                showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ${error}`, 'error');
                button.disabled = false;
                button.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + WhatsApp';
            })
            .saveSalesData(scannedItems);
    } else {
        saveOfflineData(button);
    }
}

        function handleSaveSuccess(result) {
            const saveButton = document.getElementById('saveButton');
            
            if (result.success) {
                showMessage(`‚úÖ ${result.message} (‡ªÄ‡∫•‡∫Å‡∫ó‡∫µ: ${result.orderNumber})`, 'success');
                
                // Update API quota
                if (result.remainingQuota !== undefined) {
                    const quotaData = {
                        remaining: result.remainingQuota,
                        initial: result.initialQuota || 20000,
                        used: (result.initialQuota || 20000) - result.remainingQuota,
                        percentage: (((result.initialQuota || 20000) - result.remainingQuota) / (result.initialQuota || 20000) * 100).toFixed(1)
                    };
                    updateQuotaDisplay(quotaData);
                }
                
                // Show API usage info
                if (result.apiCallsUsed) {
                    setTimeout(() => {
                        showMessage(`‚ÑπÔ∏è ‡πÉ‡∏ä‡πâ API ${result.apiCallsUsed} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ`, 'success');
                    }, 3500);
                }
                
                // Clear data after successful save
                clearSavedData();
                
            } else {
                showMessage(`‚ùå ${result.message}`, 'error');
                
                if (saveButton) {
                    saveButton.disabled = scannedItems.length === 0;
                    saveButton.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç';
                }
            }
        }

        function handleSaveError(error) {
            console.error('‚ùå Save error:', error);
            
            // If error occurs, try saving offline
            const saveButton = document.getElementById('saveButton');
            
            if (!isOnline || error.message.includes('network') || error.message.includes('timeout')) {
                console.log('üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå');
                saveOfflineData(saveButton);
            } else {
                showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å: ${error.message || error}`, 'error');
                
                if (saveButton) {
                    saveButton.disabled = scannedItems.length === 0;
                    saveButton.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç';
                }
            }
        }

        function clearSavedData() {
            // Reset data arrays
            scannedItems.splice(0);
            selectedItems.clear();
            itemCounter = 1;
            totalScanCount = 0;
            
            // Clear local storage
            removeFromLocalStorage(offlineStorage.scannedItems);
            removeFromLocalStorage(offlineStorage.sessionData);
            
            // Update table
            const tbody = document.getElementById('itemsTableBody');
            if (tbody) {
                tbody.innerHTML = `
                    <tr class="empty-state">
                        <td colspan="10">
                            <i>üì¶</i>
                            <div>‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                            <small>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</small>
                        </td>
                    </tr>
                `;
            }
            
            // Update UI
            updateTotal();
            updateItemCount();
            updateScanCount();
            updateSelectedAmount();
            updateSelectAllCheckbox();
            updateClearButtonVisibility();
            updateSaveButtonState();
            
            // Focus back to input
            setTimeout(() => {
                const barcodeInput = document.getElementById('barcodeInput');
                if (barcodeInput) barcodeInput.focus();
            }, 100);
        }

        // ==============================================
        // üîß OFFLINE SYSTEM
        // ==============================================

        function initializeOfflineSystem() {
            console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå...');
            
            // Monitor online/offline status
            window.addEventListener('online', handleOnlineStatus);
            window.addEventListener('offline', handleOfflineStatus);
            
            // Initialize auto-save
            startAutoSave();
            
            // Clean old data
            cleanOldOfflineData();
            
            // Show initial status
            updateOfflineStatus(isOnline ? 'üåê ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' : 'üìµ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå');
            
            console.log('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
        }

        function handleOnlineStatus() {
            isOnline = true;
            updateOfflineStatus('üåê ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå...');
            updateOfflineControlsVisibility();
            
            setTimeout(() => {
                checkPendingSyncData();
            }, 1000);
        }

        function handleOfflineStatus() {
            isOnline = false;
            updateOfflineStatus('üìµ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Local Storage');
            updateOfflineControlsVisibility();
            autoSaveScannedItems();
        }

        function startAutoSave() {
            // Auto-save every 10 seconds
            setInterval(() => {
                if (scannedItems.length > 0) {
                    autoSaveScannedItems();
                }
            }, 10000);
            
            // Save on visibility change (when user switches tabs/apps)
            document.addEventListener('visibilitychange', function() {
                if (document.hidden && scannedItems.length > 0) {
                    autoSaveScannedItems();
                    console.log('üíæ Auto-save on visibility change');
                }
            });
            
            // Save on beforeunload (when user closes/refreshes page)
            window.addEventListener('beforeunload', function() {
                if (scannedItems.length > 0) {
                    autoSaveScannedItems();
                    console.log('üíæ Auto-save on page unload');
                }
            });
        }

        function autoSaveScannedItems() {
            if (scannedItems.length === 0) return;
            
            const sessionData = {
                items: [...scannedItems],
                selectedItems: Array.from(selectedItems),
                itemCounter: itemCounter,
                timestamp: Date.now()
            };
            
            const success = saveToLocalStorage(offlineStorage.scannedItems, sessionData);
            if (success) {
                console.log(`üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ${scannedItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            }
        }

        function saveOfflineData(saveButton) {
            const existingPendingData = loadFromLocalStorage(offlineStorage.pendingSales) || [];
            const newSalesData = {
                items: [...scannedItems],
                timestamp: Date.now(),
                deviceId: getDeviceId()
            };
            
            existingPendingData.push(newSalesData);
            
            const success = saveToLocalStorage(offlineStorage.pendingSales, existingPendingData);
            
            if (success) {
                showMessage('üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏à‡∏∞‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå', 'success');
                updateOfflineStatus(`üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå: ${existingPendingData.length} ‡∏ä‡∏∏‡∏î‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå`);
                updateOfflineControlsVisibility();
                
                // Clear current data
                clearSavedData();
            } else {
                showMessage('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ', 'error');
            }
            
            if (saveButton) {
                saveButton.disabled = scannedItems.length === 0;
                saveButton.textContent = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç';
                saveButton.style.pointerEvents = 'auto';
            }
        }

        function recoverDataOnStartup() {
            console.log('üîÑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...');
            
            const savedSession = loadFromLocalStorage(offlineStorage.scannedItems);
            if (savedSession && savedSession.items && savedSession.items.length > 0) {
                showRecoveryDialog(savedSession);
            }
            
            setTimeout(() => {
                checkPendingSyncData();
            }, 2000);
        }

        function showRecoveryDialog(savedSession) {
            const modal = document.createElement('div');
            modal.className = 'recovery-modal';
            modal.innerHTML = `
                <div class="recovery-content">
                    <div style="font-size: 3rem; margin-bottom: 20px;">üîÑ</div>
                    <h3 style="color: #4facfe; margin-bottom: 15px;">‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å!</h3>
                    <p style="color: #666; margin-bottom: 25px;">
                        ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ <strong>${savedSession.items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</strong> 
                        ‡∏ó‡∏µ‡πà‡∏™‡πÅ‡∏Å‡∏ô‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏£‡∏∞‡∏ö‡∏ö
                    </p>
                    <div class="recovery-buttons">
                        <button id="recoverYes" class="recovery-btn btn-primary">
                            ‚úÖ ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                        </button>
                        <button id="recoverNo" class="recovery-btn btn-danger">
                            üóëÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            document.getElementById('recoverYes').onclick = () => {
                recoverSavedItems(savedSession);
                document.body.removeChild(modal);
            };
            
            document.getElementById('recoverNo').onclick = () => {
                removeFromLocalStorage(offlineStorage.scannedItems);
                document.body.removeChild(modal);
                showMessage('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà', 'success');
            };
        }

        function recoverSavedItems(savedSession) {
            // Restore data
            scannedItems.splice(0, scannedItems.length, ...savedSession.items);
            if (savedSession.selectedItems) {
                selectedItems.clear();
                savedSession.selectedItems.forEach(id => selectedItems.add(id));
            }
            if (savedSession.itemCounter) {
                itemCounter = savedSession.itemCounter;
            }
            
            // Rebuild table
            rebuildItemsTable();
            
            // Update UI
            updateTotal();
            updateItemCount();
            updateScanCount();
            updateSelectedAmount();
            updateSelectAllCheckbox();
            updateSaveButtonState();
            updateClearButtonVisibility();
            
            showMessage(`üîÑ ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${scannedItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`, 'success');
        }

        function rebuildItemsTable() {
            const tbody = document.getElementById('itemsTableBody');
            if (!tbody) return;
            
            tbody.innerHTML = '';
            
            if (scannedItems.length === 0) {
                tbody.innerHTML = `
                    <tr class="empty-state">
                        <td colspan="10">
                            <i>üì¶</i>
                            <div>‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                            <small>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</small>
                        </td>
                    </tr>
                `;
                return;
            }
            
            // Add items in reverse order (newest first)
            [...scannedItems].reverse().forEach(item => {
                const row = document.createElement('tr');
                row.id = `item-${item.id}`;
                
                const isSelected = selectedItems.has(item.id);
                if (isSelected) row.classList.add('selected');
                
                row.innerHTML = `
                    <td>
                        <input type="checkbox" id="checkbox-${item.id}" class="item-checkbox" 
                               ${isSelected ? 'checked' : ''} 
                               onchange="toggleItemSelection(${item.id}, this.checked)">
                    </td>
                    <td><strong>${item.id}</strong></td>
                    <td><strong>${item.name}</strong></td>
                    <td>${item.unit}</td>
                    <td>${item.quantityPerPack}</td>
                    <td>${formatCurrency(item.price)}</td>
                    <td>
                        <input type="number" class="quantity-input" value="${item.quantity}"
                               min="1" onchange="updateQuantity(${item.id}, this.value)">
                    </td>
                    <td>
                        ${item.image ?
                            `<img src="${item.image}" alt="${item.name}" class="item-image" 
                                  onclick="showLargeImage('${item.image}', '${item.name}')"
                                  onerror="this.style.display='none'">` :
                            '<div style="width: 180px; height: 180px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; color: #999;">üì∑<br><small>‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Æ‡∫π‡∫ö</small></div>'
                        }
                    </td>
                    <td><strong>${formatCurrency(item.totalPrice)}</strong></td>
                    <td>
                        <button class="delete-btn" onclick="removeItem(${item.id})">üóëÔ∏è ‡∫•‡∫ª‡∫ö</button>
                    </td>
                `;
                
                tbody.appendChild(row);
            });
        }

        function checkPendingSyncData() {
            if (!isOnline) return;
            
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            if (pendingData && pendingData.length > 0) {
                showSyncDialog(pendingData);
            }
        }

        function showSyncDialog(pendingData) {
            const modal = document.createElement('div');
            modal.className = 'recovery-modal';
            modal.innerHTML = `
                <div class="recovery-content">
                    <div style="font-size: 3rem; margin-bottom: 20px;">üîÑ</div>
                    <h3 style="color: #43e97b; margin-bottom: 15px;">‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå!</h3>
                    <p style="color: #666; margin-bottom: 25px;">
                        ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ <strong>${pendingData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</strong> 
                        ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets
                    </p>
                    <div class="recovery-buttons">
                        <button id="syncNow" class="recovery-btn btn-primary">
                            ‚¨ÜÔ∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                        </button>
                        <button id="syncLater" class="recovery-btn" style="background: #ffa726; color: white;">
                            ‚è∞ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            document.getElementById('syncNow').onclick = () => {
                document.body.removeChild(modal);
                syncPendingData(pendingData);
            };
            
            document.getElementById('syncLater').onclick = () => {
                document.body.removeChild(modal);
                showMessage('‡∏Ç‡πâ‡∏≠‡∏°‡∏π„É´‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°', 'success');
            };
        }

        function syncPendingData(pendingData) {
            updateOfflineStatus('‚¨ÜÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            
            let syncedCount = 0;
            const totalCount = pendingData.length;
            
            const syncPromises = pendingData.map((salesData, index) => {
                return new Promise((resolve) => {
                    setTimeout(() => {
                        google.script.run
                            .withSuccessHandler((result) => {
                                syncedCount++;
                                console.log(`‚úÖ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà ${index + 1}:`, result);
                                updateOfflineStatus(`‚¨ÜÔ∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡πâ‡∏ß ${syncedCount}/${totalCount}...`);
                                resolve({ success: true, index, result });
                            })
                            .withFailureHandler((error) => {
                                console.error(`‚ùå ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà ${index + 1}:`, error);
                                resolve({ success: false, index, error });
                            })
                            .saveSalesData(salesData.items);
                    }, index * 2000);
                });
            });
            
            Promise.all(syncPromises).then(results => {
                const successful = results.filter(r => r.success).length;
                const failed = results.length - successful;
                
                if (failed === 0) {
                    removeFromLocalStorage(offlineStorage.pendingSales);
                    updateOfflineStatus(`‚úÖ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successful} ‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
                    showMessage(`üéâ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successful} ‡∏ä‡∏∏‡∏î`, 'success');
                    updateOfflineControlsVisibility();
                } else {
                    const remainingData = results
                        .filter(r => !r.success)
                        .map(r => pendingData[r.index]);
                    
                    saveToLocalStorage(offlineStorage.pendingSales, remainingData);
                    updateOfflineStatus(`‚ö†Ô∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successful} ‡∏ä‡∏∏‡∏î, ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ${failed} ‡∏ä‡∏∏‡∏î`);
                    showMessage(`‚ö†Ô∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${successful} ‡∏ä‡∏∏‡∏î, ‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${failed} ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå`, 'error');
                    updateOfflineControlsVisibility();
                }
            });
        }

        // Manual sync functions
        function manualSync() {
            if (!isOnline) {
                showMessage('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå', 'error');
                return;
            }
            
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            if (!pendingData || pendingData.length === 0) {
                showMessage('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå', 'success');
                return;
            }
            
            syncPendingData(pendingData);
        }

        function showPendingData() {
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            const tempData = loadFromLocalStorage(offlineStorage.scannedItems);
            
            let message = 'üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå:\n\n';
            
            if (pendingData && pendingData.length > 0) {
                message += `üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå: ${pendingData.length} ‡∏ä‡∏∏‡∏î\n`;
                pendingData.forEach((data, index) => {
                    message += `   ‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà ${index + 1}: ${data.items ? data.items.length : 'N/A'} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
                });
            } else {
                message += 'üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå: ‡πÑ‡∏°‡πà‡∏°‡∏µ\n';
            }
            
            if (tempData && tempData.items && tempData.items.length > 0) {
                message += `\nüíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß: ${tempData.items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
            } else {
                message += '\nüíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß: ‡πÑ‡∏°‡πà‡∏°‡∏µ\n';
            }
            
            message += `\nüåê ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${isOnline ? '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' : '‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå'}`;
            
            alert(message);
        }

        function clearAllOfflineData() {
            const confirmMsg = '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n\n‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡πÑ‡∏õ!';
            
            if (confirm(confirmMsg)) {
                Object.values(offlineStorage).forEach(key => {
                    removeFromLocalStorage(key);
                });
                
                updateOfflineControlsVisibility();
                showMessage('üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß', 'success');
            }
        }

        function updateOfflineControlsVisibility() {
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            const tempData = loadFromLocalStorage(offlineStorage.scannedItems);
            const hasPendingData = pendingData && pendingData.length > 0;
            const hasTempData = tempData && tempData.items && tempData.items.length > 0;
            const hasAnyOfflineData = hasPendingData || hasTempData;
            
            const syncButton = document.getElementById('syncButton');
            const showPendingButton = document.getElementById('showPendingButton');
            const clearOfflineButton = document.getElementById('clearOfflineButton');
            
            if (syncButton) {
                syncButton.style.display = (hasPendingData && isOnline) ? 'block' : 'none';
                if (hasPendingData) {
                    syncButton.innerHTML = `‚¨ÜÔ∏è ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (${pendingData.length})`;
                }
            }
            
            if (showPendingButton) {
                showPendingButton.style.display = hasAnyOfflineData ? 'block' : 'none';
                if (hasAnyOfflineData) {
                    const totalItems = (hasPendingData ? pendingData.length : 0) + (hasTempData ? 1 : 0);
                    showPendingButton.innerHTML = `üìã ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå (${totalItems})`;
                }
            }
            
            if (clearOfflineButton) {
                clearOfflineButton.style.display = hasAnyOfflineData ? 'block' : 'none';
            }
        }

        // ==============================================
        // üîß LOCAL STORAGE FUNCTIONS
        // ==============================================

        function saveToLocalStorage(key, data) {
            try {
                const jsonData = JSON.stringify({
                    data: data,
                    timestamp: new Date().getTime(),
                    version: '2.0'
                });
                localStorage.setItem(key, jsonData);
                return true;
            } catch (error) {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Local Storage:', error);
                return false;
            }
        }

        function loadFromLocalStorage(key) {
            try {
                const jsonData = localStorage.getItem(key);
                if (jsonData) {
                    const parsed = JSON.parse(jsonData);
                    return parsed.data;
                }
                return null;
            } catch (error) {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Local Storage:', error);
                return null;
            }
        }

        function removeFromLocalStorage(key) {
            try {
                localStorage.removeItem(key);
                return true;
            } catch (error) {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Local Storage:', error);
                return false;
            }
        }

        function cleanOldOfflineData() {
            try {
                const keys = Object.values(offlineStorage);
                keys.forEach(key => {
                    const data = localStorage.getItem(key);
                    if (data) {
                        const parsed = JSON.parse(data);
                        const daysSinceCreation = (Date.now() - parsed.timestamp) / (1000 * 60 * 60 * 24);
                        
                        if (daysSinceCreation > 7) {
                            localStorage.removeItem(key);
                            console.log(`üßπ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤: ${key}`);
                        }
                    }
                });
            } catch (error) {
                console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏î‡πâ:', error);
            }
        }

        function getDeviceId() {
            let deviceId = localStorage.getItem('device_id');
            if (!deviceId) {
                deviceId = 'device_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
                localStorage.setItem('device_id', deviceId);
            }
            return deviceId;
        }

        // ==============================================
        // üîß UTILITY FUNCTIONS
        // ==============================================

        function updateOfflineStatus(message) {
            let statusElement = document.getElementById('offlineStatus');
            
            if (!statusElement) {
                statusElement = document.createElement('div');
                statusElement.id = 'offlineStatus';
                statusElement.className = 'offline-status';
                document.body.appendChild(statusElement);
            }
            
            statusElement.textContent = message;
            
            // Change color based on status
            if (message.includes('‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå') || message.includes('üìµ')) {
                statusElement.style.background = 'rgba(255, 107, 107, 0.9)';
            } else if (message.includes('‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå') || message.includes('üåê')) {
                statusElement.style.background = 'rgba(76, 175, 80, 0.9)';
            } else if (message.includes('‡∏ã‡∏¥‡∏á‡∏Ñ‡πå') || message.includes('‚¨ÜÔ∏è')) {
                statusElement.style.background = 'rgba(33, 150, 243, 0.9)';
            } else {
                statusElement.style.background = 'rgba(0,0,0,0.8)';
            }
            
            // Hide message after 5 seconds (except for main status)
            if (!message.includes('‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå') && !message.includes('‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå')) {
                setTimeout(() => {
                    updateOfflineStatus(isOnline ? 'üåê ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' : 'üìµ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå');
                }, 5000);
            }
        }

        function showLargeImage(imageSrc, itemName) {
            const modal = document.createElement('div');
            modal.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100vw;
                height: 100vh;
                background: rgba(0,0,0,0.95);
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                z-index: 9999;
                cursor: pointer;
                padding: 20px;
                box-sizing: border-box;
                overflow: auto;
            `;
            
            const img = document.createElement('img');
            img.src = imageSrc;
            img.alt = itemName;
            img.style.cssText = `
                max-width: 98vw;
                max-height: 90vh;
                width: auto;
                height: auto;
                border-radius: 15px;
                box-shadow: 0 20px 60px rgba(0,0,0,0.8);
                object-fit: contain;
                transition: transform 0.3s ease;
            `;
            
            const title = document.createElement('div');
            title.textContent = itemName;
            title.style.cssText = `
                color: white;
                font-size: 1.5rem;
                font-weight: bold;
                margin-top: 20px;
                text-align: center;
                text-shadow: 0 2px 10px rgba(0,0,0,0.8);
                max-width: 90%;
            `;
            
            const closeBtn = document.createElement('div');
            closeBtn.innerHTML = '‚úï';
            closeBtn.style.cssText = `
                position: absolute;
                top: 30px;
                right: 30px;
                color: white;
                font-size: 40px;
                font-weight: bold;
                cursor: pointer;
                background: rgba(255,255,255,0.2);
                width: 60px;
                height: 60px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                backdrop-filter: blur(10px);
                transition: all 0.3s ease;
                border: 2px solid rgba(255,255,255,0.3);
            `;
            
            const instruction = document.createElement('div');
            instruction.innerHTML = '‡∫Ñ‡∫•‡∫¥‡∫Å‡∫ó‡∫µ‡ªà‡ªÉ‡∫î‡∫Å‡ªç‡ªà‡ªÑ‡∫î‡ªâ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫õ‡∫¥‡∫î';
            instruction.style.cssText = `
                position: absolute;
                bottom: 30px;
                color: rgba(255,255,255,0.7);
                font-size: 1.1rem;
                text-align: center;
                pointer-events: none;
            `;
            
            modal.appendChild(img);
            modal.appendChild(title);
            modal.appendChild(closeBtn);
            modal.appendChild(instruction);
            document.body.appendChild(modal);
            
            // Animation
            modal.style.opacity = '0';
            img.style.transform = 'scale(0.8)';
            
            requestAnimationFrame(() => {
                modal.style.opacity = '1';
                modal.style.transition = 'opacity 0.3s ease';
                img.style.transform = 'scale(1)';
                });
            
            // Close modal events
            modal.addEventListener('click', function() {
                modal.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(modal);
                }, 300);
            });
            
            closeBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                modal.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(modal);
                }, 300);
            });
            
            closeBtn.addEventListener('mouseover', function() {
                this.style.background = 'rgba(255,255,255,0.3)';
                this.style.transform = 'scale(1.1)';
            });
            
            closeBtn.addEventListener('mouseout', function() {
                this.style.background = 'rgba(255,255,255,0.2)';
                this.style.transform = 'scale(1)';
            });
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('lo-LA', {
                style: 'decimal',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            }).format(amount) + ' ‚Ç≠';
        }

        function showMessage(message, type = 'success') {
            const statusMessage = document.getElementById('statusMessage');
            if (!statusMessage) return;
            
            statusMessage.className = `status-message status-${type}`;
            statusMessage.innerHTML = `
                <div style="display: flex; align-items: center; justify-content: center; gap: 10px;">
                    <span style="font-size: 1.2rem;">
                        ${type === 'success' ? '‚úÖ' : type === 'error' ? '‚ùå' : '‚ÑπÔ∏è'}
                    </span>
                    <span>${message}</span>
                </div>
            `;
            statusMessage.style.display = 'block';
            
            // Auto hide after 5 seconds
            setTimeout(() => {
                if (statusMessage) {
                    statusMessage.style.display = 'none';
                }
            }, 5000);
        }

        function handleError(error) {
            console.error('System Error:', error);
            showMessage(`‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫•‡∫∞‡∫ö‡∫ª‡∫ö: ${error.message || error}`, 'error');
            
            // Try to recover from error
            const loadingSection = document.getElementById('loadingSection');
            if (loadingSection) {
                loadingSection.innerHTML = `
                    <div style="text-align: center; color: #ff6b6b;">
                        <div style="font-size: 4rem; margin-bottom: 20px;">‚ö†Ô∏è</div>
                        <h3>‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡ªÇ‡∫´‡∫º‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô</h3>
                        <p style="color: #666; margin: 20px 0;">${error.message || error}</p>
                        <button onclick="location.reload()" style="background: #4facfe; color: white; border: none; padding: 15px 30px; border-radius: 10px; cursor: pointer; font-size: 1.1rem;">
                            üîÑ ‡ªÇ‡∫´‡∫º‡∫î‡∫Ñ‡∫∑‡∫ô‡ªÉ‡ªù‡ªà
                        </button>
                    </div>
                `;
            }
        }

        // ==============================================
        // üîß PERFORMANCE MONITORING
        // ==============================================

        function monitorPerformance() {
            // Monitor memory usage
            if (performance.memory) {
                console.log('üìä Memory Usage:', {
                    used: (performance.memory.usedJSHeapSize / 1048576).toFixed(2) + ' MB',
                    total: (performance.memory.totalJSHeapSize / 1048576).toFixed(2) + ' MB',
                    limit: (performance.memory.jsHeapSizeLimit / 1048576).toFixed(2) + ' MB'
                });
            }
            
            // Monitor data sizes
            console.log('üìä Data Sizes:', {
                items: itemsData.size + ' items',
                cost: costData.size + ' cost records',
                scanned: scannedItems.length + ' scanned items'
            });
        }

        // Monitor performance every 30 seconds
        setInterval(monitorPerformance, 30000);

        // ==============================================
        // üîß ERROR HANDLING & RECOVERY
        // ==============================================

        window.addEventListener('error', function(event) {
            console.error('üí• JavaScript Error:', event.error);
            if (event.error && event.error.stack) {
                console.error('Stack:', event.error.stack);
            }
            
            // Try to maintain app stability
            if (event.error && event.error.message.includes('google.script')) {
                showMessage('‡∫Å‡∫≤‡∫ô‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫°‡∫ï‡ªç‡ªà‡∫Å‡∫±‡∫ö Google Sheets ‡∫Ç‡∫±‡∫î‡∫Ç‡ªâ‡∫≠‡∫á ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫à‡∫∞‡∫õ‡∫±‡∫ö‡ªÉ‡∫ä‡ªâ‡ªÇ‡ªù‡∫î‡∫≠‡∫≠‡∫ü‡ªÑ‡∫•‡∫ô‡ªå', 'error');
                isOnline = false;
                updateOfflineStatus('üìµ ‡∫≠‡∫≠‡∫ü‡ªÑ‡∫•‡∫ô‡ªå - ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫°‡∫ï‡ªç‡ªà');
                updateOfflineControlsVisibility();
            }
        });

        window.addEventListener('unhandledrejection', function(event) {
            console.error('üí• Unhandled Promise Rejection:', event.reason);
            event.preventDefault(); // Prevent the default browser behavior
            
            // Handle specific promise rejections
            if (event.reason && event.reason.message) {
                if (event.reason.message.includes('network') || event.reason.message.includes('fetch')) {
                    isOnline = false;
                    updateOfflineStatus('üìµ ‡∫≠‡∫≠‡∫ü‡ªÑ‡∫•‡∫ô‡ªå - ‡∫Å‡∫≤‡∫ô‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫°‡∫ï‡ªç‡ªà‡∫Ç‡∫±‡∫î‡∫Ç‡ªâ‡∫≠‡∫á');
                    updateOfflineControlsVisibility();
                }
            }
        });

        // ==============================================
        // üîß KEYBOARD SHORTCUTS
        // ==============================================

        document.addEventListener('keydown', function(e) {
            // Ctrl+S or Cmd+S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                if (scannedItems.length > 0) {
                    const saveButton = document.getElementById('saveButton');
                    if (saveButton && !saveButton.disabled) {
                        handleSaveClick(saveButton);
                    }
                }
                return;
            }
            
            // Ctrl+A or Cmd+A to select all
            if ((e.ctrlKey || e.metaKey) && e.key === 'a' && e.target.tagName !== 'INPUT') {
                e.preventDefault();
                const selectAllCheckbox = document.getElementById('selectAllCheckbox');
                if (selectAllCheckbox) {
                    selectAllCheckbox.checked = !selectAllCheckbox.checked;
                    toggleSelectAll(selectAllCheckbox.checked);
                }
                return;
            }
            
            // Escape to clear selection
            if (e.key === 'Escape') {
                if (selectedItems.size > 0) {
                    clearSelectionOnly();
                } else {
                    const barcodeInput = document.getElementById('barcodeInput');
                    if (barcodeInput) {
                        barcodeInput.focus();
                        barcodeInput.select();
                    }
                }
                return;
            }
            
            // F5 or Ctrl+R to refresh (but save data first)
            if (e.key === 'F5' || ((e.ctrlKey || e.metaKey) && e.key === 'r')) {
                if (scannedItems.length > 0) {
                    autoSaveScannedItems();
                    console.log('üíæ Auto-saved before refresh');
                }
            }
        });

        // ==============================================
        // üîß ADVANCED OFFLINE FEATURES
        // ==============================================

        // Background sync when coming back online
        function advancedOfflineSync() {
            if (!isOnline) return;
            
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            if (pendingData && pendingData.length > 0) {
                console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏° Background Sync...');
                
                // Start background sync after 3 seconds
                setTimeout(() => {
                    if (isOnline && !document.hidden) {
                        const shouldAutoSync = confirm('‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ã‡∏¥‡∏á‡∏Ñ‡πå ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?');
                        if (shouldAutoSync) {
                            syncPendingData(pendingData);
                        }
                    }
                }, 3000);
            }
        }

        // Enhanced auto-save with compression
        function enhancedAutoSave() {
            if (scannedItems.length === 0) return;
            
            const sessionData = {
                items: scannedItems.map(item => ({
                    id: item.id,
                    barcode: item.barcode,
                    name: item.name,
                    unit: item.unit,
                    quantityPerPack: item.quantityPerPack,
                    price: item.price,
                    quantity: item.quantity,
                    image: item.image,
                    totalPrice: item.totalPrice,
                    profit: item.profit,
                    costPrice: item.costPrice
                })),
                selectedItems: Array.from(selectedItems),
                itemCounter: itemCounter,
                timestamp: Date.now(),
                deviceInfo: {
                    userAgent: navigator.userAgent,
                    platform: navigator.platform,
                    language: navigator.language,
                    deviceId: getDeviceId()
                }
            };
            
            // Try to save to multiple storage methods
            const saved = saveToLocalStorage(offlineStorage.scannedItems, sessionData);
            
            if (saved) {
                console.log(`üíæ Enhanced auto-save: ${scannedItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                
                // Also save a backup
                saveToLocalStorage(offlineStorage.sessionData, {
                    ...sessionData,
                    isBackup: true
                });
            }
        }

        // Data integrity check
        function checkDataIntegrity() {
            let issues = [];
            
            // Check for duplicate items
            const barcodes = new Set();
            const duplicates = [];
            
            scannedItems.forEach(item => {
                if (barcodes.has(item.barcode)) {
                    duplicates.push(item.barcode);
                } else {
                    barcodes.add(item.barcode);
                }
            });
            
            if (duplicates.length > 0) {
                issues.push(`‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥: ${duplicates.join(', ')}`);
            }
            
            // Check for invalid prices
            const invalidPrices = scannedItems.filter(item => 
                isNaN(item.price) || item.price < 0 || 
                isNaN(item.totalPrice) || item.totalPrice < 0
            );
            
            if (invalidPrices.length > 0) {
                issues.push(`‡∏û‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${invalidPrices.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            }
            
            // Check for invalid quantities
            const invalidQuantities = scannedItems.filter(item => 
                isNaN(item.quantity) || item.quantity <= 0
            );
            
            if (invalidQuantities.length > 0) {
                issues.push(`‡∏û‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${invalidQuantities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
            }
            
            if (issues.length > 0) {
                console.warn('‚ö†Ô∏è Data Integrity Issues:', issues);
                showMessage(`‚ö†Ô∏è ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${issues.join(', ')}`, 'error');
                return false;
            }
            
            return true;
        }

        // Enhanced error recovery
        function attemptDataRecovery() {
            console.log('üîÑ ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            
            // Try to load from backup
            const backupData = loadFromLocalStorage(offlineStorage.sessionData);
            if (backupData && backupData.items && backupData.items.length > 0) {
                console.log('‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• backup');
                return backupData;
            }
            
            // Try to load from pending sales
            const pendingData = loadFromLocalStorage(offlineStorage.pendingSales);
            if (pendingData && pendingData.length > 0) {
                const latestPending = pendingData[pendingData.length - 1];
                if (latestPending.items) {
                    console.log('‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å pending sales');
                    return {
                        items: latestPending.items,
                        selectedItems: [],
                        itemCounter: latestPending.items.length + 1,
                        timestamp: latestPending.timestamp
                    };
                }
            }
            
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
            return null;
        }

        // ==============================================
        // üîß FINAL INITIALIZATION
        // ==============================================

        // Initialize advanced features after page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üéØ DOM Content Loaded');
            
            // Setup advanced offline features
            setTimeout(() => {
                advancedOfflineSync();
            }, 2000);
            
            // Setup periodic data integrity checks
            setInterval(() => {
                if (scannedItems.length > 0) {
                    checkDataIntegrity();
                }
            }, 60000); // Every minute
            
            // Setup enhanced auto-save
            setInterval(() => {
                enhancedAutoSave();
            }, 15000); // Every 15 seconds
            
            // Setup periodic cleanup
            setInterval(() => {
                cleanOldOfflineData();
            }, 300000); // Every 5 minutes
            
            console.log('‚úÖ Advanced features initialized');
        });

        // Page visibility change handler
        document.addEventListener('visibilitychange', function() {
            if (document.hidden) {
                // Page hidden - save data
                enhancedAutoSave();
                console.log('üì± Page hidden - data saved');
            } else {
                // Page visible - check for updates
                console.log('üì± Page visible - checking for updates');
                if (isOnline) {
                    advancedOfflineSync();
                }
                
                // Update UI
                updateOfflineControlsVisibility();
                const barcodeInput = document.getElementById('barcodeInput');
                if (barcodeInput && scannedItems.length > 0) {
                    setTimeout(() => barcodeInput.focus(), 500);
                }
            }
        });

     window.addEventListener('beforeunload', function(event) {
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á WhatsApp
    if (window.isSendingWhatsApp) {
        return;
    }
    
    if (scannedItems.length > 0) {
        enhancedAutoSave();
        
        // Only show warning if there are unsaved changes and we're online
        if (isOnline) {
            const message = '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?';
            event.returnValue = message;
            return message;
        }
    }
});
// ==============================================
        // üîß DEBT TRACKING FUNCTIONS
        // ==============================================

        let customerList = { customers: [], phones: [], customerPhoneMap: {} };
        let currentDebtItems = [];

        // Load customer list on initialization
        function loadCustomerList() {
            google.script.run
                .withSuccessHandler((result) => {
                    customerList = result;
                    console.log('üìã ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', customerList.customers.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
                })
                .withFailureHandler((error) => {
                    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ:', error);
                })
                .getCustomerList();
        }

        // Show/hide debt button based on selection
        function updateDebtButtonVisibility() {
    let debtBtn = document.getElementById('debtButton');
    
    if (!debtBtn) {
        const totalAmountHeaderElement = document.getElementById('totalAmountHeader');
        if (totalAmountHeaderElement && totalAmountHeaderElement.parentNode) {
            debtBtn = document.createElement('button');
            debtBtn.id = 'debtButton';
            debtBtn.className = 'debt-button';
            debtBtn.innerHTML = 'üí≥ ‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ';
            debtBtn.onclick = showDebtModalOriginal; // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°
            
            totalAmountHeaderElement.parentNode.appendChild(debtBtn);
        }
    }
    
    if (debtBtn) {
        if (selectedItems.size > 0) {
            debtBtn.classList.add('show');
            debtBtn.innerHTML = `üí≥ ‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ (${selectedItems.size})`;
        } else {
            debtBtn.classList.remove('show');
        }
    }
}

        // Show debt modal
function showDebtModalOriginal() {
    console.log('üöÄ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å showDebtModal...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    if (selectedItems.size === 0) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    console.log('‚úÖ ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:', selectedItems.size);
    
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingModal = document.getElementById('debtModal');
    if (existingModal) {
        console.log('üóë ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°');
        document.body.removeChild(existingModal);
    }

    // Prepare debt items from selected items
    currentDebtItems = [];
    let totalShopPrice = 0;
    let totalQuantity = 0;

    selectedItems.forEach(itemId => {
        const item = scannedItems.find(i => i.id === itemId);
        if (item) {
            const debtItem = {
                idNumber: `ID_${Date.now()}_${Math.floor(Math.random() * 1000)}`,
                barcode: item.barcode,
                itemName: item.name,
                unit: item.unit,
                quantityPerUnit: item.quantityPerPack,
                quantity: item.quantity,
                shopPrice: item.price,
                customerPrice: 0,
                image: item.image,
                totalShopPrice: item.totalPrice,
                totalCustomerPrice: 0,
                orderNumber: 'ORD' + Date.now(),
                debtDate: new Date().toLocaleString('lo-LA')
            };
            
            currentDebtItems.push(debtItem);
            totalShopPrice += item.totalPrice;
            totalQuantity += item.quantity;
        }
    });

    console.log('üì¶ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', {
        items: currentDebtItems.length,
        totalPrice: totalShopPrice,
        totalQuantity: totalQuantity
    });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á modal ‡πÉ‡∏´‡∏°‡πà
    createDebtModal(currentDebtItems, totalShopPrice, totalQuantity);
}

        // Create debt modal
       // Create debt modal (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà)

       function createDebtModal(debtItems, totalShopPrice, totalQuantity) {
    const modal = document.createElement('div');
    modal.className = 'debt-modal';
    modal.id = 'debtModal';

    modal.innerHTML = `
        <div class="debt-modal-content">
            <div class="debt-modal-header">
                <h2 class="debt-modal-title">üí≥ ‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤</h2>
                <button class="debt-close-btn" onclick="closeDebtModal()">&times;</button>
            </div>

            <!-- STEP 1: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤ -->
            <div class="debt-form-section" id="priceOptionSection" style="margin-bottom: 25px;">
                <div class="debt-section-title">üìã ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫õ‡∫∞‡ªÄ‡∫û‡∫î‡∫•‡∫≤‡∫Ñ‡∫≤</div>
                
                <div style="display: flex; gap: 20px; justify-content: center; margin: 20px 0; flex-wrap: wrap;">
                    <div class="price-option-card" id="option1" onclick="selectPriceOption(1)">
                        <div class="option-icon">üè™</div>
                        <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 1</div>
                        <div class="option-subtitle">‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</div>
                        <div class="option-description">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ó‡∫ª‡ªà‡∫ß‡ªÑ‡∫õ‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</div>
                    </div>
                    
                    <div class="price-option-card" id="option2" onclick="selectPriceOption(2)">
                        <div class="option-icon">üõí</div>
                        <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 2</div>
                        <div class="option-subtitle">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà</div>
                        <div class="option-description">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà ‡∫´‡∫º‡∫∑ ‡∫Ç‡∫≤‡∫ç‡∫ç‡∫ª‡∫Å‡∫•‡∫≤‡∫Ñ‡∫≤</div>
                    </div>
                </div>
                
                <div style="text-align: center; color: #666; margin-top: 20px; padding: 15px; background: #fff3cd; border-radius: 10px; border: 1px solid #ffeaa7;">
                    ‚ö†Ô∏è <strong>‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫õ‡∫∞‡ªÄ‡∫û‡∫î‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ï‡ªç‡ªà</strong>
                </div>
            </div>

            <!-- STEP 1.5: Print Options (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô) -->
            <div class="debt-form-section" id="printOptionsSection" style="display: none; margin-bottom: 25px;">
                <div class="debt-section-title">üñ®Ô∏è ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫û‡∫¥‡∫°</div>
                
                <div style="display: flex; gap: 20px; justify-content: center; margin: 20px 0; flex-wrap: wrap;">
                    <label style="display: flex; align-items: center; gap: 10px; padding: 15px 20px; background: #f8f9fa; border: 2px solid #e1e5e9; border-radius: 15px; cursor: pointer; transition: all 0.3s ease;" onclick="selectPrintOption('print')">
                        <input type="radio" name="printOption" value="print" id="printYes" style="width: 20px; height: 20px;">
                        <span style="font-size: 1.1rem; font-weight: bold;">üñ®Ô∏è ‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫õ‡∫¥‡ªâ‡∫ô</span>
                    </label>
                    
                    <label style="display: flex; align-items: center; gap: 10px; padding: 15px 20px; background: #f8f9fa; border: 2px solid #e1e5e9; border-radius: 15px; cursor: pointer; transition: all 0.3s ease;" onclick="selectPrintOption('no-print')">
                        <input type="radio" name="printOption" value="no-print" id="printNo" style="width: 20px; height: 20px;">
                        <span style="font-size: 1.1rem; font-weight: bold;">üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp</span>
                    </label>
                </div>
            </div>

           <!-- STEP 2: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô) -->
<div class="debt-form-section" id="itemsListSection" style="display: none; margin-bottom: 25px;">
    <div class="debt-section-title">üìã ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ - ‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç</div>
    
    <table class="debt-items-table" style="width: 100%; margin-top: 15px;">
        <thead>
            <tr>
                <th style="width: 25%;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                <th style="width: 10%;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                <th style="width: 15%;">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Ç‡∫≤‡∫ç‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                <th style="width: 15%;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                <th style="width: 15%;">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà</th>
                <th style="width: 15%;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà</th>
                <th style="width: 5%;">‡∫Æ‡∫π‡∫ö</th>
            </tr>
        </thead>
        <tbody id="debtItemsTableBody">
            ${debtItems.map((item, index) => `
                <tr data-index="${index}">
                    <td><strong>${item.itemName}</strong><br><small>${item.unit}</small></td>
                    <td><strong>${item.quantity}</strong></td>
                    <td>${formatCurrency(item.shopPrice)}</td>
                    <td><strong>${formatCurrency(item.totalShopPrice)}</strong></td>
                    <td>
                        <input type="number" 
                               id="customerPrice_${index}" 
                               class="debt-customer-price-input"
                               placeholder="‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤"
                               min="0" 
                               step="0.01"
                               style="width: 100%; padding: 8px; border: 2px solid #e1e5e9; border-radius: 6px; text-align: center; font-size: 0.9rem;"
                               onchange="updateItemCustomerPrice(${index})"
                               oninput="updateItemCustomerPrice(${index})">
                    </td>
                    <td>
                        <strong id="customerTotal_${index}" style="color: #ff6b6b;">0 ‚Ç≠</strong>
                    </td>
                    <td>
                        ${item.image ? 
                            `<img src="${item.image}" alt="${item.itemName}" class="debt-item-image">` : 
                            '<div style="width: 50px; height: 50px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; font-size: 0.8rem;">üì∑</div>'
                        }
                    </td>
                </tr>
            `).join('')}
        </tbody>
        <tfoot>
            <tr style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); font-weight: bold;">
                <td colspan="3">‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</td>
                <td><strong style="color: #4caf50;">${formatCurrency(totalShopPrice)}</strong></td>
                <td>‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç:</td>
                <td><strong id="totalCustomerAmount" style="color: #ff6b6b; font-size: 1.1rem;">0 ‚Ç≠</strong></td>
                <td></td>
            </tr>
            <tr style="background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); color: white; font-weight: bold;">
                <td colspan="5">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫™‡ªà‡∫ß‡∫ô‡∫•‡∫∏‡∫î (‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô - ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà):</td>
                <td><strong id="totalProfit" style="font-size: 1.2rem;">0 ‚Ç≠</strong></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    
    <div style="background: #f8f9fa; padding: 20px; border-radius: 15px; margin-top: 20px; text-align: center;">
        <div style="font-size: 1.2rem; margin-bottom: 10px;">
            <strong>‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: <span id="totalAmountDisplay">${formatCurrency(totalShopPrice)}</span></strong>
        </div>
        <div style="font-size: 0.9rem; color: #666;">
            ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: ${debtItems.length} | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô: ${totalQuantity}
        </div>
    </div>
</div>

            <!-- STEP 3: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô) -->
            <div class="debt-form-section" id="customerInfoSection" style="display: none; margin-bottom: 25px;">
                <div class="debt-section-title">üë§ ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤</div>
                
                <div class="debt-form-row">
                    <div class="debt-form-col">
                        <label class="debt-form-label">üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤*</label>
                        <div class="autocomplete-container">
                            <input type="text" id="customerName" class="debt-form-input" placeholder="‡ªÉ‡∫™‡ªà‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤" required>
                            <div id="customerNameSuggestions" class="autocomplete-suggestions"></div>
                        </div>
                    </div>
                    <div class="debt-form-col">
                        <label class="debt-form-label">üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö*</label>
                        <div class="autocomplete-container">
                            <input type="tel" id="phoneNumber" class="debt-form-input" placeholder="‡ªÉ‡∫™‡ªà‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö" required>
                            <div id="phoneNumberSuggestions" class="autocomplete-suggestions"></div>
                        </div>
                    </div>
                </div>
                
                <div class="debt-form-group">
                    <label class="debt-form-label">üí∞ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ô‡∫≠‡∫Å‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô</label>
                    <input type="number" id="extraAmount" class="debt-form-input" placeholder="‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÄ‡∫ï‡∫µ‡∫°" min="0" step="0.01" onchange="updateExtraAmount()" oninput="updateExtraAmount()">
                </div>
            </div>

       <!-- STEP 4: WhatsApp Options (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô) -->
<div class="debt-form-section" id="whatsappOptionsSection" style="display: none; margin-bottom: 25px;">
    <div class="debt-section-title">üì± ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫™‡∫ª‡ªà‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô</div>
    
    <div style="display: flex; gap: 15px; justify-content: center; margin: 20px 0; flex-wrap: wrap;">
        <button class="whatsapp-action-btn" onclick="saveDebtWithWhatsApp()" id="saveWhatsAppBtn" disabled>üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp</button>
        <button class="whatsapp-action-btn" onclick="saveDebtOnly()" id="saveOnlyBtn" disabled>üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô</button>
    </div>
</div>
    `;

    document.body.appendChild(modal);
    
    // Setup form handlers
    setupDebtFormHandlers();
    
    // Reset selection
    selectedPriceOption = null;
    selectedPrintOption = null;
}

        
// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó setupDebtFormHandlers ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö

function setupDebtFormHandlers() {
    

    // Customer name autocomplete
 
const customerNameInput = document.getElementById('customerName');
if (customerNameInput) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡πÄ‡∏°‡∏∑‡πà‡∏≠ focus (‡∏Ñ‡∏•‡∏¥‡∏Å)
    customerNameInput.addEventListener('focus', function() {
        showAllCustomerSuggestions();
    });
    
    customerNameInput.addEventListener('input', function() {
        if (this.value.trim() === '') {
            showAllCustomerSuggestions();
        } else {
            showAutocompleteSuggestions('customerName', this.value, customerList.customers);
        }
        checkButtonReadiness();
    });
    
    customerNameInput.addEventListener('change', function() {
        const phoneInput = document.getElementById('phoneNumber');
        if (phoneInput && customerList.customerPhoneMap[this.value]) {
            phoneInput.value = customerList.customerPhoneMap[this.value];
        }
        checkButtonReadiness();
    });
}

    // Phone number autocomplete
    const phoneInput = document.getElementById('phoneNumber');
    if (phoneInput) {
        phoneInput.addEventListener('input', function() {
            showAutocompleteSuggestions('phoneNumber', this.value, customerList.phones);
            checkButtonReadiness();
        });
    }

    // Extra amount change handler
    const extraAmountInput = document.getElementById('extraAmount');
    if (extraAmountInput) {
        extraAmountInput.addEventListener('input', updateExtraAmount);
        extraAmountInput.addEventListener('change', updateExtraAmount);
    }

    // Close modal when clicking outside
    const modal = document.getElementById('debtModal');
    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeDebtModal();
            }
        });
    }

    // ESC key to close
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeDebtModal();
        }
    });
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    checkButtonReadiness();
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô setupDebtFormHandlers
const customerNameInput = document.getElementById('customerName');
if (customerNameInput) {
    customerNameInput.addEventListener('input', function() {
        // ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°...
        checkButtonReadiness(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    });
    
    customerNameInput.addEventListener('change', function() {
        // ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°...
        checkButtonReadiness(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    });
}

const phoneInput = document.getElementById('phoneNumber');
if (phoneInput) {
    phoneInput.addEventListener('input', function() {
        // ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°...
        checkButtonReadiness(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    });
}

        // Calculate customer total
        function calculateCustomerTotal() {
            const customerPrice = parseFloat(document.getElementById('customerPrice').value) || 0;
            const totalCustomerAmount = currentDebtItems.reduce((sum, item) => sum + (item.quantity * customerPrice), 0);
            const totalShopPrice = currentDebtItems.reduce((sum, item) => sum + item.totalShopPrice, 0);
            const profit = totalCustomerAmount - totalShopPrice;

            const totalSection = document.getElementById('totalCustomerPrice');
            const totalElement = document.getElementById('calculatedCustomerTotal');
            const profitElement = document.getElementById('calculatedProfit');

            if (customerPrice > 0 && totalSection && totalElement && profitElement) {
                totalSection.style.display = 'block';
                totalElement.textContent = formatCurrency(totalCustomerAmount);
                profitElement.textContent = formatCurrency(profit);
                profitElement.style.color = profit >= 0 ? '#4caf50' : '#f44336';
            } else if (totalSection) {
                totalSection.style.display = 'none';
            }
        }

        // Autocomplete suggestions
        function showAutocompleteSuggestions(inputId, value, suggestions) {
            const suggestionsContainer = document.getElementById(inputId + 'Suggestions');
            if (!suggestionsContainer) return;

            if (!value.trim()) {
                suggestionsContainer.style.display = 'none';
                return;
            }

            const filteredSuggestions = suggestions.filter(item => 
                item.toLowerCase().includes(value.toLowerCase())
            ).slice(0, 5); // Show max 5 suggestions

            if (filteredSuggestions.length === 0) {
                suggestionsContainer.style.display = 'none';
                return;
            }

            suggestionsContainer.innerHTML = filteredSuggestions.map(suggestion => 
                `<div class="autocomplete-suggestion" onclick="selectSuggestion('${inputId}', '${suggestion}')">${suggestion}</div>`
            ).join('');

            suggestionsContainer.style.display = 'block';
        }

        // Select autocomplete suggestion
        function selectSuggestion(inputId, value) {
            const input = document.getElementById(inputId);
            if (input) {
                input.value = value;
                
                // Trigger change event for customer name
                if (inputId === 'customerName') {
                    input.dispatchEvent(new Event('change'));
                }
            }
            
            const suggestionsContainer = document.getElementById(inputId + 'Suggestions');
            if (suggestionsContainer) {
                suggestionsContainer.style.display = 'none';
            }
        }

       

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô saveDebtData ‡πÉ‡∏´‡πâ return Promise
function saveDebtDataPromise() {
    return new Promise(async (resolve) => {
        try {
            const customerName = document.getElementById('customerName').value.trim();
            const phoneNumber = document.getElementById('phoneNumber').value.trim();
            const extraAmount = parseFloat(document.getElementById('extraAmount').value) || 0;

            // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            const imageUrl = await uploadImageWithDebug();
            
            // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            currentDebtItems.forEach((item, index) => {
                const customerPrice = item.customerPrice || item.shopPrice;
                item.customerPrice = customerPrice;
                item.totalCustomerPrice = item.quantity * customerPrice;
            });

            const customerInfo = {
                customerName: customerName,
                phoneNumber: phoneNumber
            };

            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets
            google.script.run
                .withSuccessHandler((result) => {
                    resolve(result);
                })
                .withFailureHandler((error) => {
                    resolve({ success: false, message: error.message || error });
                })
                .saveDebtDataUpdated(currentDebtItems, customerInfo, extraAmount, imageUrl);
                
        } catch (error) {
            resolve({ success: false, message: error.message });
        }
    });
}
async function saveDebtWithWhatsApp() {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if (!selectedPriceOption) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
    if (!selectedPrintOption) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫û‡∫¥‡∫°', 'error');
        return;
    }
    
    const customerName = document.getElementById('customerName').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    
    if (!customerName || !phoneNumber) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫Å‡ªâ‡∫≠‡∫ô‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ª‡∫ö', 'error');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
    if (!validateAllCustomerPrices()) {
        showMessage('‡∫°‡∫µ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà‡∫ó‡∫µ‡ªà‡ªÄ‡∫Å‡∫µ‡∫ô‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Å‡ªà‡∫≠‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 2 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (selectedPriceOption === 2) {
        const priceInputs = document.querySelectorAll('.debt-customer-price-input');
        let allFilled = true;
        
        priceInputs.forEach((input, index) => {
            const value = parseFloat(input.value) || 0;
            if (value <= 0) {
                allFilled = false;
                input.style.borderColor = '#f44336';
            } else {
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ôarray
                if (currentDebtItems[index]) {
                    currentDebtItems[index].customerPrice = value;
                    currentDebtItems[index].totalCustomerPrice = value * currentDebtItems[index].quantity;
                }
                input.style.borderColor = '#4caf50';
            }
        });
        
        if (!allFilled) {
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÉ‡∫ô‡∫ó‡∫∏‡∫Å‡∫ä‡ªà‡∫≠‡∫á', 'error');
            return;
        }
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 1 ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô
        currentDebtItems.forEach(item => {
            item.customerPrice = item.shopPrice;
            item.totalCustomerPrice = item.shopPrice * item.quantity;
        });
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
    let totalCustomerPrice = 0;
    currentDebtItems.forEach(item => {
        totalCustomerPrice += item.quantity * (item.customerPrice || item.shopPrice);
    });
    
    const extraAmount = parseFloat(document.getElementById('extraAmount').value) || 0;
    const finalTotal = totalCustomerPrice + extraAmount;
    
    // üÜï STEP 1: ‡∏™‡πà‡∏á WhatsApp ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á Confirmation
    if (selectedPrintOption === 'print') {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå
        const printData = {
            customerName: customerName,
            phoneNumber: phoneNumber,
            billNumber: 'TEMP-' + Date.now(), // ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô
            items: currentDebtItems.map(item => ({
                itemName: item.itemName,
                unit: item.unit,
                quantity: item.quantity,
                price: item.customerPrice || item.shopPrice,
                total: item.quantity * (item.customerPrice || item.shopPrice)
            })),
            grandTotal: finalTotal,
            extraAmount: extraAmount
        };
        
        // ‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô
        createPrintableTable(printData);
    } else {
        // ‡∏™‡πà‡∏á WhatsApp ‡∏Å‡πà‡∏≠‡∏ô
        const whatsappMessage = generateDebtWhatsAppMessage(customerName, phoneNumber, 'TEMP-' + Date.now());
        sendToWhatsApp(whatsappMessage, phoneNumber);
    }
    
    // üÜï STEP 2: ‡πÅ‡∏™‡∏î‡∏á Confirmation Popup ‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
    setTimeout(() => {
        showDebtConfirmationPopup({
            type: selectedPrintOption,
            customerName: customerName,
            phoneNumber: phoneNumber,
            items: currentDebtItems,
            totalAmount: finalTotal,
            extraAmount: extraAmount
        });
    }, 1000); // ‡∏£‡∏≠ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á WhatsApp ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô
}
function validateAllCustomerPrices() {
    if (selectedPriceOption !== 2) return true; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2 ‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô
    
    for (let i = 0; i < currentDebtItems.length; i++) {
        const priceInput = document.getElementById(`customerPrice_${i}`);
        if (!priceInput) continue;
        
        const customerPrice = parseFloat(priceInput.value) || 0;
        const shopPrice = currentDebtItems[i].shopPrice;
        
        if (customerPrice > shopPrice) {
            return false; // ‡∏û‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
        }
    }
    return true; // ‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
}

function checkButtonReadiness() {
    if (!selectedPriceOption || !selectedPrintOption) {
        // ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        disableAllSaveButtons();
        return;
    }
    
    const customerName = document.getElementById('customerName').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const pricesValid = validateAllCustomerPrices();
    
    const saveWhatsAppBtn = document.getElementById('saveWhatsAppBtn');
    const saveOnlyBtn = document.getElementById('saveOnlyBtn');
    
    if (customerName && phoneNumber && pricesValid) {
        // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        if (saveWhatsAppBtn) {
            saveWhatsAppBtn.disabled = false;
            saveWhatsAppBtn.style.opacity = '1';
            saveWhatsAppBtn.style.cursor = 'pointer';
            saveWhatsAppBtn.style.background = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
        }
        if (saveOnlyBtn) {
            saveOnlyBtn.disabled = false;
            saveOnlyBtn.style.opacity = '1';
            saveOnlyBtn.style.cursor = 'pointer';
            saveOnlyBtn.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
        }
    } else {
        // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        disableAllSaveButtons();
    }
}

function disableAllSaveButtons() {
    const saveWhatsAppBtn = document.getElementById('saveWhatsAppBtn');
    const saveOnlyBtn = document.getElementById('saveOnlyBtn');
    
    if (saveWhatsAppBtn) {
        saveWhatsAppBtn.disabled = true;
        saveWhatsAppBtn.style.opacity = '0.6';
        saveWhatsAppBtn.style.cursor = 'not-allowed';
        saveWhatsAppBtn.style.background = '#ccc';
    }
    if (saveOnlyBtn) {
        saveOnlyBtn.disabled = true;
        saveOnlyBtn.style.opacity = '0.6';
        saveOnlyBtn.style.cursor = 'not-allowed';
        saveOnlyBtn.style.background = '#ccc';
    }
}

function createPrintableTable(debtData) {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà html, head, body
    let tableContent = `
        <div style="font-family: 'Noto Sans Lao', Arial, sans-serif; margin: 20px; background: white;">
            <div style="text-align: center; margin-bottom: 20px; font-weight: bold; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞ ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            
            <div style="margin-bottom: 15px; font-size: 14px;">
                ‚ñ∂ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${debtData.customerName}<br>
                ‚ñ∂ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫™‡ªç‡∫≤‡∫Ñ‡∫±‡∫ô‡ªÇ‡∫ó: ${debtData.billNumber}<br>
                ‚ñ∂ ‡ªÇ‡∫ó: ${debtData.phoneNumber}<br>
                ‚ñ∂ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${new Date().toLocaleDateString('lo-LA')}
            </div>
            
            <div style="text-align: center; font-weight: bold; margin: 15px 0;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞:&gt;&gt;&gt;
            </div>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 2px solid #000;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫ä‡∫∑‡ªà‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫≤‡∫Ñ‡∫≤</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫ß‡∫°</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡ªÄ‡∫á‡∫¥‡∫ô‡∫ô‡∫≠‡∫Å‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô</th>
                    </tr>
                </thead>
                <tbody>`;
    
    debtData.items.forEach((item, index) => {
        tableContent += `
                    <tr>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${index + 1}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.itemName}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.unit}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.quantity}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.price.toLocaleString()}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.total.toLocaleString()}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${debtData.extraAmount || 0}</td>
                    </tr>`;
    });
    
    tableContent += `
                    <tr style="background-color: #e0e0e0; font-weight: bold;">
                        <td colspan="6" style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î‡∫ó‡∫µ‡ªà‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞:</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${debtData.grandTotal.toLocaleString()} k</td>
                    </tr>
                </tbody>
            </table>
            
            <div style="text-align: center; margin-top: 20px; font-weight: bold; border-top: 2px solid #000; padding-top: 10px;">
                &lt;&lt;&lt; ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡∫°‡∫≤‡∫≠‡∫∏‡∫î‡ªú‡∫π‡∫ô &gt;&gt;&gt;
            </div>
        </div>`;
    
    // ‡πÄ‡∏õ‡∏¥‡∏î window ‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    const printWindow = window.open('', '_blank');
    printWindow.document.write(tableContent);
    printWindow.document.close();
    printWindow.print();
    setTimeout(() => printWindow.close(), 1000);
}


        // Handle save success
        function handleDebtSaveSuccess(result) {
            if (result.success) {
                showMessage(`‚úÖ ${result.message}`, 'success');
                closeDebtModal();
                
                // Optional: Refresh customer list
                loadCustomerList();
                
                // Show summary
                setTimeout(() => {
                    showMessage(`üí∞ ‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô: ${formatCurrency(result.totalShopPrice)} | ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${formatCurrency(result.totalCustomerPrice)}`, 'success');
                }, 2000);
            } else {
                showMessage(`‚ùå ${result.message}`, 'error');
                
                // Re-enable save button
                const saveBtn = document.querySelector('.debt-save-btn');
                if (saveBtn) {
                    saveBtn.disabled = false;
                    saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ';
                }
            }
        }

        // Handle save error
        function handleDebtSaveError(error) {
            console.error('‚ùå Debt save error:', error);
            showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ${error.message || error}`, 'error');
            
            // Re-enable save button
            const saveBtn = document.querySelector('.debt-save-btn');
            if (saveBtn) {
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ';
            }
        }

        // Close debt modal
        function closeDebtModal() {
            const modal = document.getElementById('debtModal');
            if (modal) {
                modal.style.opacity = '0';
                setTimeout(() => {
                    document.body.removeChild(modal);
                }, 300);
            }
            
            // Remove event listeners
            document.removeEventListener('keydown', closeDebtModal);
        }

        // ==============================================
        // üîß INTEGRATE WITH EXISTING SYSTEM
        // ==============================================

       
        // Update individual item customer price (‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà)
      function updateItemCustomerPrice(itemIndex) {
    const priceInput = document.getElementById(`customerPrice_${itemIndex}`);
    const totalElement = document.getElementById(`customerTotal_${itemIndex}`);
    
    if (!priceInput || !totalElement || !currentDebtItems[itemIndex]) return;
    
    const customerPrice = parseFloat(priceInput.value) || 0;
    const shopPrice = currentDebtItems[itemIndex].shopPrice;
    const quantity = currentDebtItems[itemIndex].quantity;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    if (customerPrice > shopPrice) {
        priceInput.style.borderColor = '#f44336';
        priceInput.style.backgroundColor = '#ffebee';
        showMessage(`‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà‡∫ö‡ªç‡ªà‡∫Ñ‡∫ß‡∫ô‡ªÄ‡∫Å‡∫µ‡∫ô‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô (${formatCurrency(shopPrice)})`, 'error');
        
        priceInput.value = shopPrice;
        const itemTotal = quantity * shopPrice;
        totalElement.textContent = formatCurrency(itemTotal);
        totalElement.style.color = '#ff6b6b';
        
        currentDebtItems[itemIndex].customerPrice = shopPrice;
        currentDebtItems[itemIndex].totalCustomerPrice = itemTotal;
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        updateOverallTotals();
        checkButtonReadiness();
        return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    priceInput.style.borderColor = '#4caf50';
    priceInput.style.backgroundColor = 'white';
    
    const itemTotal = quantity * customerPrice;
    totalElement.textContent = formatCurrency(itemTotal);
    totalElement.style.color = customerPrice > 0 ? '#ff6b6b' : '#ccc';
    
    currentDebtItems[itemIndex].customerPrice = customerPrice;
    currentDebtItems[itemIndex].totalCustomerPrice = itemTotal;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    updateOverallTotals();
    validateSaveButton();
    checkButtonReadiness(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Real-time update
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
function setupCustomerValidation() {
    const customerName = document.getElementById('customerName');
    const phoneNumber = document.getElementById('phoneNumber');
    
    if (customerName) {
        customerName.addEventListener('input', validateSaveButton);
    }
    if (phoneNumber) {
        phoneNumber.addEventListener('input', validateSaveButton);
    }
}
// Update overall totals (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß - ‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)
        function updateOverallTotals() {
            let totalCustomerAmount = 0;
            let totalShopAmount = 0;
            let hasValidData = false;
            
            currentDebtItems.forEach(item => {
                totalCustomerAmount += item.totalCustomerPrice || 0;
                totalShopAmount += item.totalShopPrice || 0;
                
                // ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                if (item.quantity > 0) {
                    hasValidData = true;
                }
            });
            
            const profit = totalCustomerAmount - totalShopAmount;
            
            // Update table footer
            const totalCustomerElement = document.getElementById('totalCustomerAmount');
            const totalProfitElement = document.getElementById('totalProfit');
            
            if (totalCustomerElement) {
                totalCustomerElement.textContent = formatCurrency(totalCustomerAmount);
            }
            
            if (totalProfitElement) {
                totalProfitElement.textContent = formatCurrency(profit);
                totalProfitElement.style.color = profit >= 0 ? 'white' : '#ffcdd2';
            }
            
            // Update final totals (‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏≠‡∏Å‡∏™‡πÅ‡∏Å‡∏ô)
            updateFinalTotals();
            
            // Enable/disable save button (‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô)
            const saveBtn = document.getElementById('debtSaveBtn');
            if (saveBtn) {
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if (hasValidData && currentDebtItems.length > 0) {
                    saveBtn.disabled = false;
                    saveBtn.style.opacity = '1';
                    saveBtn.style.cursor = 'pointer';
                    saveBtn.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
                } else {
                    saveBtn.disabled = true;
                    saveBtn.style.opacity = '0.6';
                    saveBtn.style.cursor = 'not-allowed';
                    saveBtn.style.background = '#ccc';
                }
            }
        }
        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏≠‡∏Å‡∏™‡πÅ‡∏Å‡∏ô
        function updateExtraAmount() {
            const extraAmountInput = document.getElementById('extraAmount');
            const extraAmount = parseFloat(extraAmountInput.value) || 0;
            
            const extraAmountRow = document.getElementById('extraAmountRow');
            const extraAmountDisplay = document.getElementById('extraAmountDisplay');
            
            if (extraAmount > 0) {
                extraAmountRow.style.display = 'flex';
                extraAmountDisplay.textContent = formatCurrency(extraAmount);
            } else {
                extraAmountRow.style.display = 'none';
            }
            
            updateFinalTotals();
        }

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ (‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏≠‡∏Å‡∏™‡πÅ‡∏Å‡∏ô)
        function updateFinalTotals() {
            const extraAmount = parseFloat(document.getElementById('extraAmount').value) || 0;
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            let totalCustomerAmount = 0;
            let totalShopAmount = 0;
            
            currentDebtItems.forEach(item => {
                totalCustomerAmount += item.totalCustomerPrice || 0;
                totalShopAmount += item.totalShopPrice || 0;
            });
            
            // ‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏≠‡∏Å‡∏™‡πÅ‡∏Å‡∏ô
            const finalShopTotal = totalShopAmount + extraAmount;
            const finalCustomerTotal = totalCustomerAmount + extraAmount;
            const finalProfit = finalCustomerTotal - finalShopTotal;
            
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
            const finalShopElement = document.getElementById('finalSummaryShopTotal');
            const finalCustomerElement = document.getElementById('finalSummaryCustomerTotal');
            const finalProfitElement = document.getElementById('finalSummaryProfit');
            const baseCustomerElement = document.getElementById('baseSummaryCustomerTotal');
            
            if (finalShopElement) finalShopElement.textContent = formatCurrency(finalShopTotal);
            if (finalCustomerElement) finalCustomerElement.textContent = formatCurrency(finalCustomerTotal);
            if (baseCustomerElement) baseCustomerElement.textContent = formatCurrency(totalCustomerAmount);
            
            if (finalProfitElement) {
                finalProfitElement.textContent = formatCurrency(finalProfit);
                finalProfitElement.style.color = finalProfit >= 0 ? '#43e97b' : '#ff6b6b';
            }
        }

        // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        function previewImage(input) {
            const imagePreview = document.getElementById('imagePreview');
            const previewImg = document.getElementById('previewImg');
            const imageFileName = document.getElementById('imageFileName');
            
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
                if (!file.type.startsWith('image/')) {
                    showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡ªÑ‡∫ü‡∫•‡ªå‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô', 'error');
                    input.value = '';
                    return;
                }
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showMessage('‡∫Ç‡∫∞‡ªú‡∫≤‡∫î‡ªÑ‡∫ü‡∫•‡ªå‡∫ö‡ªç‡ªà‡∫Ñ‡∫ß‡∫ô‡ªÄ‡∫Å‡∫µ‡∫ô 5MB', 'error');
                    input.value = '';
                    return;
                }
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
                imageFileName.textContent = file.name;
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ
                const reader = new FileReader();
                reader.onload = function(e) {
                    previewImg.src = e.target.result;
                    imagePreview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                imagePreview.style.display = 'none';
                imageFileName.textContent = '';
            }
        }
// ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)
        function uploadImage() {
            return new Promise((resolve) => {
                const imageInput = document.getElementById('documentImage');
                const file = imageInput.files[0];
                
                if (!file) {
                    console.log('üîç ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î');
                    resolve('');
                    return;
                }
                
                console.log('üìÅ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå:', file.name, '‡∏Ç‡∏ô‡∏≤‡∏î:', file.size, 'bytes');
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    const base64Data = e.target.result;
                    const fileName = `debt_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9.-]/g, '_')}`;
                    const mimeType = file.type;
                    
                    console.log('üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå:', {
                        fileName: fileName,
                        mimeType: mimeType,
                        base64Length: base64Data.length
                    });
                    
                    // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ Google Drive
                    google.script.run
                        .withSuccessHandler((result) => {
                            console.log('üì• ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å Google Apps Script:', result);
                            
                            if (result && result.success) {
                                console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                                console.log('üîó URL ‡∏ï‡πà‡∏≤‡∏á‡πÜ:', {
                                    fileId: result.fileId,
                                    viewUrl: result.viewUrl,
                                    directUrl: result.directUrl
                                });
                                
                                // ‡πÉ‡∏ä‡πâ directUrl ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ
                                resolve(result.directUrl || result.viewUrl || '');
                            } else {
                                console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', result);
                                showMessage('‡∫≠‡∫±‡∫ö‡ªÇ‡∫´‡∫º‡∫î‡∫Æ‡∫π‡∫ö‡∫•‡∫ª‡ªâ‡∫°‡ªÄ‡∫´‡∫º‡∫ß: ' + (result?.message || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'), 'error');
                                resolve('');
                            }
                        })
                        .withFailureHandler((error) => {
                            console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Google Apps Script:', error);
                            showMessage('‡∫≠‡∫±‡∫ö‡ªÇ‡∫´‡∫º‡∫î‡∫Æ‡∫π‡∫ö‡∫•‡∫ª‡ªâ‡∫°‡ªÄ‡∫´‡∫º‡∫ß: ' + (error.message || error), 'error');
                            resolve('');
                        })
                        .uploadImageToGoogleDrive(base64Data, fileName, mimeType);
                };
                
                reader.onerror = function(error) {
                    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå:', error);
                    showMessage('‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡∫≠‡ªà‡∫≤‡∫ô‡ªÑ‡∫ü‡∫•‡ªå‡ªÑ‡∫î‡ªâ', 'error');
                    resolve('');
                };
                
                reader.readAsDataURL(file);
            });
        }
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Google Drive (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ)
        function testGoogleDriveAccess() {
            console.log('üîÑ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Google Drive...');
            
            google.script.run
                .withSuccessHandler((result) => {
                    console.log('üìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Drive:', result);
                    
                    let message = 'üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Google Drive:\n\n';
                    result.message.forEach(msg => {
                        message += msg + '\n';
                    });
                    
                    if (result.backupFolderId) {
                        message += `\nüìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á ID: ${result.backupFolderId}`;
                    }
                    
                    alert(message);
                })
                .withFailureHandler((error) => {
                    console.error('‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Drive ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                    alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google Drive ‡πÑ‡∏î‡πâ: ' + error.message);
                })
                .testAndCreateBackupFolder();
        }
        
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô uploadImage ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
       function uploadImageWithDebug() {
    return new Promise((resolve) => {
        const imageInput = document.getElementById('documentImage');
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ element ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!imageInput) {
            console.log('üîç ‡πÑ‡∏°‡πà‡∏û‡∏ö input ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û');
            resolve('');
            return;
        }
        
        const file = imageInput.files[0];
        
        if (!file) {
            console.log('üîç ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î');
            resolve('');
            return;
        }
        
        // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°...
        console.log('üìÅ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå:', {
            name: file.name,
            size: file.size,
            type: file.type,
            lastModified: new Date(file.lastModified)
        });
        
        const reader = new FileReader();
        reader.onload = function(e) {
            const base64Data = e.target.result;
            const fileName = `debt_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9.-]/g, '_')}`;
            const mimeType = file.type;
            
            console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ Google Drive...');
            showMessage('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏õ Google Drive...', 'success');
            
            google.script.run
                .withSuccessHandler((result) => {
                    if (result && result.success) {
                        showMessage(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`, 'success');
                        const finalUrl = result.directUrl || result.viewUrl || result.fileUrl || '';
                        resolve(finalUrl);
                    } else {
                        console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', result);
                        resolve('');
                    }
                })
                .withFailureHandler((error) => {
                    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
                    resolve('');
                })
                .uploadImageToGoogleDrive(base64Data, fileName, mimeType);
        };
        
        reader.onerror = function(error) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå:', error);
            resolve('');
        };
        
        reader.readAsDataURL(file);
    });
}
        

// ==============================================
// üîß UI CREATION - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
// ==============================================

function addDebtPaymentButtons() {
    const saveButton = document.getElementById('saveButton');
    if (!saveButton) return;
    
    const container = saveButton.parentNode;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
    const payDebtBtn = document.createElement('button');
    payDebtBtn.id = 'payDebtButton';
    payDebtBtn.className = 'save-button';
    payDebtBtn.style.background = 'linear-gradient(135deg, #ff9500 0%, #ff7043 100%)';
    payDebtBtn.style.marginLeft = '10px';
    payDebtBtn.innerHTML = 'üí∞ ‡∫à‡ªà‡∫≤‡∫ç‡ªÄ‡∫á‡∫¥‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ';
    payDebtBtn.onclick = showPaymentModal;
    
 
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
    const editDebtorBtn = document.createElement('button');
    editDebtorBtn.id = 'editDebtorButton';
    editDebtorBtn.className = 'save-button';
    editDebtorBtn.style.background = 'linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%)';
    editDebtorBtn.style.marginLeft = '10px';
    editDebtorBtn.innerHTML = '‚úèÔ∏è ‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ';
    editDebtorBtn.onclick = editDebtor;
       // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏π‡∏õ
    const shareImageBtn = document.createElement('button');
    shareImageBtn.id = 'shareImageButton';
    shareImageBtn.className = 'save-button';
    shareImageBtn.style.background = 'linear-gradient(135deg, #4caf50 0%, #43a047 100%)';
    shareImageBtn.style.marginLeft = '10px';
    shareImageBtn.innerHTML = 'üí≥ Onepay';
    shareImageBtn.onclick = shareImage;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á save button
    container.insertBefore(payDebtBtn, saveButton.nextSibling);
    container.insertBefore(shareImageBtn, payDebtBtn.nextSibling);
    container.insertBefore(editDebtorBtn, shareImageBtn.nextSibling);
}

// ==============================================
// üîß DATA LOADING FUNCTIONS
// ==============================================

function loadDebtorsList() {
    return new Promise((resolve) => {
        google.script.run
            .withSuccessHandler((data) => {
                debtorsList = data || [];
                console.log('üìã ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ:', debtorsList.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
                resolve(debtorsList);
            })
            .withFailureHandler((error) => {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ:', error);
                resolve([]);
            })
            .getDebtorsList();
    });
}

// ==============================================
// üîß PAYMENT MODAL
// ==============================================

async function showPaymentModal() {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á Payment Modal ‡∏û‡∏£‡πâ‡∏≠‡∏° Loading Effect...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Loading Modal ‡∏Å‡πà‡∏≠‡∏ô
    const loadingModal = createLoadingModal();
    document.body.appendChild(loadingModal);
    
    try {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ
        console.log('üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ...');
        await loadDebtorsList();
        
        // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô Loading Effect
        await new Promise(resolve => setTimeout(resolve, 800));
        
        // ‡∏õ‡∏¥‡∏î Loading Modal
        document.body.removeChild(loadingModal);
        
        // ‡πÅ‡∏™‡∏î‡∏á Payment Modal ‡∏à‡∏£‡∏¥‡∏á
        showActualPaymentModal();
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
        
        // ‡∏õ‡∏¥‡∏î Loading Modal
        if (document.body.contains(loadingModal)) {
            document.body.removeChild(loadingModal);
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ' + error.message, 'error');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Loading Modal
function createLoadingModal() {
    const modal = document.createElement('div');
    modal.className = 'debt-modal';
    modal.id = 'paymentLoadingModal';
    modal.style.background = 'rgba(0, 0, 0, 0.9)';
    
    modal.innerHTML = `
        <div style="background: white; border-radius: 20px; padding: 40px; text-align: center; max-width: 400px; box-shadow: 0 20px 60px rgba(0,0,0,0.3); animation: modalFadeIn 0.4s ease-out;">
            
            <!-- Animated Loading Icon -->
            <div style="margin-bottom: 25px; position: relative;">
                <div class="payment-loading-spinner" style="
                    width: 80px; 
                    height: 80px; 
                    margin: 0 auto; 
                    border: 6px solid #e3f2fd; 
                    border-top: 6px solid #2196F3; 
                    border-right: 6px solid #4caf50;
                    border-radius: 50%; 
                    animation: paymentSpin 1.2s linear infinite;
                    box-shadow: 0 4px 15px rgba(33, 150, 243, 0.3);
                "></div>
                
                <!-- Money Icon in Center -->
                <div style="
                    position: absolute; 
                    top: 50%; 
                    left: 50%; 
                    transform: translate(-50%, -50%);
                    font-size: 2rem;
                    animation: paymentPulse 1.5s ease-in-out infinite;
                ">üí∞</div>
            </div>
            
            <!-- Loading Text -->
            <h3 style="color: #2196F3; margin-bottom: 15px; font-size: 1.5rem;">‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô...</h3>
            
            <!-- Progress Steps -->
            <div class="loading-steps" style="text-align: left; margin: 20px 0;">
                <div class="step-item active" style="display: flex; align-items: center; margin: 8px 0; color: #4caf50;">
                    <span style="margin-right: 10px;">‚úì</span>
                    <span>‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫°‡∫ï‡ªç‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</span>
                </div>
                <div class="step-item loading" style="display: flex; align-items: center; margin: 8px 0; color: #2196F3;">
                    <span style="margin-right: 10px; animation: paymentDots 1.5s infinite;">‚óè</span>
                    <span>‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫π‡∫Å‡ªú‡∫µ‡ªâ</span>
                </div>
                <div class="step-item" style="display: flex; align-items: center; margin: 8px 0; color: #999;">
                    <span style="margin-right: 10px;">‚óã</span>
                    <span>‡∫Å‡∫Ω‡∫°‡∫ü‡∫≠‡∫°‡∫à‡ªà‡∫≤‡∫ç‡ªÄ‡∫á‡∫¥‡∫ô</span>
                </div>
            </div>
            
            <!-- Progress Bar -->
            <div style="width: 100%; height: 6px; background: #e0e0e0; border-radius: 3px; overflow: hidden; margin-top: 20px;">
                <div style="
                    height: 100%; 
                    background: linear-gradient(90deg, #2196F3, #4caf50); 
                    width: 0%; 
                    animation: paymentProgress 2s ease-in-out forwards;
                    border-radius: 3px;
                "></div>
            </div>
            
            <p style="color: #666; margin-top: 15px; font-size: 0.9rem;">
                ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫™‡∫±‡∫Å‡∫Ñ‡∫π‡ªà...
            </p>
        </div>
    `;
    
    return modal;
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS Animations
function addPaymentLoadingStyles() {
    if (document.getElementById('paymentLoadingStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'paymentLoadingStyles';
    style.textContent = `
        @keyframes paymentSpin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes paymentPulse {
            0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
            50% { transform: translate(-50%, -50%) scale(1.1); opacity: 0.8; }
        }
        
        @keyframes paymentDots {
            0%, 20% { opacity: 0; }
            50% { opacity: 1; }
            100% { opacity: 0; }
        }
        
        @keyframes paymentProgress {
            0% { width: 0%; }
            30% { width: 40%; }
            70% { width: 70%; }
            100% { width: 100%; }
        }
        
        @keyframes modalFadeIn {
            from { 
                opacity: 0; 
                transform: scale(0.8) translateY(50px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
        
        .loading-steps .step-item.loading span:first-child {
            animation: paymentDots 1.5s infinite;
        }
    `;
    
    document.head.appendChild(style);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Payment Modal ‡∏à‡∏£‡∏¥‡∏á (‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏¥‡∏°)
function showActualPaymentModal() {
    const modal = document.createElement('div');
    modal.className = 'debt-modal';
    modal.id = 'paymentModal';
    
    modal.innerHTML = `
        <div class="debt-modal-content" style="width: 90vw; height: 90vh; animation: modalSlideUp 0.4s ease-out;">
            <div class="debt-modal-header">
                <h2 class="debt-modal-title">üí∞ ‡∫à‡ªà‡∫≤‡∫ç‡ªÄ‡∫á‡∫¥‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</h2>
                <button class="debt-close-btn" onclick="closePaymentModal()">&times;</button>
            </div>

            <div class="debt-form-section">
                <div class="debt-section-title">üë§ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç‡ªú‡∫µ‡ªâ</div>
                
                <div class="debt-form-group">
                    <label class="debt-form-label">‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤*</label>
                    <div class="autocomplete-container">
                        <input type="text" id="paymentCustomerName" class="debt-form-input" 
                               placeholder="‡∫û‡∫¥‡∫°‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫Ñ‡∫ª‡ªâ‡∫ô‡∫´‡∫≤..." 
                               oninput="searchDebtors(this.value)"
                               onfocus="showAllDebtors()">
                        <div id="debtorSuggestions" class="autocomplete-suggestions"></div>
                    </div>
                </div>

                <div id="billSelectionSection" style="display: none;">
                    <div class="debt-form-group">
                        <label class="debt-form-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏à‡πà‡∏≤‡∏¢*</label>
                        <div id="billsList" style="max-height: 200px; overflow-y: auto; border: 2px solid #e1e5e9; border-radius: 10px; padding: 10px;">
                            <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏•‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
                        </div>
                    </div>
                </div>

                <div id="paymentDetailsSection" style="display: none;">
                    <div class="debt-section-title">üìã ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Å‡∫≤‡∫ô‡∫à‡ªà‡∫≤‡∫ç</div>
                    
                    <div style="background: #f8f9fa; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
                            <div>
                                <strong>üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤:</strong><br>
                                <span id="selectedCustomerName" style="color: #2196F3;"></span>
                            </div>
                            <div>
                                <strong>üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó:</strong><br>
                                <span id="selectedCustomerPhone" style="color: #2196F3;"></span>
                            </div>
                            <div>
                                <strong>üìã ‡ªÄ‡∫•‡∫Ç‡∫ö‡∫¥‡∫ô:</strong><br>
                                <span id="selectedBillNumber" style="color: #ff6b6b;"></span>
                            </div>
                            <div>
                                <strong>üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ:</strong><br>
                                <span id="selectedDebtDays" style="color: #ff9500;"></span>
                            </div>
                        </div>
                        
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; padding-top: 15px; border-top: 2px solid #e1e5e9;">
                            <div>
                                <strong style="color: #f44336;">üè™ ‡∫ç‡∫≠‡∫î‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô:</strong><br>
                                <span id="selectedShopAmount" style="font-size: 1.2rem; font-weight: bold; color: #f44336;"></span>
                            </div>
                            <div>
                                <strong style="color: #2c5d2c;">üí∞ ‡∫ç‡∫≠‡∫î‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫à‡ªà‡∫≤‡∫ç:</strong><br>
                                <span id="selectedPayAmount" style="font-size: 1.2rem; font-weight: bold; color: #2c5d2c;"></span>
                            </div>
                        </div>
                    </div>

                    <div class="debt-form-group">
                        <label class="debt-form-label">üíµ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç*</label>
                        <input type="number" id="paymentAmount" class="debt-form-input" 
                               placeholder="‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç" 
                               min="0" step="0.01"
                               oninput="validatePaymentAmount()">
                        <small style="color: #666; margin-top: 5px; display: block;">
                            ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡πà‡∏≤‡∏¢‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏î‡πâ
                        </small>
                    </div>
                </div>
            </div>

            <div class="debt-modal-actions" id="paymentActions" style="display: none;">
                <button type="button" class="debt-action-btn debt-cancel-btn" onclick="closePaymentModal()">‚ùå ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å</button>
                <button type="button" class="debt-action-btn debt-save-btn" onclick="savePayment()" id="paymentSaveBtn" disabled>üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    setTimeout(() => {
        const customerInput = document.getElementById('paymentCustomerName');
        if (customerInput) customerInput.focus();
    }, 300);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Animation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Modal ‡∏´‡∏•‡∏±‡∏Å
function addModalSlideUpAnimation() {
    if (document.getElementById('modalSlideUpStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'modalSlideUpStyles';
    style.textContent = `
        @keyframes modalSlideUp {
            from { 
                opacity: 0; 
                transform: translateY(50px) scale(0.95); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0px) scale(1); 
            }
        }
    `;
    
    document.head.appendChild(style);
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ CSS ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener('DOMContentLoaded', function() {
    addPaymentLoadingStyles();
    addModalSlideUpAnimation();
});

// ==============================================
// üîß SEARCH AND SELECTION FUNCTIONS
// ==============================================

function searchDebtors(searchValue) {
    const suggestions = document.getElementById('debtorSuggestions');
    if (!suggestions) return;
    
    if (!searchValue.trim()) {
        suggestions.style.display = 'none';
        return;
    }
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
    const filteredDebtors = debtorsList.filter(debtor => 
        debtor.customerName && 
        debtor.customerName.toLowerCase().includes(searchValue.toLowerCase()) &&
        debtor.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ'
    );
    
    if (filteredDebtors.length === 0) {
        suggestions.innerHTML = '<div class="autocomplete-suggestion" style="color: #999; font-style: italic;">‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        suggestions.style.display = 'block';
        return;
    }
    
    // **‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á**
    const customerGroups = {};
    
    filteredDebtors.forEach(debtor => {
        const customerName = debtor.customerName;
        const billNumber = debtor.billNumber; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå N
        
        if (!customerGroups[customerName]) {
            customerGroups[customerName] = {
                bills: new Map(), // ‡πÉ‡∏ä‡πâ Map ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö billNumber ‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
                totalAmount: 0,
                debts: []
            };
        }
        
        // **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏¥‡∏• (‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)**
        if (billNumber && !customerGroups[customerName].bills.has(billNumber)) {
            const billAmount = parseFloat(debtor.payAmount) || 0; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M
            customerGroups[customerName].bills.set(billNumber, billAmount);
            customerGroups[customerName].totalAmount += billAmount;
            
            console.log(`üí∞ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏¥‡∏• ${billNumber} ‡∏Ç‡∏≠‡∏á ${customerName}: ${billAmount}`);
        }
        
        customerGroups[customerName].debts.push(debtor);
    });
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß:', customerGroups);
    
    suggestions.innerHTML = Object.keys(customerGroups).map(customerName => {
        const group = customerGroups[customerName];
        const uniqueBillCount = group.bills.size;
        const totalAmount = group.totalAmount;
        
        console.log(`üë§ ${customerName}: ${uniqueBillCount} ‡∏ö‡∏¥‡∏•, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${totalAmount}`);
        
        return `
            <div class="autocomplete-suggestion" onclick="selectCustomer('${customerName}')">
                <strong>${customerName}</strong><br>
                <small style="color: #666;">
                    üìã ${uniqueBillCount} ‡∫ö‡∫¥‡∫ô | üí∞ ${formatCurrency(totalAmount)}
                </small>
            </div>
        `;
    }).join('');
    
    suggestions.style.display = 'block';
}

function showAllDebtors() {
    const suggestions = document.getElementById('debtorSuggestions');
    if (!suggestions) return;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
    const unpaidDebtors = debtorsList.filter(debtor => debtor.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ');
    
    if (unpaidDebtors.length === 0) {
        suggestions.innerHTML = '<div class="autocomplete-suggestion" style="color: #999; font-style: italic;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        suggestions.style.display = 'block';
        return;
    }
    
    // **‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥**
    const customerGroups = {};
    
    unpaidDebtors.forEach(debtor => {
        const customerName = debtor.customerName;
        const billNumber = debtor.billNumber; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå N
        
        if (!customerGroups[customerName]) {
            customerGroups[customerName] = {
                bills: new Map(),
                totalAmount: 0,
                debts: []
            };
        }
        
        // **‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏¥‡∏•**
        if (billNumber && !customerGroups[customerName].bills.has(billNumber)) {
            const billAmount = parseFloat(debtor.payAmount) || 0; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M
            customerGroups[customerName].bills.set(billNumber, billAmount);
            customerGroups[customerName].totalAmount += billAmount;
        }
        
        customerGroups[customerName].debts.push(debtor);
    });
    
    suggestions.innerHTML = Object.keys(customerGroups).map(customerName => {
        const group = customerGroups[customerName];
        const uniqueBillCount = group.bills.size;
        const totalAmount = group.totalAmount;
        
        return `
            <div class="autocomplete-suggestion" onclick="selectCustomer('${customerName}')">
                <strong>${customerName}</strong><br>
                <small style="color: #666;">
                    üìã ${uniqueBillCount} ‡∫ö‡∫¥‡∫ô | üí∞ ${formatCurrency(totalAmount)}
                </small>
            </div>
        `;
    }).join('');
    
    suggestions.style.display = 'block';
}

function selectCustomer(customerName) {
    const customerInput = document.getElementById('paymentCustomerName');
    const suggestions = document.getElementById('debtorSuggestions');
    const billSection = document.getElementById('billSelectionSection');
    
    if (customerInput) customerInput.value = customerName;
    if (suggestions) suggestions.style.display = 'none';
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏•‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    showCustomerBills(customerName);
    if (billSection) billSection.style.display = 'block';
}

// ==============================================
// üîß FIX 2: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏Ç‡∏ö‡∏¥‡∏•
// ==============================================
function showCustomerBills(customerName) {
    const billsList = document.getElementById('billsList');
    if (!billsList) return;
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
    const customerDebts = debtorsList.filter(debt => 
        debt.customerName === customerName && 
        debt.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ'
    );
    
    if (customerDebts.length === 0) {
        billsList.innerHTML = '<div style="color: #999; text-align: center; padding: 20px;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ö‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        return;
    }
    
    // Debug: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤
    console.log('üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', customerDebts);
    console.log('üîç ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• record ‡πÅ‡∏£‡∏Å:', customerDebts[0]);
    console.log('üîç ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô record ‡πÅ‡∏£‡∏Å:', Object.keys(customerDebts[0]));
    
    // ‡∏´‡∏≤ billNumber ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
    const uniqueBillNumbers = [...new Set(customerDebts.map(debt => debt.billNumber))];
    console.log('üîç ‡πÄ‡∏•‡∏Ç‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥:', uniqueBillNumbers);
    
    const billsArray = uniqueBillNumbers.map(billNumber => {
        // ‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö billNumber 
        const billSummaryRecord = debtorsList.find(debt => 
            debt.billNumber === billNumber && 
            debt.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ'
        );
        
        // ‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ billNumber ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        const billItems = debtorsList.filter(debt => 
            debt.billNumber === billNumber && 
            debt.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ'
        );
        
        console.log(`üîç ‡∏ö‡∏¥‡∏• ${billNumber}:`, billSummaryRecord);
        console.log(`üîç ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ö‡∏¥‡∏• ${billNumber}:`, billItems.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
        
        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å record ‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å
        const firstItem = billSummaryRecord;
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ (‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°)
        function getFieldValue(record, possibleFields) {
            for (let field of possibleFields) {
                const value = parseFloat(record[field]);
                if (!isNaN(value) && value > 0) {
                    console.log(`‚úÖ ‡πÉ‡∏ä‡πâ‡∏ü‡∏¥‡∏•‡∏î‡πå ${field} = ${value}`);
                    return value;
                }
            }
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå:', possibleFields);
            return 0;
        }
        
        // ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L (‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô)
        const shopAmountFields = [
            'shopTotalAmount',
            'totalShopPrice',
            'columnL',
            'L',
            'storeAmount',
            'shopAmount'
        ];
        
        // ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M (‡∏¢‡∏≠‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)
        const customerAmountFields = [
            'customerTotalAmount',
            'totalCustomerPrice',
            'columnM',
            'M',
            'payAmount',
            'customerAmount'
        ];
        
        const totalShopAmount = getFieldValue(firstItem, shopAmountFields);
        const totalPayAmount = getFieldValue(firstItem, customerAmountFields);
        
        // ‡πÅ‡∏°‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô createPrintableTable
        const mappedItems = billItems.map((item, index) => {
            console.log(`üì¶ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${index + 1}:`, item);
            
            // ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô createPrintableTable
            const mappedItem = {
                itemName: item.itemName || item.name || `‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${index + 1}`,
                unit: item.unit || '‡∏ä‡∏¥‡πâ‡∏ô',
                quantity: parseFloat(item.quantity) || 1,
                shopPrice: parseFloat(item.shopPrice) || parseFloat(item.price) || 0,
                customerPrice: parseFloat(item.customerPrice) || parseFloat(item.shopPrice) || parseFloat(item.price) || 0
            };
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
            mappedItem.shopAmount = mappedItem.quantity * mappedItem.shopPrice;
            mappedItem.payAmount = mappedItem.quantity * mappedItem.customerPrice;
            
            console.log(`‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: ${mappedItem.itemName}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${mappedItem.quantity}, ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡πâ‡∏≤‡∏ô: ${mappedItem.shopPrice}, ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${mappedItem.customerPrice}`);
            
            return mappedItem;
        });
        
        return {
            billNumber: billNumber,
            customerName: firstItem.customerName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            phoneNumber: firstItem.phoneNumber || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            debtDays: firstItem.debtDays || 0,
            
            // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå
            totalShopAmount: totalShopAmount,
            totalPayAmount: totalPayAmount,
            
            items: mappedItems,
            status: firstItem.status,
            debtDate: firstItem.debtDate || firstItem.timestamp
        };
    }).sort((a, b) => new Date(b.debtDate) - new Date(a.debtDate));
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß:', billsArray);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏≠‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å)
    billsList.innerHTML = billsArray.map((bill, index) => {
        console.log(`üéØ ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏¥‡∏• ${index}: ${bill.billNumber}, ‡∏¢‡∏≠‡∏î‡∏£‡πâ‡∏≤‡∏ô: ${bill.totalShopAmount}, ‡∏¢‡∏≠‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${bill.totalPayAmount}`);
        
        return `
            <div class="bill-item" style="border: 2px solid #e1e5e9; border-radius: 15px; padding: 20px; margin-bottom: 15px; cursor: pointer; transition: all 0.3s ease; background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);" 
                 onclick="selectBill(${index})" id="bill_${index}">
                
                <!-- Debug Info -->
                <div style="background: #fff3cd; padding: 10px; border-radius: 8px; margin-bottom: 15px; font-size: 0.8rem; border-left: 4px solid #ffc107;">
                    <strong>üîç Debug Info:</strong><br>
                    ‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô: ${bill.totalShopAmount} | ‡∏¢‡∏≠‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${bill.totalPayAmount} | ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: ${bill.items.length}
                </div>
                
                <!-- ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ö‡∏¥‡∏• -->
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; padding-bottom: 15px; border-bottom: 2px solid #e9ecef;">
                    <div>
                        <h3 style="margin: 0; color: #2c3e50; font-size: 1.3rem;">üìã ${bill.billNumber}</h3>
                        <div style="color: #7f8c8d; font-size: 0.9rem; margin-top: 5px;">
                            ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏¥‡∏•‡∏ô‡∏µ‡πâ
                        </div>
                    </div>
                    <div style="text-align: right;">
                        <div style="color: #e74c3c; font-weight: bold; font-size: 0.9rem;">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${bill.status}</div>
                    </div>
                </div>
                
                <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡∏¥‡∏• -->
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 15px;">
                    
                    <div style="background: #d4edda; padding: 15px; border-radius: 10px; border-left: 4px solid #28a745;">
                        <div style="font-size: 0.85rem; color: #155724; margin-bottom: 5px; font-weight: bold;">üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                        <div style="font-size: 1.4rem; font-weight: bold; color: #28a745;">${bill.items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                    </div>
                </div>
               
            </div>
        `;
    }).join('');
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    window.currentCustomerBills = billsArray;
}

// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤
// ==============================================
function debugBillData(billNumber) {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•:', billNumber);
    
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏¥‡∏•‡∏ô‡∏µ‡πâ
    const billRecords = debtorsList.filter(debt => debt.billNumber === billNumber);
    
    console.log('üìã ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', billRecords.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏¥‡∏•', billNumber);
    
    if (billRecords.length > 0) {
        const firstRecord = billRecords[0];
        console.log('üí∞ ‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L):', firstRecord.shopTotalAmount);
        console.log('üí∞ ‡∏¢‡∏≠‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M):', firstRecord.customerTotalAmount);
        console.log('üè∑Ô∏è billNumber:', firstRecord.billNumber);
        console.log('üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:');
        
        billRecords.forEach((record, index) => {
            console.log(`   ${index + 1}. ${record.itemName} - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${record.quantity}`);
        });
    }
    
    return billRecords;
}
function debugDebtorData() {
    console.log('üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:', debtorsList.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    
    if (debtorsList.length > 0) {
        console.log('üîç ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å:');
        debtorsList.slice(0, 3).forEach((debt, index) => {
            console.log(`   ${index + 1}.`, debt);
        });
        
        console.log('üîç ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å:');
        console.log(Object.keys(debtorsList[0]));
        
        // ‡∏´‡∏≤ billNumber ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
        const uniqueBills = [...new Set(debtorsList.map(debt => debt.billNumber))];
        console.log('üîç ‡πÄ‡∏•‡∏Ç‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥:', uniqueBills);
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡πÅ‡∏£‡∏Å
        if (uniqueBills.length > 0) {
            const firstBill = uniqueBills[0];
            const billData = debtorsList.filter(debt => debt.billNumber === firstBill);
            console.log(`üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏• ${firstBill}:`, billData);
        }
    }
}

function selectBill(billIndex) {
    // Clear previous selection
    const billItems = document.querySelectorAll('.bill-item');
    billItems.forEach(item => {
        item.style.borderColor = '#e1e5e9';
        item.style.backgroundColor = 'white';
    });
    
    // Highlight selected bill
    const selectedBill = document.getElementById(`bill_${billIndex}`);
    if (selectedBill) {
        selectedBill.style.borderColor = '#4facfe';
        selectedBill.style.backgroundColor = '#f8f9ff';
    }
    
    // Get bill data
    const billData = window.currentCustomerBills[billIndex];
    selectedDebtData = billData;
    
    // Show payment details
    showPaymentDetails(billData);
}
// ==============================================
// üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô showPaymentDetails ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L ‡πÅ‡∏•‡∏∞ M ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ==============================================

function showPaymentDetails(billData) {
    const detailsSection = document.getElementById('paymentDetailsSection');
    const actionsSection = document.getElementById('paymentActions');
    
    // üîß FIX: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L ‡πÅ‡∏•‡∏∞ M ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡∏Ç‡∏≠‡∏á‡∏ö‡∏¥‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å debtorsList
    const rawBillData = debtorsList.find(debt => 
        debt.billNumber === billData.billNumber && 
        debt.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ'
    );
    
    console.log('üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡∏Ç‡∏≠‡∏á‡∏ö‡∏¥‡∏•:', rawBillData);
    
    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L ‡πÅ‡∏•‡∏∞ M ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    const actualShopAmount = rawBillData ? (rawBillData.shopAmount || 0) : billData.totalShopAmount;
    const actualPayAmount = rawBillData ? (rawBillData.payAmount || 0) : billData.totalPayAmount;
    
    console.log(`üí∞ ‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå - L: ${actualShopAmount}, M: ${actualPayAmount}`);
    
    // Update UI elements ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L ‡πÅ‡∏•‡∏∞ M
    const elements = {
        'selectedCustomerName': billData.customerName,
        'selectedCustomerPhone': billData.phoneNumber,
        'selectedBillNumber': billData.billNumber,
        'selectedDebtDays': billData.debtDays + ' ‡∫ß‡∫±‡∫ô',
        'selectedShopAmount': formatCurrency(actualShopAmount),      // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L
        'selectedPayAmount': formatCurrency(actualPayAmount)         // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M
    };
    
    Object.entries(elements).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) element.textContent = value;
    });
    
    // Set default payment amount ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M
    const paymentInput = document.getElementById('paymentAmount');
    if (paymentInput) {
        paymentInput.value = actualPayAmount;
        paymentInput.max = actualPayAmount;
    }
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏à‡∏£‡∏¥‡∏á)
    currentPaymentData = {
        ...billData,
        totalShopAmount: actualShopAmount,    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L
        totalPayAmount: actualPayAmount       // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Payment Options Section ‡πÉ‡∏´‡∏°‡πà
    addPaymentOptionsSection(detailsSection);
    
    // Show sections
    if (detailsSection) detailsSection.style.display = 'block';
    
    // ‡∏ã‡πà‡∏≠‡∏ô actions section ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if (actionsSection) actionsSection.style.display = 'none';
    
    validatePaymentAmount();
}


// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ
// ==============================================

function addPaymentOptionsSection(parentElement) {
    // ‡∏•‡∏ö section ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingOptions = document.getElementById('paymentOptionsSection');
    if (existingOptions) {
        existingOptions.remove();
    }
    
    const optionsHTML = `
        <div id="paymentOptionsSection" style="margin-top: 25px; padding: 20px; background: #f8f9fa; border-radius: 15px;">
            <div style="font-size: 1.3rem; font-weight: bold; color: #333; margin-bottom: 15px; display: flex; align-items: center; gap: 8px;">
                üìã ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ
            </div>
            
            <div style="display: flex; gap: 20px; justify-content: center; margin: 20px 0; flex-wrap: wrap;">
                <div class="payment-option-card" id="paymentOption1" onclick="selectPaymentOption(1)">
                    <div class="option-icon">üñ®Ô∏è</div>
                    <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 1</div>
                    <div class="option-subtitle">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫õ‡∫¥‡ªâ‡∫ô</div>
                    <div class="option-description">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªÅ‡∫•‡∫∞‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô</div>
                </div>
                
                <div class="payment-option-card" id="paymentOption2" onclick="selectPaymentOption(2)">
                    <div class="option-icon">üì±</div>
                    <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 2</div>
                    <div class="option-subtitle">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + WhatsApp</div>
                    <div class="option-description">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªÅ‡∫•‡∫∞‡∫™‡∫ª‡ªà‡∫á WhatsApp</div>
                </div>
            </div>
            
            <div style="text-align: center; color: #666; margin-top: 15px; padding: 10px; background: #fff3cd; border-radius: 8px; border-left: 4px solid #ffc107;">
                ‚ö†Ô∏è <strong>‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ß‡∫¥‡∫ó‡∫µ‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô</strong>
            </div>
        </div>
    `;
    
    parentElement.insertAdjacentHTML('beforeend', optionsHTML);
    
    // Add CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö payment option cards
    addPaymentOptionStyles();
}


// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Payment Option Cards
// ==============================================

function addPaymentOptionStyles() {
    if (document.getElementById('paymentOptionStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'paymentOptionStyles';
    style.textContent = `
        .payment-option-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 3px solid #e1e5e9;
            border-radius: 20px;
            padding: 25px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 280px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .payment-option-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            border-color: #4facfe;
        }
        
        .payment-option-card.selected {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border-color: #28a745;
            color: white;
            transform: translateY(-5px);
            box-shadow: 0 12px 30px rgba(40, 167, 69, 0.3);
        }
        
        .payment-option-card.selected::before {
            content: '‚úì';
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            font-weight: bold;
            color: white;
            background: rgba(255,255,255,0.2);
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .payment-option-card .option-icon {
            font-size: 2.5rem;
            margin-bottom: 12px;
            opacity: 0.8;
        }
        
        .payment-option-card .option-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 6px;
        }
        
        .payment-option-card .option-subtitle {
            font-size: 1rem;
            margin-bottom: 8px;
            opacity: 0.9;
        }
        
        .payment-option-card .option-description {
            font-size: 0.85rem;
            opacity: 0.8;
            line-height: 1.3;
        }
        
        .payment-option-card.selected .option-icon,
        .payment-option-card.selected .option-title,
        .payment-option-card.selected .option-subtitle,
        .payment-option-card.selected .option-description {
            opacity: 1;
        }
        
        @media (max-width: 768px) {
            .payment-option-card {
                width: 100%;
                margin-bottom: 15px;
                padding: 20px 15px;
            }
        }
    `;
    
    document.head.appendChild(style);
}

function selectPaymentOption(option) {
    console.log('üîò ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ:', option);
    
    // Reset ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    document.querySelectorAll('.payment-option-card').forEach(card => {
        card.classList.remove('selected');
    });
    
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà
    const selectedCard = document.getElementById(`paymentOption${option}`);
    if (selectedCard) {
        selectedCard.classList.add('selected');
    }
    
    selectedPaymentOption = option;
    console.log('selectedPaymentOption ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô:', selectedPaymentOption);
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    updatePaymentSaveButton();
    
    // ‡πÅ‡∏™‡∏î‡∏á actions section
    const actionsSection = document.getElementById('paymentActions');
    if (actionsSection) {
        actionsSection.style.display = 'flex';
    }
    
    // üîß FIX: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å validatePaymentAmount ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à
    setTimeout(() => {
        validatePaymentAmount();
        checkButtonStatus(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    }, 100);
    
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ:', option);
}

// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
// ==============================================

function checkButtonStatus() {
    console.log('üîç === ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏° ===');
    
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (!saveBtn) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° paymentSaveBtn');
        return;
    }
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏∏‡πà‡∏°:');
    console.log('  - innerHTML:', saveBtn.innerHTML);
    console.log('  - disabled:', saveBtn.disabled);
    console.log('  - style.opacity:', saveBtn.style.opacity);
    console.log('  - style.cursor:', saveBtn.style.cursor);
    console.log('  - style.pointerEvents:', saveBtn.style.pointerEvents);
    console.log('  - style.background:', saveBtn.style.background);
    console.log('  - onclick function:', saveBtn.onclick ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö computed style
    const computedStyle = window.getComputedStyle(saveBtn);
    console.log('  - computed pointer-events:', computedStyle.pointerEvents);
    console.log('  - computed cursor:', computedStyle.cursor);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö parent elements
    let parent = saveBtn.parentElement;
    let level = 1;
    while (parent && level <= 3) {
        console.log(`  - parent ${level} pointer-events:`, window.getComputedStyle(parent).pointerEvents);
        parent = parent.parentElement;
        level++;
    }
    
    console.log('üîç === ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ===');
}

// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°
// ==============================================

function testButtonClick() {
    console.log('üß™ === ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° ===');
    
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (!saveBtn) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°');
        return;
    }
    
    console.log('üîÑ ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°...');
    try {
        saveBtn.click();
        console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (error) {
        console.log('‚ùå ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
    }
    
    console.log('üß™ === ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ===');
}

// ==============================================
// üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô selectPaymentOption ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å updatePaymentSaveButton
// ==============================================


// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏° (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö)
// ==============================================

function forceEnableButton() {
    console.log('üîß ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°...');
    
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (!saveBtn) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°');
        return;
    }
    
    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    saveBtn.disabled = false;
    saveBtn.style.opacity = '1';
    saveBtn.style.cursor = 'pointer';
    saveBtn.style.pointerEvents = 'auto';
    saveBtn.style.background = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
    saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ + WhatsApp (‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)';
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° onclick
    saveBtn.onclick = function() {
        console.log('üì± ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö');
        savePayment();
    };
    
    console.log('‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß');
    checkButtonStatus();
}

// ==============================================
// üîß ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
// ==============================================

function updatePaymentSaveButton() {
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (!saveBtn) {
        console.log('‚ùå updatePaymentSaveButton: ‡πÑ‡∏°‡πà‡∏û‡∏ö saveBtn');
        return;
    }
    
    if (!selectedPaymentOption) {
        console.log('‚ùå updatePaymentSaveButton: ‡πÑ‡∏°‡πà‡∏°‡∏µ selectedPaymentOption');
        saveBtn.disabled = true;
        saveBtn.style.opacity = '0.6';
        saveBtn.style.background = '#ccc';
        saveBtn.innerHTML = 'üíæ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô';
        return;
    }
    
    console.log('‚úÖ updatePaymentSaveButton: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°');
    
    // üîß FIX: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
    saveBtn.disabled = false;
    saveBtn.style.opacity = '1';
    saveBtn.style.cursor = 'pointer';
    saveBtn.style.pointerEvents = 'auto'; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
    
    // üîß FIX: ‡∏•‡∏ö onclick ‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
    saveBtn.onclick = null; // ‡∏•‡∏ö onclick ‡πÄ‡∏î‡∏¥‡∏°
    
    if (selectedPaymentOption === 1) {
        saveBtn.style.background = 'linear-gradient(135deg, #6f42c1 0%, #563d7c 100%)';
        saveBtn.innerHTML = 'üíæüñ®Ô∏è ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ + ‡∫õ‡∫¥‡ªâ‡∫ô';
        saveBtn.onclick = function() { 
            console.log('üñ®Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + ‡∏õ‡∏¥‡πâ‡∏ô');
            savePayment(); 
        };
        console.log('  - ‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + ‡∏õ‡∏¥‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° onclick');
    } else if (selectedPaymentOption === 2) {
        saveBtn.style.background = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
        saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ + WhatsApp';
        saveBtn.onclick = function() { 
            console.log('üì± ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + WhatsApp');
            savePayment(); 
        };
        console.log('  - ‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + WhatsApp ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° onclick');
    }
    
    // üîß FIX: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    console.log('üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:');
    console.log('  - disabled:', saveBtn.disabled);
    console.log('  - style.opacity:', saveBtn.style.opacity);
    console.log('  - style.cursor:', saveBtn.style.cursor);
    console.log('  - style.pointerEvents:', saveBtn.style.pointerEvents);
    console.log('  - onclick:', saveBtn.onclick ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ');
}

// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö input ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
// ==============================================

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ event listener ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ input
function ensurePaymentInputListener() {
    const paymentInput = document.getElementById('paymentAmount');
    if (!paymentInput) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö paymentAmount input');
        return;
    }
    
    // ‡∏•‡∏ö event listener ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    paymentInput.removeEventListener('input', validatePaymentAmount);
    paymentInput.removeEventListener('change', validatePaymentAmount);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡∏°‡πà
    paymentInput.addEventListener('input', validatePaymentAmount);
    paymentInput.addEventListener('change', validatePaymentAmount);
    
    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö paymentAmount input ‡πÅ‡∏•‡πâ‡∏ß');
}

// ==============================================
// üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
// ==============================================

function debugPaymentSystem() {
    console.log('üß™ === Debug Payment System ===');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM elements
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM Elements:');
    const paymentInput = document.getElementById('paymentAmount');
    const saveBtn = document.getElementById('paymentSaveBtn');
    
    console.log('  - paymentAmount input:', paymentInput ? '‚úÖ ‡∏û‡∏ö' : '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö');
    console.log('  - paymentSaveBtn:', saveBtn ? '‚úÖ ‡∏û‡∏ö' : '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö');
    
    if (paymentInput) {
        console.log('  - paymentInput.value:', paymentInput.value);
        console.log('  - paymentInput.max:', paymentInput.max);
    }
    
    if (saveBtn) {
        console.log('  - saveBtn.disabled:', saveBtn.disabled);
        console.log('  - saveBtn.innerHTML:', saveBtn.innerHTML);
        console.log('  - saveBtn.style.background:', saveBtn.style.background);
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö global variables
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Global Variables:');
    console.log('  - currentPaymentData:', currentPaymentData);
    console.log('  - selectedPaymentOption:', selectedPaymentOption);
    console.log('  - selectedDebtData:', selectedDebtData);
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö validation
    console.log('üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Validation:');
    validatePaymentAmount();
    
    console.log('üß™ === ‡∏à‡∏ö Debug ===');
}

function validatePaymentAmount() {
    const paymentInput = document.getElementById('paymentAmount');
    const saveBtn = document.getElementById('paymentSaveBtn');
    
    console.log('üîç === ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô ===');
    
    if (!paymentInput) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö paymentInput');
        return;
    }
    
    if (!saveBtn) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö saveBtn');
        return;
    }
    
    if (!currentPaymentData) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ currentPaymentData');
        return;
    }
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
    console.log('  - paymentInput.value:', paymentInput.value);
    console.log('  - currentPaymentData:', currentPaymentData);
    console.log('  - selectedPaymentOption:', selectedPaymentOption);
    
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    const paymentAmountText = paymentInput.value.trim();
    console.log('  - paymentAmountText:', paymentAmountText);
    
    const paymentAmount = parseFloat(paymentAmountText);
    console.log('  - paymentAmount (parseFloat):', paymentAmount);
    console.log('  - isNaN(paymentAmount):', isNaN(paymentAmount));
    
    const paymentAmountFinal = isNaN(paymentAmount) ? 0 : paymentAmount;
    console.log('  - paymentAmountFinal:', paymentAmountFinal);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö maxAmount
    const maxAmountRaw = currentPaymentData.totalPayAmount;
    console.log('  - maxAmountRaw:', maxAmountRaw);
    console.log('  - typeof maxAmountRaw:', typeof maxAmountRaw);
    
    const maxAmount = parseFloat(maxAmountRaw);
    console.log('  - maxAmount (parseFloat):', maxAmount);
    console.log('  - isNaN(maxAmount):', isNaN(maxAmount));
    
    const maxAmountFinal = isNaN(maxAmount) ? 0 : maxAmount;
    console.log('  - maxAmountFinal:', maxAmountFinal);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç:');
    
    const condition1 = paymentAmountFinal > 0;
    console.log(`  1. paymentAmount > 0: ${paymentAmountFinal} > 0 = ${condition1}`);
    
    const condition2 = paymentAmountFinal <= maxAmountFinal;
    console.log(`  2. paymentAmount <= maxAmount: ${paymentAmountFinal} <= ${maxAmountFinal} = ${condition2}`);
    
    const condition3 = selectedPaymentOption ? true : false;
    console.log(`  3. selectedPaymentOption exists: ${condition3}`);
    
    const allConditions = condition1 && condition2 && condition3;
    console.log(`  ‡∏£‡∏ß‡∏°: ${condition1} && ${condition2} && ${condition3} = ${allConditions}`);
    
    if (allConditions) {
        console.log('‚úÖ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î - ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°');
        updatePaymentSaveButton();
        paymentInput.style.borderColor = '#4caf50';
        paymentInput.style.backgroundColor = '#f0fff0';
    } else {
        console.log('‚ùå ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô - ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°');
        saveBtn.disabled = true;
        saveBtn.style.opacity = '0.6';
        saveBtn.style.background = '#ccc';
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        if (!condition3) {
            saveBtn.innerHTML = 'üíæ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô';
            console.log('  - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£');
        } else if (!condition1) {
            saveBtn.innerHTML = 'üíæ ‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç';
            console.log('  - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô <= 0');
        } else if (!condition2) {
            saveBtn.innerHTML = 'üíæ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫Å‡∫µ‡∫ô‡∫ç‡∫≠‡∫î‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫à‡ªà‡∫≤‡∫ç';
            console.log('  - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢');
            paymentInput.style.borderColor = '#f44336';
            paymentInput.style.backgroundColor = '#fff5f5';
        } else {
            saveBtn.innerHTML = 'üíæ ‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á';
            console.log('  - ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡∏≠‡∏∑‡πà‡∏ô‡πÜ');
        }
        
        if (condition1 && condition2) {
            paymentInput.style.borderColor = '#e1e5e9';
            paymentInput.style.backgroundColor = 'white';
        }
    }
    
    console.log('üîç === ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ===');
}

console.log('‚úÖ Enhanced Payment System ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');


// ==============================================
// üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô savePayment ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà
// ==============================================

function savePayment() {
    console.log('üöÄ === ‡πÄ‡∏£‡∏¥‡πà‡∏° savePayment ===');
    
    try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        console.log('üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô:');
        console.log('  - selectedDebtData:', selectedDebtData);
        console.log('  - currentPaymentData:', currentPaymentData);
        console.log('  - selectedPaymentOption:', selectedPaymentOption);
        
        if (!selectedDebtData || !currentPaymentData) {
            console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö - selectedDebtData ‡∏´‡∏£‡∏∑‡∏≠ currentPaymentData ‡πÄ‡∏õ‡πá‡∏ô null');
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ö‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡∫∞‡∫à‡ªà‡∫≤‡∫ç', 'error');
            return;
        }
        
        if (!selectedPaymentOption) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£');
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô (‡∫õ‡∫¥‡ªâ‡∫ô ‡∫´‡∫º‡∫∑ WhatsApp)', 'error');
            return;
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
        const paymentAmountInput = document.getElementById('paymentAmount');
        if (!paymentAmountInput) {
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö input ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô');
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô', 'error');
            return;
        }
        
        const paymentAmount = parseFloat(paymentAmountInput.value) || 0;
        console.log('üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢:', paymentAmount);
        
        if (paymentAmount <= 0) {
            console.log('‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô <= 0');
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç', 'error');
            return;
        }
        
        const maxAmount = parseFloat(currentPaymentData.totalPayAmount) || 0;
        console.log('üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î:', maxAmount);
        
        if (paymentAmount > maxAmount) {
            console.log(`‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô: ${paymentAmount} > ${maxAmount}`);
            showMessage('‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫à‡ªà‡∫≤‡∫ç‡∫ö‡ªç‡ªà‡∫Ñ‡∫ß‡∫ô‡ªÄ‡∫Å‡∫µ‡∫ô‡∫ç‡∫≠‡∫î‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫à‡ªà‡∫≤‡∫ç', 'error');
            return;
        }
        
        console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
        
        // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        const saveBtn = document.getElementById('paymentSaveBtn');
        if (saveBtn) {
            saveBtn.disabled = true;
            if (selectedPaymentOption === 1) {
                saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô...';
            } else {
                saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á WhatsApp...';
            }
            console.log('üîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°');
        }
        
        // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢
        const paymentData = {
            shopTotalAmount: currentPaymentData.totalShopAmount || selectedDebtData.totalShopAmount,
            customerTotalAmount: currentPaymentData.totalPayAmount || selectedDebtData.totalPayAmount,
            billNumber: currentPaymentData.billNumber || selectedDebtData.billNumber,
            paymentDate: new Date().toLocaleString('lo-LA'),
            customerName: currentPaymentData.customerName || selectedDebtData.customerName,
            phoneNumber: currentPaymentData.phoneNumber || selectedDebtData.phoneNumber,
            debtDays: currentPaymentData.debtDays || selectedDebtData.debtDays,
            paymentAmount: paymentAmount,
            status: '‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ',
            billItems: currentPaymentData.items || selectedDebtData.items,
            updateAllItemsInBill: true,
            actionType: selectedPaymentOption
        };
        
        console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°:', paymentData);
        
        // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô 1: ‡∏ó‡∏≥ Print ‡∏´‡∏£‡∏∑‡∏≠ WhatsApp ‡∏Å‡πà‡∏≠‡∏ô
        if (selectedPaymentOption === 1) {
            console.log('üñ®Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£...');
            try {
                generatePaymentReceipt({
                    paymentId: `TEMP_${Date.now()}`,
                    paymentAmount: paymentData.paymentAmount
                });
                
                showMessage('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...', 'success');
                
                setTimeout(() => {
                    createPrintConfirmDialog(paymentData);
                }, 1000);
                
            } catch (error) {
                console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô:', error);
                resetPaymentSaveButton();
                showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
            }
            
        } else if (selectedPaymentOption === 2) {
            console.log('üì± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp...');
            try {
                sendPaymentWhatsApp({
                    paymentAmount: paymentData.paymentAmount,
                    billNumber: paymentData.billNumber,
                    customerName: paymentData.customerName
                });
                
                setTimeout(() => {
                    createWhatsAppConfirmDialog(paymentData);
                }, 2000);
                
            } catch (error) {
                console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp:', error);
                resetPaymentSaveButton();
                showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
            }
        }
        
    } catch (error) {
        console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô savePayment:', error);
        console.error('Stack trace:', error.stack);
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ' + error.message, 'error');
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°
        resetPaymentSaveButton();
    }
    
    console.log('üöÄ === ‡∏à‡∏ö savePayment ===');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£ Print
function performPrintAction(paymentData) {
    try {
        console.log('üñ®Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÄ‡∏≠‡∏Å‡∏∞‡∏™‡∏≤‡∏£...');
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô
        generatePaymentReceipt({
            paymentId: `TEMP_${Date.now()}`,
            paymentAmount: paymentData.paymentAmount
        });
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏≤‡∏ö
        showMessage('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...', 'success');
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
        createPrintConfirmDialog(paymentData);
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô:', error);
        resetPaymentSaveButton();
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
    }
}


// ‡∏™‡∏£‡πâ‡∏≤‡∏á Dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô
function createPrintConfirmDialog(paymentData) {
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10002;
    `;
    
    dialog.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 500px; text-align: center; font-family: Arial, sans-serif;">
            <div style="font-size: 3rem; margin-bottom: 20px;">üñ®Ô∏è</div>
            <h3 style="color: #6f42c1; margin-bottom: 15px;">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h3>
            <p style="margin-bottom: 25px; line-height: 1.5;">
                ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß<br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡πâ‡∏ô‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            </p>
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="confirmPrintSuccess()" 
                        style="background: #28a745; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚úÖ ‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                </button>
                <button onclick="confirmPrintFailed()" 
                        style="background: #dc3545; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚ùå ‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(dialog);
    window.currentPrintDialog = dialog;
    window.pendingPaymentData = paymentData;
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp
function createWhatsAppConfirmDialog(paymentData) {
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10002;
    `;
    
    dialog.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 500px; text-align: center; font-family: Arial, sans-serif;">
            <div style="font-size: 3rem; margin-bottom: 20px;">üì±</div>
            <h3 style="color: #25D366; margin-bottom: 15px;">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp</h3>
            <p style="margin-bottom: 25px; line-height: 1.5;">
                ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î WhatsApp ‡πÅ‡∏•‡πâ‡∏ß<br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            </p>
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="confirmWhatsAppSuccess()" 
                        style="background: #25D366; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                </button>
                <button onclick="confirmWhatsAppFailed()" 
                        style="background: #dc3545; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(dialog);
    window.currentWhatsAppDialog = dialog;
    window.pendingPaymentData = paymentData;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmPrintSuccess() {
    if (window.currentPrintDialog) {
        document.body.removeChild(window.currentPrintDialog);
        window.currentPrintDialog = null;
    }
    
    if (window.pendingPaymentData) {
        proceedToSavePayment(window.pendingPaymentData);
        window.pendingPaymentData = null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmPrintFailed() {
    if (window.currentPrintDialog) {
        document.body.removeChild(window.currentPrintDialog);
        window.currentPrintDialog = null;
    }
    
    resetPaymentSaveButton();
    showMessage('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏õ‡∏¥‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'error');
    window.pendingPaymentData = null;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmWhatsAppSuccess() {
    if (window.currentWhatsAppDialog) {
        document.body.removeChild(window.currentWhatsAppDialog);
        window.currentWhatsAppDialog = null;
    }
    
    if (window.pendingPaymentData) {
        proceedToSavePayment(window.pendingPaymentData);
        window.pendingPaymentData = null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô WhatsApp ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmWhatsAppFailed() {
    if (window.currentWhatsAppDialog) {
        document.body.removeChild(window.currentWhatsAppDialog);
        window.currentWhatsAppDialog = null;
    }
    
    resetPaymentSaveButton();
    showMessage('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á WhatsApp ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'error');
    window.pendingPaymentData = null;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Print/WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Print/WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à) - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
function proceedToSavePayment(paymentData) {
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (saveBtn) {
        saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫•‡∫ª‡∫á Sheet...';
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    const totalPayAmount = parseFloat(paymentData.customerTotalAmount) || 0;
    const paidAmount = parseFloat(paymentData.paymentAmount) || 0;
    const remainingAmount = totalPayAmount - paidAmount;
    
    console.log(`üí∞ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì: ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°=${totalPayAmount}, ‡∏à‡πà‡∏≤‡∏¢=${paidAmount}, ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠=${remainingAmount}`);
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ Google Sheets
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                showMessage(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`, 'success');
                
                // ‡∏ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö (‡∏°‡∏µ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠) ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á "‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
                if (remainingAmount > 0) {
                    console.log(`üìù ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${remainingAmount} ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á "‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"`);
                    saveRemainingDebtToDebtTable(paymentData, remainingAmount);
                }
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢
                setTimeout(() => {
                    if (remainingAmount > 0) {
                        showMessage(`üí∞ ‡∫à‡ªà‡∫≤‡∫ç‡ªÅ‡∫•‡ªâ‡∫ß: ${formatCurrency(result.paymentAmount)} | ‡∫Ñ‡∫ª‡∫á‡ªÄ‡∫´‡∫º‡∫∑‡∫≠: ${formatCurrency(remainingAmount)} | ‡∫ö‡∫¥‡∫ô: ${result.billNumber}`, 'success');
                    } else {
                        showMessage(`üí∞ ‡∫à‡ªà‡∫≤‡∫ç‡ªÅ‡∫•‡ªâ‡∫ß: ${formatCurrency(result.paymentAmount)} | ‡∫ö‡∫¥‡∫ô: ${result.billNumber}`, 'success');
                    }
                }, 1000);
                
                // ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
                setTimeout(() => {
                    closePaymentModal();
                    loadDebtorsList(); // Reload debtors list
                }, 2000);
                
            } else {
                showMessage(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${result.message}`, 'error');
                resetPaymentSaveButton();
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', error);
            showMessage(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${error.message || error}`, 'error');
            resetPaymentSaveButton();
        })
        .savePaymentDataWithBillUpdate(paymentData);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á "‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
function saveRemainingDebtToDebtTable(paymentData, remainingAmount) {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á "‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"...');
    
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    const remainingDebtData = {
        remainingAmount: remainingAmount,
        originalBillNumber: paymentData.billNumber,
        customerName: paymentData.customerName,
        phoneNumber: paymentData.phoneNumber,
        paidAmount: paymentData.paymentAmount,
        originalTotalAmount: paymentData.customerTotalAmount
    };
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô Google Apps Script
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result);
                showMessage(`üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${formatCurrency(remainingAmount)} ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á "‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`, 'success');
            } else {
                console.error('‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', result.message);
                showMessage(`‚ö†Ô∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${result.message}`, 'error');
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:', error);
            showMessage(`‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${error.message || error}`, 'error');
        })
        .saveRemainingDebtData(remainingDebtData);
}

// ==============================================
// üîß ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
// ==============================================

function handleEnhancedPaymentSuccess(result) {
    if (result.success) {
        console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result);
        
        // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if (selectedPaymentOption === 1) {
            // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1: Print
            generatePaymentReceipt(result);
            showMessage(`‚úÖ ${result.message} ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß`, 'success');
        } else if (selectedPaymentOption === 2) {
            // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2: WhatsApp
            sendPaymentWhatsApp(result);
            showMessage(`‚úÖ ${result.message} ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á WhatsApp ‡πÅ‡∏•‡πâ‡∏ß`, 'success');
        }
        
        // ‡∏õ‡∏¥‡∏î modal ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        setTimeout(() => {
            closePaymentModal();
            loadDebtorsList(); // Reload debtors list
        }, 2000);
        
    } else {
        showMessage(`‚ùå ${result.message}`, 'error');
        resetPaymentSaveButton();
    }
}

// ==============================================
// üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1)
// ==============================================

function generatePaymentReceipt(paymentResult) {
    if (!currentPaymentData) return;
    
    console.log('üñ®Ô∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
    let receiptContent = `
        <div style="font-family: 'Noto Sans Lao', Arial, sans-serif; margin: 20px; background: white; padding: 20px;">
            <div style="text-align: center; margin-bottom: 20px; font-weight: bold; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫Æ‡∫±‡∫ö‡ªÄ‡∫á‡∫¥‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            
            <div style="margin-bottom: 15px; font-size: 14px;">
                ‚ñ∂ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${paymentResult.paymentId || 'N/A'}<br>
                ‚ñ∂ ‡ªÄ‡∫•‡∫Ç‡∫ö‡∫¥‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ: ${currentPaymentData.billNumber}<br>
                ‚ñ∂ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${currentPaymentData.customerName}<br>
                ‚ñ∂ ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó: ${currentPaymentData.phoneNumber}<br>
                ‚ñ∂ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${new Date().toLocaleDateString('lo-LA')}<br>
                ‚ñ∂ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ß‡∫±‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ: ${currentPaymentData.debtDays} ‡∫ß‡∫±‡∫ô
            </div>
            
            <div style="text-align: center; font-weight: bold; margin: 15px 0;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞ &gt;&gt;&gt;
            </div>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 2px solid #000;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫ç‡∫≠‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ä‡ªç‡∫≤‡∫•‡∫∞</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫ç‡∫≠‡∫î‡∫Ñ‡∫ª‡∫á‡ªÄ‡∫´‡∫º‡∫∑‡∫≠</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">‡∫ö‡∫¥‡∫ô‡ªÄ‡∫•‡∫Å ${currentPaymentData.billNumber}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${formatCurrency(currentPaymentData.totalPayAmount)}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; color: #28a745; font-weight: bold;">${formatCurrency(paymentResult.paymentAmount)}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${formatCurrency(currentPaymentData.totalPayAmount - paymentResult.paymentAmount)}</td>
                    </tr>
                </tbody>
            </table>
            
            <div style="margin-top: 20px; padding: 15px; background: #d4edda; border-radius: 8px; border-left: 4px solid #28a745;">
                <strong style="color: #155724;">‚úÖ ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞: ‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªÄ‡∫á‡∫¥‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß</strong><br>
                <span style="font-size: 0.9rem; color: #155724;">‡∫Ç‡ªç‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫Ñ‡∫∑‡∫ô‡∫ï‡∫≤‡∫°‡∫Å‡ªç‡∫≤‡∫ô‡∫ª‡∫î</span>
            </div>
            
            <div style="text-align: center; margin-top: 20px; font-weight: bold; border-top: 2px solid #000; padding-top: 10px;">
                &lt;&lt;&lt; ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡∫°‡∫≤‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ &gt;&gt;&gt;
            </div>
        </div>
    `;
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô
    const printWindow = window.open('', '_blank');
    printWindow.document.write(receiptContent);
    printWindow.document.close();
    printWindow.print();
    setTimeout(() => printWindow.close(), 1000);
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ - ‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
function sendPaymentWhatsApp(paymentResult) {
    if (!currentPaymentData) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞');
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞', 'error');
        return;
    }
    
    console.log('üì± ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ...', currentPaymentData);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
    const whatsappMessage = generatePaymentWhatsAppMessage(paymentResult);
    
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ phoneNumber
    let phoneNumber = currentPaymentData.phoneNumber;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô string
    if (phoneNumber === null || phoneNumber === undefined) {
        phoneNumber = '';
        console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤');
    } else {
        phoneNumber = String(phoneNumber);
    }
    
    console.log('üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:', phoneNumber);
    
    // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô sendToWhatsApp ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    sendToWhatsApp(whatsappMessage, phoneNumber);
    
    console.log('‚úÖ ‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ==============================================
// üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ
// ==============================================
function generatePaymentWhatsAppMessage(paymentResult) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    if (!currentPaymentData) {
        console.error('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞');
        return '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå';
    }

    let message = `üßæ ‡ªÉ‡∫ö‡∫Æ‡∫±‡∫ö‡ªÄ‡∫á‡∫¥‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üìã ‡ªÄ‡∫•‡∫Å‡∫ö‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${currentPaymentData.billNumber || 'N/A'}\n`;
    message += `üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${currentPaymentData.customerName || 'N/A'}\n`;
    message += `üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó: ${currentPaymentData.phoneNumber || 'N/A'}\n`;
    message += `üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${new Date().toLocaleDateString('lo-LA')}\n`;
    message += `‚è∞ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ß‡∫±‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${currentPaymentData.debtDays || 0} ‡∫ß‡∫±‡∫ô\n\n`;
    
    message += `üí∞ ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Å‡∫≤‡∫ô‡∫ä‡ªç‡∫≤‡∫•‡∫∞:\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `‚û§ ‡∫ç‡∫≠‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${formatCurrency(currentPaymentData.totalPayAmount || 0)}\n`;
    
    // ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢
    const paidAmount = paymentResult ? 
        (paymentResult.paymentAmount || 0) : 
        (parseFloat(document.getElementById('paymentAmount')?.value) || 0);
    
    const remainingAmount = (currentPaymentData.totalPayAmount || 0) - paidAmount;
    
    message += `‚û§ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${formatCurrency(paidAmount)}\n`;
    message += `‚û§ ‡∫ç‡∫±‡∫á‡∫Ñ‡ªâ‡∫≤‡∫á‡∫¢‡∫π‡ªà‡∫™‡ªç‡∫≤‡∫•‡∫±‡∫ö‡ªÄ‡∫•‡∫Å‡∫ö‡∫¥‡∫ô‡∫ô‡∫µ‡ªâ: ${formatCurrency(remainingAmount)}\n\n`;
    
    if (remainingAmount <= 0) {
        message += `‚úÖ ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞: ‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫Ñ‡∫ª‡∫ö‡ªÅ‡∫•‡ªâ‡∫ß\n`;
        message += `‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô üôè\n\n`;
    } else {
        message += `‚ö†Ô∏è ‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞: ‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫ö‡∫≤‡∫á‡∫™‡ªà‡∫ß‡∫ô\n`;
        message += `‡∫ç‡∫±‡∫á‡ªÄ‡∫´‡∫º‡∫∑‡∫≠‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô ${formatCurrency(remainingAmount)} ‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞\n\n`;
    }
    
    message += `<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô >>>`;
    
    return message;
}

// ==============================================
// üîß ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
// ==============================================

function resetPaymentSaveButton() {
    console.log('üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...');
    
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = false;
        saveBtn.style.opacity = '1';
        saveBtn.style.cursor = 'pointer';
        saveBtn.style.pointerEvents = 'auto';
        
        if (selectedPaymentOption === 1) {
            saveBtn.innerHTML = 'üíæüñ®Ô∏è ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ + ‡∫õ‡∫¥‡ªâ‡∫ô';
            saveBtn.style.background = 'linear-gradient(135deg, #6f42c1 0%, #563d7c 100%)';
        } else if (selectedPaymentOption === 2) {
            saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ + WhatsApp';
            saveBtn.style.background = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
        } else {
            saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ';
            saveBtn.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
        }
        
        console.log('‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï');
    }
}

function handlePaymentSuccess(result) {
    if (result.success) {
        showMessage(`‚úÖ ${result.message}`, 'success');
        closePaymentModal();
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢
        setTimeout(() => {
            showMessage(`üí∞ ‡∫à‡ªà‡∫≤‡∫ç‡ªÅ‡∫•‡ªâ‡∫ß: ${formatCurrency(result.paymentAmount)} | ‡∫ö‡∫¥‡∫ô: ${result.billNumber}`, 'success');
        }, 2000);
        
        // Reload debtors list
        loadDebtorsList();
    } else {
        showMessage(`‚ùå ${result.message}`, 'error');
        
        // Re-enable save button
        const saveBtn = document.getElementById('paymentSaveBtn');
        if (saveBtn) {
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ';
        }
    }
}

function handlePaymentError(error) {
    console.error('‚ùå Payment save error:', error);
    showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ${error.message || error}`, 'error');
    
    // Re-enable save button
    const saveBtn = document.getElementById('paymentSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = false;
        saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªú‡∫µ‡ªâ';
    }
}

function closePaymentModal() {
    const modal = document.getElementById('paymentModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            document.body.removeChild(modal);
        }, 300);
    }
    
    // Reset ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global
    selectedDebtData = null;
    selectedPaymentOption = null;
    currentPaymentData = null;
    window.currentCustomerBills = null;
    
    console.log('üî¥ ‡∏õ‡∏¥‡∏î Payment Modal ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
}

// ==============================================
// üîß OTHER BUTTON FUNCTIONS
// ==============================================
function shareImage() {
    console.log('üì∏ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏π‡∏õ...');
    showCurrencyImageSelector();
}
// ==============================================
// üîß CURRENCY IMAGE SHARING SYSTEM - ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏π‡∏õ‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
// ==============================================

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞ Google Drive File IDs
const CURRENCY_DATA = {
    LAK: {
        id: "1K_su78GTvbU1gBPR1H99WJVcQh7B610o",
        name: "‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡∫µ‡∫ö",
        symbol: "‚Ç≠",
        icon: "üí∞",
        color: "#ff6b6b"
    },
    THB: {
        id: "17StxijO58abR0mz4lesWxgMz8NU7ObOG", 
        name: "‡ªÄ‡∫á‡∫¥‡∫ô‡∫ö‡∫≤‡∫î",
        symbol: "‡∏ø",
        icon: "üíµ",
        color: "#4caf50"
    },
    USD: {
        id: "18RAgOTRrz2XHMAhhSM7FBCQBroSjMn2N",
        name: "‡ªÄ‡∫á‡∫¥‡∫ô‡∫î‡ªç‡∫•‡ªà‡∫≤",
        symbol: "$",
        icon: "üí∂",
        color: "#2196f3"
    }
};

// ==============================================
// üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô shareImage ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
// ==============================================

function showCurrencyImageSelector() {
    console.log('üì∏ ‡πÄ‡∏õ‡∏¥‡∏î Currency Image Selector...');
    
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingModal = document.getElementById('currencyImageModal');
    if (existingModal) {
        document.body.removeChild(existingModal);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á modal ‡πÉ‡∏´‡∏°‡πà
    const modal = document.createElement('div');
    modal.id = 'currencyImageModal';
    modal.className = 'debt-modal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.9);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10003;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #333;
                    font-size: 1.5rem;
                    font-weight: bold;
                ">üì∏ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô</h2>
                <button onclick="closeCurrencyImageModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ -->
            <div style="
                color: #666;
                margin-bottom: 30px;
                font-size: 1rem;
                line-height: 1.5;
            ">
                ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡ªÄ‡∫ö‡∫¥‡ªà‡∫á‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô -->
            <div style="
                display: flex;
                flex-direction: column;
                gap: 15px;
                margin-bottom: 25px;
            ">
                ${Object.entries(CURRENCY_DATA).map(([code, data]) => `
                    <button onclick="showCurrencyImage('${code}')" style="
                        background: linear-gradient(135deg, ${data.color} 0%, ${adjustColor(data.color, -20)} 100%);
                        color: white;
                        border: none;
                        padding: 20px;
                        border-radius: 15px;
                        cursor: pointer;
                        font-size: 1.1rem;
                        font-weight: bold;
                        transition: all 0.3s ease;
                        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 10px;
                    " 
                    onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(0,0,0,0.3)'"
                    onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(0,0,0,0.2)'">
                        <span style="font-size: 1.5rem;">${data.icon}</span>
                        <span>${data.name} (${data.symbol})</span>
                    </button>
                `).join('')}
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î -->
            <button onclick="closeCurrencyImageModal()" style="
                background: #6c757d;
                color: white;
                border: none;
                padding: 12px 25px;
                border-radius: 8px;
                cursor: pointer;
                font-size: 1rem;
                transition: all 0.2s ease;
            " onmouseover="this.style.background='#5a6268'"
               onmouseout="this.style.background='#6c757d'">
                ‚úñ ‡∫õ‡∫¥‡∫î
            </button>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animations
    addCurrencyImageStyles();
    
    console.log('‚úÖ Currency Image Selector ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡πâ‡∏ß');
}

// ==============================================
// üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
// ==============================================

function showCurrencyImage(currencyCode) {
    console.log(`üì∑ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô: ${currencyCode}`);
    
    const currencyInfo = CURRENCY_DATA[currencyCode];
    if (!currencyInfo) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô:', currencyCode);
        return;
    }
    
    // ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    closeCurrencyImageModal();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å Google Drive
   const imageUrl = `https://lh3.googleusercontent.com/d/${currencyInfo.id}`;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    const imageModal = document.createElement('div');
    imageModal.id = 'currencyImageViewModal';
    imageModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.95);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        z-index: 10004;
        cursor: pointer;
        animation: imageModalFadeIn 0.4s ease-out;
    `;
    
    imageModal.innerHTML = `
        <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î -->
        <div style="
            position: absolute;
            top: 30px;
            right: 30px;
            color: white;
            font-size: 40px;
            font-weight: bold;
            cursor: pointer;
            background: rgba(255,255,255,0.2);
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
            border: 2px solid rgba(255,255,255,0.3);
            z-index: 10005;
        " onclick="closeCurrencyImageViewModal()"
           onmouseover="this.style.background='rgba(255,255,255,0.3)'; this.style.transform='scale(1.1)'"
           onmouseout="this.style.background='rgba(255,255,255,0.2)'; this.style.transform='scale(1)'">
            ‚úï
        </div>
        
        <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô -->
        <div style="
            position: absolute;
            top: 30px;
            left: 30px;
            color: white;
            background: rgba(0,0,0,0.7);
            padding: 15px 20px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.2);
        ">
            <div style="
                display: flex;
                align-items: center;
                gap: 10px;
                font-size: 1.2rem;
                font-weight: bold;
            ">
                <span style="font-size: 1.5rem;">${currencyInfo.icon}</span>
                <span>${currencyInfo.name}</span>
            </div>
        </div>
        
 <!-- ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û -->
        <div style="
            max-width: 98vw;
            max-height: 95vh;
            display: flex;
            align-items: center;
            justify-content: center;
        ">
            <img src="${imageUrl}" 
                 alt="${currencyInfo.name}" 
                 style="
                     width: 90vw;
                     height: 85vh;
                     border-radius: 15px;
                     box-shadow: 0 20px 60px rgba(0,0,0,0.8);
                     object-fit: contain;
                     transition: transform 0.3s ease;
                     opacity: 1;
                 "
                 onload="this.style.opacity='1'; console.log('‚úÖ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')"
                 onerror="this.style.display='none'; showImageLoadError('${currencyInfo.name}')">
        </div>
        
        <!-- ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ -->
        <div style="
            position: absolute;
            bottom: 30px;
            color: rgba(255,255,255,0.8);
            font-size: 1.1rem;
            text-align: center;
            pointer-events: none;
            background: rgba(0,0,0,0.5);
            padding: 10px 20px;
            border-radius: 25px;
            backdrop-filter: blur(10px);
        ">
            ‡∫Ñ‡∫•‡∫¥‡∫Å‡∫ó‡∫µ‡ªà‡ªÉ‡∫î‡∫Å‡ªç‡ªà‡ªÑ‡∫î‡ªâ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫õ‡∫¥‡∫î
        </div>
    `;
    
    document.body.appendChild(imageModal);
    
    // ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
    imageModal.addEventListener('click', function(e) {
        if (e.target === imageModal || e.target.tagName === 'IMG') {
            closeCurrencyImageViewModal();
        }
    });
    
    console.log(`‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ${currencyInfo.name} ‡πÅ‡∏•‡πâ‡∏ß`);
}

// ==============================================
// üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal ‡∏ï‡πà‡∏≤‡∏á‡πÜ
// ==============================================

function closeCurrencyImageModal() {
    const modal = document.getElementById('currencyImageModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
}

function closeCurrencyImageViewModal() {
    const modal = document.getElementById('currencyImageViewModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
}

// ==============================================
// üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Error ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
// ==============================================

function showImageLoadError(currencyName) {
    const errorDiv = document.createElement('div');
    errorDiv.style.cssText = `
        color: white;
        text-align: center;
        font-size: 1.5rem;
        background: rgba(255, 107, 107, 0.9);
        padding: 30px;
        border-radius: 15px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255,255,255,0.3);
    `;
    
    errorDiv.innerHTML = `
        <div style="font-size: 3rem; margin-bottom: 15px;">‚ö†Ô∏è</div>
        <div style="font-weight: bold; margin-bottom: 10px;">‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡ªÇ‡∫´‡∫º‡∫î‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö‡ªÑ‡∫î‡ªâ</div>
        <div style="font-size: 1.1rem; opacity: 0.9;">‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö${currencyName}‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡ªÇ‡∫´‡∫º‡∫î‡ªÑ‡∫î‡ªâ</div>
        <div style="font-size: 0.9rem; margin-top: 15px; opacity: 0.8;">‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡∫ú‡∫π‡ªâ‡∫î‡∫π‡ªÅ‡∫•‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</div>
    `;
    
    // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô modal
    const modal = document.getElementById('currencyImageViewModal');
    if (modal) {
        modal.innerHTML = `
            <div onclick="closeCurrencyImageViewModal()" style="
                position: absolute;
                top: 30px;
                right: 30px;
                color: white;
                font-size: 40px;
                cursor: pointer;
            ">‚úï</div>
        `;
        modal.appendChild(errorDiv);
    }
}

// ==============================================
// üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏° - ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏µ
// ==============================================

function adjustColor(color, percent) {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏µ
    const num = parseInt(color.replace("#", ""), 16);
    const amt = Math.round(2.55 * percent);
    const R = (num >> 16) + amt;
    const G = (num >> 8 & 0x00FF) + amt;
    const B = (num & 0x0000FF) + amt;
    return "#" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
        (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
        (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);
}

// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS Animations
// ==============================================

function addCurrencyImageStyles() {
    if (document.getElementById('currencyImageStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'currencyImageStyles';
    style.textContent = `
        @keyframes currencyModalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes currencyModalSlideUp {
            from { 
                opacity: 0; 
                transform: scale(0.9) translateY(50px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
        
        @keyframes imageModalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            #currencyImageModal .modal-content {
                width: 95%;
                padding: 20px;
            }
            
            #currencyImageViewModal .close-btn {
                top: 15px;
                right: 15px;
                width: 45px;
                height: 45px;
                font-size: 30px;
            }
            
            #currencyImageViewModal .currency-info {
                top: 15px;
                left: 15px;
                padding: 10px 15px;
                font-size: 1rem;
            }
        }
    `;
    
    document.head.appendChild(style);
}


// ==============================================
// üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ESC key
// ==============================================

document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        // ‡∏õ‡∏¥‡∏î modal ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
        if (document.getElementById('currencyImageViewModal')) {
            closeCurrencyImageViewModal();
        } else if (document.getElementById('currencyImageModal')) {
            closeCurrencyImageModal();
        }
    }
});

console.log('‚úÖ Currency Image Sharing System ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');

function editDebtor() {
    showMessage('üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫û‡∫±‡∫î‡∫ó‡∫∞‡∫ô‡∫≤‡∫ü‡∫µ‡ªÄ‡∫à‡∫≠‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ...', 'success');
    // TODO: Implement edit debtor functionality
}

// ==============================================
// üîß INTEGRATION WITH EXISTING SYSTEM
// ==============================================



// Hide suggestions when clicking outside
document.addEventListener('click', function(e) {
    const suggestions = document.getElementById('debtorSuggestions');
    const customerInput = document.getElementById('paymentCustomerName');
    
    if (suggestions && customerInput && 
        !suggestions.contains(e.target) && 
        !customerInput.contains(e.target)) {
        suggestions.style.display = 'none';
    }
});

console.log('üí∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');
        console.log('üéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πÅ‡∏Å‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö!');
        // ==============================================
// üîß LOAD ENHANCED CUSTOMER LIST
// ==============================================
        function loadEnhancedCustomerList() {
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                enhancedCustomerList = {
                    customers: result.customers,
                    customerPhoneMap: result.customerPhoneMap
                };
                console.log('üìã ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà:', result.customers.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
            } else {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ:', result.error);
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', error);
        })
        .getCustomerListData();
}



// ==============================================
// üîß PRICE OPTION SELECTION
// ==============================================
function selectPriceOption(option) {
    console.log('üîò ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà:', option);
    
    // Reset ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    document.querySelectorAll('.price-option-card').forEach(card => {
        card.classList.remove('selected');
        card.style.background = 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)';
        card.style.borderColor = '#e1e5e9';
        card.style.color = '#333';
        card.style.transform = 'translateY(0px)';
        card.style.boxShadow = '0 5px 15px rgba(0,0,0,0.1)';
    });
    
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà
    const selectedCard = document.getElementById(`option${option}`);
    if (selectedCard) {
        selectedCard.classList.add('selected');
        selectedCard.style.background = 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)';
        selectedCard.style.borderColor = '#2196F3';
        selectedCard.style.color = 'white';
        selectedCard.style.transform = 'translateY(-8px)';
        selectedCard.style.boxShadow = '0 15px 40px rgba(79, 172, 254, 0.3)';
    }
    
    selectedPriceOption = option;
    
    // ‡πÅ‡∏™‡∏î‡∏á print options section
    const printSection = document.getElementById('printOptionsSection');
    if (printSection) {
        printSection.style.display = 'block';
    }
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    setTimeout(() => {
        updateCustomerPriceColumn();
    }, 100);
    
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', option, '‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á print options');
}

function updateCustomerPriceColumn() {
    // ‡∏´‡∏≤ header ‡πÅ‡∏•‡∏∞ input columns
    const table = document.querySelector('.debt-items-table');
    if (!table) return;
    
    const headerCells = table.querySelectorAll('th');
    const inputCells = table.querySelectorAll('td input.debt-customer-price-input');
    const totalCells = table.querySelectorAll('td [id^="customerTotal_"]');
    
    if (selectedPriceOption === 1) {
        // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1: ‡∏ã‡πà‡∏≠‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
        headerCells.forEach((cell, index) => {
            if (cell.textContent.includes('‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà')) {
                cell.style.display = 'none';
            }
            if (cell.textContent.includes('‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà')) {
                cell.style.display = 'none';
            }
        });
        
        // ‡∏ã‡πà‡∏≠‡∏ô input ‡πÅ‡∏•‡∏∞ total cells
        table.querySelectorAll('tr').forEach(row => {
            const cells = row.querySelectorAll('td');
            if (cells.length >= 7) {
                cells[4].style.display = 'none'; // ‡∏•‡∏≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà
                cells[5].style.display = 'none'; // ‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà
            }
        });
        
    } else if (selectedPriceOption === 2) {
        // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2: ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å
        headerCells.forEach((cell, index) => {
            if (cell.textContent.includes('‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà')) {
                cell.style.display = 'table-cell';
            }
            if (cell.textContent.includes('‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà')) {
                cell.style.display = 'table-cell';
            }
        });
        
        // ‡πÅ‡∏™‡∏î‡∏á input ‡πÅ‡∏•‡∏∞ total cells + ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å
        table.querySelectorAll('tr').forEach(row => {
            const cells = row.querySelectorAll('td');
            if (cells.length >= 7) {
                cells[4].style.display = 'table-cell';
                cells[5].style.display = 'table-cell';
                
                const input = cells[4].querySelector('input');
                if (input) {
                    input.required = true;
                    input.style.borderColor = '#f44336';
                    input.placeholder = '‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤*';
                }
            }
        });
    }
}

function selectPrintOption(option) {
    console.log('üñ®Ô∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå:', option);
    
    selectedPrintOption = option;
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï radio buttons
    document.querySelectorAll('input[name="printOption"]').forEach(radio => {
        radio.checked = radio.value === option;
    });
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï label styles
    document.querySelectorAll('label').forEach(label => {
        if (label.onclick && label.onclick.toString().includes(option)) {
            label.style.borderColor = '#4facfe';
            label.style.background = '#f8f9ff';
        } else if (label.onclick && label.onclick.toString().includes('selectPrintOption')) {
            label.style.borderColor = '#e1e5e9';
            label.style.background = '#f8f9fa';
        }
    });
    
    // ‡πÅ‡∏™‡∏î‡∏á sections ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    const itemsSection = document.getElementById('itemsListSection');
    const customerSection = document.getElementById('customerInfoSection');
    const whatsappSection = document.getElementById('whatsappOptionsSection');
    
    if (itemsSection) itemsSection.style.display = 'block';
    if (customerSection) customerSection.style.display = 'block';
    if (whatsappSection) whatsappSection.style.display = 'block';
    
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const saveWhatsAppBtn = document.getElementById('saveWhatsAppBtn');
    const saveOnlyBtn = document.getElementById('saveOnlyBtn');
    
    if (option === 'print') {
        if (saveWhatsAppBtn) saveWhatsAppBtn.innerHTML = 'üíæüñ®Ô∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + ‡∏õ‡∏£‡∏¥‡πâ‡∏ô';
        if (saveOnlyBtn) saveOnlyBtn.innerHTML = 'üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô';
    } else {
        if (saveWhatsAppBtn) saveWhatsAppBtn.innerHTML = 'üíæüì± ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å + ‡∏™‡πà‡∏á WhatsApp';
        if (saveOnlyBtn) saveOnlyBtn.innerHTML = 'üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô';
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
    if (saveWhatsAppBtn) {
        saveWhatsAppBtn.disabled = false;
        saveWhatsAppBtn.style.opacity = '1';
    }
    if (saveOnlyBtn) {
        saveOnlyBtn.disabled = false;
        saveOnlyBtn.style.opacity = '1';
    }
    checkButtonReadiness();
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°');
}
function saveAndSendWhatsAppFixed() {
    console.log('üì± ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á WhatsApp...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    if (!selectedPriceOption) {
        showMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏ô', 'error');
        return;
    }
    
    if (!selectedPrintOption) {
        showMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå', 'error');
        return;
    }
    
    const customerName = document.getElementById('enhancedCustomerName').value.trim();
    const phoneNumber = document.getElementById('enhancedPhoneNumber').value.trim();
    
    if (!customerName || !phoneNumber) {
        showMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö', 'error');
        return;
    }
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏î‡∏¥‡∏°
    saveDebtWithWhatsApp();
}



// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö option 2)
function showCustomerPriceTable() {
    // ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let existingTable = document.getElementById('customerPriceTable');
    if (existingTable) {
        existingTable.style.display = 'block';
        return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    const tableHTML = `
        <div class="debt-form-section" id="customerPriceTable" style="margin-bottom: 25px;">
            <div class="debt-section-title">üìã ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ - ‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç</div>
            
            <table class="debt-items-table" style="width: 100%; margin-top: 15px;">
                <thead>
                    <tr>
                        <th style="width: 25%;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                        <th style="width: 10%;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                        <th style="width: 15%;">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Ç‡∫≤‡∫ç‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                        <th style="width: 15%;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                        <th style="width: 15%;">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà*</th>
                        <th style="width: 15%;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà</th>
                        <th style="width: 5%;">‡∫Æ‡∫π‡∫ö</th>
                    </tr>
                </thead>
                <tbody id="debtItemsTableBody">
                    ${currentDebtItems.map((item, index) => `
                        <tr data-index="${index}">
                            <td><strong>${item.itemName}</strong><br><small>${item.unit}</small></td>
                            <td><strong>${item.quantity}</strong></td>
                            <td>${formatCurrency(item.shopPrice)}</td>
                            <td><strong>${formatCurrency(item.totalShopPrice)}</strong></td>
                            <td>
                                <input type="number" 
                                       id="customerPrice_${index}" 
                                       class="debt-customer-price-input"
                                       placeholder="‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤*"
                                       min="0" 
                                       step="0.01"
                                       required
                                       style="width: 100%; padding: 8px; border: 2px solid #e1e5e9; border-radius: 6px; text-align: center; font-size: 0.9rem;"
                                       onchange="updateItemCustomerPrice(${index})"
                                       oninput="updateItemCustomerPrice(${index})">
                            </td>
                            <td>
                                <strong id="customerTotal_${index}" style="color: #ff6b6b;">0 ‚Ç≠</strong>
                            </td>
                            <td>
                                ${item.image ? 
                                    `<img src="${item.image}" alt="${item.itemName}" class="debt-item-image">` : 
                                    '<div style="width: 50px; height: 50px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; font-size: 0.8rem;">üì∑</div>'
                                }
                            </td>
                        </tr>
                    `).join('')}
                </tbody>
                <tfoot>
                    <tr style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); font-weight: bold;">
                        <td colspan="3">‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</td>
                        <td><strong style="color: #4caf50;" id="totalShopPrice">${formatCurrency(currentDebtItems.reduce((sum, item) => sum + item.totalShopPrice, 0))}</strong></td>
                        <td>‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç:</td>
                        <td><strong id="totalCustomerAmount" style="color: #ff6b6b; font-size: 1.1rem;">0 ‚Ç≠</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
            <div style="color: #ff6b6b; font-size: 0.9rem; margin-top: 10px;">
                <strong>* ‡∫ö‡∫±‡∫á‡∫Ñ‡∫±‡∫ö‡∫Å‡ªâ‡∫≠‡∫ô:</strong> ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÉ‡∫ô‡∫ó‡∫∏‡∫Å‡∫ä‡ªà‡∫≠‡∫á
            </div>
        </div>
    `;
    
    // ‡πÅ‡∏ó‡∏£‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å itemsListSection
    const itemsSection = document.getElementById('itemsListSection');
    if (itemsSection) {
        itemsSection.insertAdjacentHTML('afterend', tableHTML);
    }
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö option 1)
function hideCustomerPriceTable() {
    const table = document.getElementById('customerPriceTable');
    if (table) {
        table.style.display = 'none';
    }
}


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
function validateSaveButton() {
    const saveBtn = document.getElementById('debtSaveBtn');
    if (!saveBtn) return;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!selectedPriceOption) {
        disableSaveButton('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô');
        return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 2 ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (selectedPriceOption === 2) {
        const priceInputs = document.querySelectorAll('.debt-customer-price-input');
        let allFilled = true;
        
        priceInputs.forEach(input => {
            const value = parseFloat(input.value) || 0;
            if (value <= 0) {
                allFilled = false;
                input.style.borderColor = '#f44336'; // ‡∏™‡∏µ‡πÅ‡∏î‡∏á
            } else {
                input.style.borderColor = '#4caf50'; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            }
        });
        
        if (!allFilled) {
            disableSaveButton('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÉ‡∫ô‡∫ó‡∫∏‡∫Å‡∫ä‡ªà‡∫≠‡∫á');
            return;
        }
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    const customerName = document.getElementById('customerName')?.value.trim();
    const phoneNumber = document.getElementById('phoneNumber')?.value.trim();
    
    if (!customerName || !phoneNumber) {
        disableSaveButton('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ª‡∫ö');
        return;
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    enableSaveButton();
}



function disableSaveButton(message) {
    const saveBtn = document.getElementById('debtSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = true;
        saveBtn.style.opacity = '0.6';
        saveBtn.style.background = '#ccc';
        saveBtn.title = message;
    }
}

function enableSaveButton() {
    const saveBtn = document.getElementById('debtSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = false;
        saveBtn.style.opacity = '1';
        saveBtn.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
        saveBtn.title = '';
    }
}

function updateItemsTableForPriceOption(optionNumber) {
    const tbody = document.getElementById('enhancedDebtItemsTableBody');
    if (!tbody) return;
    
    let totalAmount = 0;
    
    tbody.innerHTML = currentDebtItems.map(item => {
        // Use appropriate price based on option (‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H)
        const price = item.shopPrice; // ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å item.customerPrice ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 2
        const itemTotal = item.quantity * price;
        totalAmount += itemTotal;
        
        return `
            <tr>
                <td><strong>${item.itemName}</strong><br><small>${item.unit}</small></td>
                <td><strong>${item.quantity}</strong></td>
                <td>${formatCurrency(price)}</td>
                <td><strong>${formatCurrency(itemTotal)}</strong></td>
                <td>
                    ${item.image ? 
                        `<img src="${item.image}" alt="${item.itemName}" class="debt-item-image">` : 
                        '<div class="no-image">üì∑</div>'
                    }
                </td>
            </tr>
        `;
    }).join('');
    
    document.getElementById('enhancedTotalAmount').textContent = formatCurrency(totalAmount);
    document.getElementById('enhancedFinalTotal').textContent = formatCurrency(totalAmount);
}

// ==============================================
// üîß ENHANCED CUSTOMER DROPDOWN
// ==============================================
function handleCustomerInput(value) {
    if (value.length >= 1) {
        filterCustomerDropdown(value);
        showCustomerDropdown(true);
    } else {
        showCustomerDropdown(false);
    }
}

function showCustomerDropdown(show) {
    const dropdown = document.getElementById('enhancedCustomerDropdown');
    if (!dropdown) return;
    
    if (show) {
        dropdown.style.display = 'block';
        if (!dropdown.classList.contains('populated')) {
            populateCustomerDropdown();
        }
    } else {
        dropdown.style.display = 'none';
    }
}

function toggleCustomerDropdown() {
    const dropdown = document.getElementById('enhancedCustomerDropdown');
    if (!dropdown) return;
    
    const isVisible = dropdown.style.display === 'block';
    showCustomerDropdown(!isVisible);
    
    if (!isVisible) {
        const searchInput = document.getElementById('dropdownSearch');
        if (searchInput) {
            searchInput.focus();
        }
    }
}

function populateCustomerDropdown() {
    const dropdownList = document.getElementById('customerDropdownList');
    if (!dropdownList || !enhancedCustomerList.customers.length) return;
    
    dropdownList.innerHTML = enhancedCustomerList.customers.map(customerName => {
        const phoneNumber = enhancedCustomerList.customerPhoneMap[customerName] || '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó';
        return `
            <div class="dropdown-item" onclick="selectCustomerFromDropdown('${customerName}', '${phoneNumber}')">
                <div class="customer-name">${customerName}</div>
                <div class="customer-phone">${phoneNumber}</div>
            </div>
        `;
    }).join('');
    
    document.getElementById('enhancedCustomerDropdown').classList.add('populated');
}

function filterCustomerDropdown(searchValue) {
    const dropdownList = document.getElementById('customerDropdownList');
    if (!dropdownList) return;
    
    const filteredCustomers = enhancedCustomerList.customers.filter(customerName =>
        customerName.toLowerCase().includes(searchValue.toLowerCase())
    );
    
    if (filteredCustomers.length === 0) {
        dropdownList.innerHTML = '<div class="dropdown-item no-results">‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤</div>';
        return;
    }
    
    dropdownList.innerHTML = filteredCustomers.map(customerName => {
        const phoneNumber = enhancedCustomerList.customerPhoneMap[customerName] || '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó';
        const highlightedName = customerName.replace(
            new RegExp(searchValue, 'gi'),
            `<mark>$&</mark>`
        );
        return `
            <div class="dropdown-item" onclick="selectCustomerFromDropdown('${customerName}', '${phoneNumber}')">
                <div class="customer-name">${highlightedName}</div>
                <div class="customer-phone">${phoneNumber}</div>
            </div>
        `;
    }).join('');
}

function selectCustomerFromDropdown(customerName, phoneNumber) {
    document.getElementById('enhancedCustomerName').value = customerName;
    
    if (phoneNumber && phoneNumber !== '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó') {
        document.getElementById('enhancedPhoneNumber').value = phoneNumber;
    }
    
    showCustomerDropdown(false);
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏° WhatsApp

function saveAndSendToWhatsApp() {
    if (!validateDebtForm()) return;
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô popup ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    window.isSendingWhatsApp = true;
    
    const saveBtn = document.getElementById('debtSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = true;
        saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...';
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô
    saveDebtDataPromise().then((result) => {
        if (result.success) {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
            const message = generateWhatsAppMessageForDebt();
            const phoneNumber = document.getElementById('phoneNumber').value.trim();
            
            // ‡∏™‡πà‡∏á WhatsApp ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
            sendToWhatsAppModal(phoneNumber, message);
            
            showMessage('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
            closeDebtModal();
        } else {
            showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.message, 'error');
            
            if (saveBtn) {
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
            }
        }
        
        window.isSendingWhatsApp = false;
    }).catch((error) => {
        console.error('Error:', error);
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error, 'error');
        window.isSendingWhatsApp = false;
        
        if (saveBtn) {
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
        }
    });
}
function saveDebtOnly() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤
    if (!selectedPriceOption) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫õ‡∫∞‡ªÄ‡∫û‡∫î‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
    if (!validateAllCustomerPrices()) {
        showMessage('‡∫°‡∫µ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç‡∫ï‡ªç‡ªà‡∫ó‡∫µ‡ªà‡ªÄ‡∫Å‡∫µ‡∫ô‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Å‡ªà‡∫≠‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    const customerName = document.getElementById('customerName').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    
    if (!customerName || !phoneNumber) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫Å‡ªâ‡∫≠‡∫ô‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ª‡∫ö', 'error');
        return;
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 2 ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (selectedPriceOption === 2) {
        const priceInputs = document.querySelectorAll('.debt-customer-price-input');
        let allFilled = true;
        
        priceInputs.forEach((input, index) => {
            const value = parseFloat(input.value) || 0;
            if (value <= 0) {
                allFilled = false;
                input.style.borderColor = '#f44336';
            } else {
                if (currentDebtItems[index]) {
                    currentDebtItems[index].customerPrice = value;
                    currentDebtItems[index].totalCustomerPrice = value * currentDebtItems[index].quantity;
                }
                input.style.borderColor = '#4caf50';
            }
        });
        
        if (!allFilled) {
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÉ‡∫ô‡∫ó‡∫∏‡∫Å‡∫ä‡ªà‡∫≠‡∫á', 'error');
            return;
        }
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å option 1 ‡πÉ‡∏ä‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô
        currentDebtItems.forEach(item => {
            item.customerPrice = item.shopPrice;
            item.totalCustomerPrice = item.shopPrice * item.quantity;
        });
    }
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
    const saveBtn = document.getElementById('saveOnlyBtn');
    if (saveBtn) {
        saveBtn.disabled = true;
        saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...';
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    saveDebtDataPromise().then((result) => {
        if (result.success) {
            showMessage('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
            closeDebtModal();
            clearSelectionOnly();
        } else {
            showMessage('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + result.message, 'error');
        }
        
        // ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö
        if (saveBtn) {
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô';
        }
    }).catch((error) => {
        console.error('Error:', error);
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error, 'error');
        
        if (saveBtn) {
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô';
        }
    });
}

function saveEnhancedDebtData() {
    return new Promise(async (resolve) => {
        // Upload image first if exists
        const imageUrl = await uploadEnhancedImage();
        
        // Prepare customer info
        const customerInfo = {
            customerName: document.getElementById('enhancedCustomerName').value.trim(),
            phoneNumber: document.getElementById('enhancedPhoneNumber').value.trim()
        };
        
        const extraAmount = parseFloat(document.getElementById('enhancedExtraAmount').value) || 0;
        
        // Save to Google Sheets
        google.script.run
            .withSuccessHandler((result) => {
                resolve(result);
            })
            .withFailureHandler((error) => {
                resolve({ success: false, message: error.message || error });
            })
            .saveDebtDataUpdated(currentDebtItems, customerInfo, extraAmount, imageUrl);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp


function generateDebtWhatsAppMessage(customerName, phoneNumber, orderNumber) {
    console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp...');
    
    // ‡πÉ‡∏ä‡πâ orderNumber ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å backend ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    const billNumber = orderNumber || (generateOrderNumber() + '_DEBT');
    
    let message = `‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞ ‚òÖ‚òÖ‚òÖ‚òÖ \n`;
    message += `‚û§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${customerName}\n`;
    message += `‚û§ ‡ªÄ‡∫•‡∫Å‡∫•‡∫∞‡∫´‡∫±‡∫î‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô: ${billNumber}\n`;
    message += `‚û§ ‡ªÇ‡∫ó: ${phoneNumber}\n`;
    message += `‚û§ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${new Date().toLocaleDateString('lo-LA')}\n\n`;
    
    
    message += "<<< ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞:>>>\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";
    
 let totalShopPrice = 0;
let totalCustomerPrice = 0;

currentDebtItems.forEach((item, index) => {
    const customerPrice = item.customerPrice || item.shopPrice;
    const customerTotal = item.quantity * customerPrice;
    
    message += `${index + 1}. ${item.itemName}\n`;
    message += `   - ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô: ${item.quantity} ${item.unit}\n`;
    message += `   - ‡∫•‡∫≤‡∫Ñ‡∫≤: ${formatCurrency(customerPrice)}\n`;
    message += `   - ‡∫•‡∫ß‡∫°: ${formatCurrency(customerTotal)}\n\n`;
        
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ totalCustomerPrice ‡πÅ‡∏ó‡∏ô totalShopPrice
    if (selectedPriceOption === 2) {
        totalShopPrice += customerTotal; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå K = ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        totalCustomerPrice += customerTotal;
    } else {
        // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏î‡∏¥‡∏°
        totalShopPrice += item.totalShopPrice;
        totalCustomerPrice += customerTotal;
    }
});
    // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const extraAmount = parseFloat(document.getElementById('extraAmount')?.value) || 0;
    if (extraAmount > 0) {
        totalCustomerPrice += extraAmount;
        message += `‚û§ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ô‡∫≠‡∫Å‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô: ${formatCurrency(extraAmount)}\n`;
    }
    
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `‚û§ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤: ${formatCurrency(totalShopPrice)}\n`;
    message += `‚û§ ‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î‡∫ï‡ªâ‡∫≠‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${formatCurrency(totalCustomerPrice)}\n`;
    
    
   message += `<<<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡∫°‡∫≤‡∫≠‡∫∏‡∫î‡ªú‡∫π‡∫ô >>>>>\n`;
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à:', message.substring(0, 100) + '...');
    return message;
}


// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô generateWhatsAppMessage ‡πÄ‡∏î‡∏¥‡∏° (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥)
function generateWhatsAppMessage(orderNumber) {
    let message = `üßæ ‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô‡∫Å‡∫≤‡∫ô‡∫Ç‡∫≤‡∫ç\n`;
    message += `üìã ‡ªÄ‡∫•‡∫Ç‡∫ö‡∫¥‡∫ô: ${orderNumber}\n`;
    message += `üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${new Date().toLocaleDateString('lo-LA')}\n\n`;
    
    
    message += "üõí ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";
    
    let totalAmount = 0;
    
    scannedItems.forEach((item, index) => {
        const itemTotal = item.quantity * item.price;
        totalAmount += itemTotal;
        
        message += `${index + 1}. ${item.name}\n`;
        message += `   üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô: ${item.quantity} ${item.unit}\n`;
        message += `   üí∞ ‡∫•‡∫≤‡∫Ñ‡∫≤: ${formatCurrency(item.price)}\n`;
        message += `   üíµ ‡∫•‡∫ß‡∫°: ${formatCurrency(itemTotal)}\n\n`;
    });
    
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üí∞ ‡∫•‡∫ß‡∫°‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${formatCurrency(totalAmount)}\n\n`;
    
    message += `<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°‡ªÑ‡∫ß‡ªâ‡∫ß‡∫≤‡∫á‡ªÉ‡∫à >>>\n`;
   
    
    return message;
}
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô sendToWhatsApp ‡πÄ‡∏î‡∏¥‡∏° (‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 4612-4680)
function sendToWhatsApp(message, phoneNumber = null) {
    console.log('üì± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á WhatsApp...', phoneNumber ? `‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${phoneNumber}` : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå');
    
    // *** ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö phoneNumber ***
    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ null/undefined
    let cleanPhoneNumber = '';
    if (phoneNumber !== null && phoneNumber !== undefined) {
        cleanPhoneNumber = String(phoneNumber).trim();
    }
    
    console.log('üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:', phoneNumber, '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:', typeof phoneNumber);
    console.log('üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:', cleanPhoneNumber);
    
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô popup blocker
    window.isSendingWhatsApp = true;
    
    try {
        const encodedMessage = encodeURIComponent(message);
        
        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
        let webUrl = '';
        
        if (cleanPhoneNumber && cleanPhoneNumber.length > 0) {
            const cleanPhone = cleanPhoneNumber.replace(/[^\d]/g, '');
            let internationalPhone = cleanPhone;
            
            if (cleanPhone.startsWith('0')) {
                internationalPhone = '856' + cleanPhone.substring(1);
            } else if (cleanPhone.length < 10) {
                internationalPhone = '856' + cleanPhone;
            } else if (!cleanPhone.startsWith('856')) {
                internationalPhone = '856' + cleanPhone;
            }
            
            webUrl = `https://web.whatsapp.com/send?phone=${internationalPhone}&text=${encodedMessage}`;
            console.log('üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á:', internationalPhone);
        } else {
            webUrl = `https://web.whatsapp.com/send?text=${encodedMessage}`;
            console.log('üìû ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£');
        }
        
        console.log('üîó URL ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:', webUrl);
        
        // ‡πÄ‡∏õ‡∏¥‡∏î WhatsApp Web
        const whatsappWindow = window.open(webUrl, '_blank', 'noopener,noreferrer');
        
        if (whatsappWindow) {
            console.log('‚úÖ ‡∏™‡πà‡∏á WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
            showMessage('üì± ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î WhatsApp Web... ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà', 'success');
        } else {
            throw new Error('window.open ‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å');
        }
        
    } catch (error) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á WhatsApp:', error);
        showWhatsAppFallbackModal(message, cleanPhoneNumber);
    } finally {
        setTimeout(() => {
            window.isSendingWhatsApp = false;
        }, 3000);
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô modal ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á WhatsApp ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
function showWhatsAppFallbackModal(message, phoneNumber) {
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10001;
    `;
    
    modal.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 600px; width: 90%; text-align: center;">
            <h3 style="color: #25D366; margin-bottom: 15px;">üì± ‡∏™‡πà‡∏á WhatsApp ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á</h3>
            <p style="margin-bottom: 15px;">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ô WhatsApp:</p>
            ${phoneNumber ? `<p style="color: #666; margin-bottom: 10px;">üìû ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á: ${phoneNumber}</p>` : ''}
            <textarea readonly style="width: 100%; height: 200px; margin: 15px 0; padding: 10px; border: 2px solid #ddd; border-radius: 8px; font-family: monospace; font-size: 12px;">${message}</textarea>
            <div style="display: flex; gap: 10px; justify-content: center; flex-wrap: wrap;">
                <button onclick="copyMessageToClipboard('${message.replace(/'/g, "\\'").replace(/"/g, '\\"')}')" 
                        style="background: #25D366; color: white; border: none; padding: 12px 20px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                </button>
                ${phoneNumber ? `
                <button onclick="openWhatsAppManual('${phoneNumber}')" 
                        style="background: #128C7E; color: white; border: none; padding: 12px 20px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    üì± ‡πÄ‡∏õ‡∏¥‡∏î WhatsApp
                </button>` : ''}
                <button onclick="closeWhatsAppFallbackModal()" 
                        style="background: #dc3545; color: white; border: none; padding: 12px 20px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚úñ ‡∏õ‡∏¥‡∏î
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    window.currentWhatsAppFallbackModal = modal;
}
function copyMessageToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß! ‡πÑ‡∏õ‡∏™‡πà‡∏á‡πÉ‡∏ô WhatsApp ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢');
        closeWhatsAppFallbackModal();
    }).catch(() => {
        // ‡∏™‡∏≥‡∏£‡∏≠‡∏á: ‡∏™‡∏£‡πâ‡∏≤‡∏á text area ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        const textArea = document.createElement('textarea');
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        alert('‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß!');
        closeWhatsAppFallbackModal();
    });
}
function openWhatsAppManual(phoneNumber) {
    const cleanPhone = phoneNumber.replace(/[^\d]/g, '');
    const internationalPhone = cleanPhone.startsWith('0') ? '856' + cleanPhone.substring(1) : 
                              (!cleanPhone.startsWith('856') ? '856' + cleanPhone : cleanPhone);
    
    window.open(`https://wa.me/${internationalPhone}`, '_blank');
    closeWhatsAppFallbackModal();
}

function closeWhatsAppFallbackModal() {
    if (window.currentWhatsAppFallbackModal) {
        document.body.removeChild(window.currentWhatsAppFallbackModal);
        window.currentWhatsAppFallbackModal = null;
    }
}



function showWhatsAppModal(message) {
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10000;
    `;
    
    modal.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 500px; text-align: center;">
            <h3 style="color: #25D366;">üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp</h3>
            <p>‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ô WhatsApp:</p>
            <textarea readonly style="width: 100%; height: 200px; margin: 15px 0; padding: 10px; border: 2px solid #ddd; border-radius: 8px;">${message}</textarea>
            <div>
                <button onclick="copyToClipboard('${message.replace(/'/g, '\\\'')}')" style="background: #25D366; color: white; border: none; padding: 10px 20px; border-radius: 8px; margin: 5px; cursor: pointer;">üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</button>
                <button onclick="closeWhatsAppModal()" style="background: #dc3545; color: white; border: none; padding: 10px 20px; border-radius: 8px; margin: 5px; cursor: pointer;">‡∏õ‡∏¥‡∏î</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    window.currentWhatsAppModal = modal;
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°
function openWhatsAppDesktop(phone, message) {
    try {
        location.href = `whatsapp://send?phone=${phone}&text=${encodeURIComponent(message)}`;
    } catch (error) {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î WhatsApp Desktop ‡πÑ‡∏î‡πâ');
    }
    closeWhatsAppModal();
}
function openWhatsAppWeb(phone, message) {
    window.open(`https://wa.me/${phone}?text=${encodeURIComponent(message)}`, '_blank');
    closeWhatsAppModal();
}

function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß! ‡πÑ‡∏õ‡∏™‡πà‡∏á‡πÉ‡∏ô WhatsApp ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢');
        closeWhatsAppModal();
    }).catch(() => {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏≠‡∏á');
    });
}

function closeWhatsAppModal() {
    if (window.currentWhatsAppModal) {
        document.body.removeChild(window.currentWhatsAppModal);
        window.currentWhatsAppModal = null;
    }
}
// ==============================================
// üîß UTILITY FUNCTIONS
// ==============================================


function validateDebtForm() {
    const customerName = document.getElementById('customerName').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    
    if (!customerName) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤', 'error');
        document.getElementById('customerName').focus();
        return false;
    }
    
    if (!phoneNumber) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö', 'error');
        document.getElementById('phoneNumber').focus();
        return false;
    }
    
    return true;
}


function updateEnhancedTotals() {
    const extraAmount = parseFloat(document.getElementById('enhancedExtraAmount').value) || 0;
    const extraAmountRow = document.getElementById('enhancedExtraAmountRow');
    const extraAmountDisplay = document.getElementById('enhancedExtraAmountDisplay');
    
    if (extraAmount > 0) {
        extraAmountRow.style.display = 'flex';
        extraAmountDisplay.textContent = formatCurrency(extraAmount);
    } else {
        extraAmountRow.style.display = 'none';
    }
    
    // Calculate total from items table
    let itemsTotal = 0;
    currentDebtItems.forEach(item => {
        itemsTotal += item.quantity * item.shopPrice;
    });
    
    const finalTotal = itemsTotal + extraAmount;
    document.getElementById('enhancedFinalTotal').textContent = formatCurrency(finalTotal);
}

function previewEnhancedImage(input) {
    const imagePreview = document.getElementById('enhancedImagePreview');
    const previewImg = document.getElementById('enhancedPreviewImg');
    const imageFileName = document.getElementById('enhancedImageFileName');
    
    if (input.files && input.files[0]) {
        const file = input.files[0];
        
        if (!file.type.startsWith('image/')) {
            showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡ªÑ‡∫ü‡∫•‡ªå‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô', 'error');
            input.value = '';
            return;
        }
        
        if (file.size > 5 * 1024 * 1024) {
            showMessage('‡∫Ç‡∫∞‡ªú‡∫≤‡∫î‡ªÑ‡∫ü‡∫•‡ªå‡∫ö‡ªç‡ªà‡∫Ñ‡∫ß‡∫ô‡ªÄ‡∫Å‡∫µ‡∫ô 5MB', 'error');
            input.value = '';
            return;
        }
        
        imageFileName.textContent = file.name;
        
        const reader = new FileReader();
        reader.onload = function(e) {
            previewImg.src = e.target.result;
            imagePreview.style.display = 'block';
        };
        reader.readAsDataURL(file);
    } else {
        imagePreview.style.display = 'none';
        imageFileName.textContent = '';
    }
}

function uploadEnhancedImage() {
    return new Promise((resolve) => {
        const imageInput = document.getElementById('enhancedDocumentImage');
        const file = imageInput.files[0];
        
        if (!file) {
            resolve('');
            return;
        }
        
        const reader = new FileReader();
        reader.onload = function(e) {
            const base64Data = e.target.result;
            const fileName = `enhanced_debt_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9.-]/g, '_')}`;
            const mimeType = file.type;
            
            google.script.run
                .withSuccessHandler((result) => {
                    if (result && result.success) {
                        resolve(result.directUrl || result.viewUrl || '');
                    } else {
                        console.error('Upload failed:', result);
                        resolve('');
                    }
                })
                .withFailureHandler((error) => {
                    console.error('Upload error:', error);
                    resolve('');
                })
                .uploadImageToGoogleDrive(base64Data, fileName, mimeType);
        };
        
        reader.readAsDataURL(file);
    });
}

function setupEnhancedModalHandlersFixed() {
    // Close modal when clicking outside
    const modal = document.getElementById('enhancedDebtModal');
    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeEnhancedDebtModalFixed();
            }
        });
    }
    
    // ESC key to close
    const escHandler = function(e) {
        if (e.key === 'Escape') {
            closeEnhancedDebtModalFixed();
            document.removeEventListener('keydown', escHandler);
        }
    };
    document.addEventListener('keydown', escHandler);
}

function closeEnhancedDebtModalFixed() {
    const modal = document.getElementById('enhancedDebtModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // Reset global variables
    selectedPriceOption = null;
    currentDebtItems = [];
    
    console.log('üî¥ ‡∏õ‡∏¥‡∏î Enhanced Debt Modal');
}
// ==============================================
// üîß INTEGRATION - Load customer list on startup
// ==============================================

// Add this to the existing window.addEventListener('load') function
if (window.addEventListener) {
    window.addEventListener('load', function() {
        setTimeout(() => {
            loadEnhancedCustomerList();
        }, 6000); // Load after other systems are ready
    });
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤
function debugDebtModal() {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Debt Modal...');
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    console.log('selectedItems.size:', selectedItems.size);
    console.log('currentDebtItems:', currentDebtItems);
    console.log('typeof showEnhancedDebtModal:', typeof showEnhancedDebtModal);
    
    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CSS
    const modal = document.getElementById('enhancedDebtModal');
    if (modal) {
        console.log('‚úÖ Modal ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
        console.log('Modal display:', window.getComputedStyle(modal).display);
        console.log('Modal opacity:', window.getComputedStyle(modal).opacity);
    } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Modal');
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö sections
    const priceOptionSection = document.getElementById('priceOptionSection');
    if (priceOptionSection) {
        console.log('‚úÖ ‡∏û‡∏ö Price Option Section');
        console.log('Section display:', window.getComputedStyle(priceOptionSection).display);
    } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Price Option Section');
    }
    
    return {
        selectedItems: selectedItems.size,
        modalExists: !!modal,
        priceOptionSectionExists: !!priceOptionSection,
        enhancedFunctionExists: typeof showEnhancedDebtModal === 'function'
    };
}
function showAllCustomerSuggestions() {
    const suggestions = document.getElementById('customerNameSuggestions');
    if (!suggestions || !customerList.customers || customerList.customers.length === 0) return;
    
    suggestions.innerHTML = customerList.customers.map(customerName => {
        const phoneNumber = customerList.customerPhoneMap[customerName] || '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó';
        return `
            <div class="autocomplete-suggestion" onclick="selectSuggestion('customerName', '${customerName}')">
                <strong>${customerName}</strong><br>
                <small style="color: #666;">${phoneNumber}</small>
            </div>
        `;
    }).join('');
    
    suggestions.style.display = 'block';
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
async function editDebtor() {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á Edit Debtor Modal ‡∏û‡∏£‡πâ‡∏≠‡∏° Loading Effect...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Loading Modal
    const loadingModal = createEditDebtorLoadingModal();
    document.body.appendChild(loadingModal);
    
    try {
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
        console.log('üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ...');
        await loadEditDebtorsList();
        
        // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô Loading Effect
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // ‡∏õ‡∏¥‡∏î Loading Modal
        document.body.removeChild(loadingModal);
        
        // ‡πÅ‡∏™‡∏î‡∏á Edit Debtor Modal ‡∏à‡∏£‡∏¥‡∏á
        showActualEditDebtorModal();
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
        
        if (document.body.contains(loadingModal)) {
            document.body.removeChild(loadingModal);
        }
        
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ' + error.message, 'error');
    }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Loading Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ
function createEditDebtorLoadingModal() {
    const modal = document.createElement('div');
    modal.className = 'debt-modal';
    modal.id = 'editDebtorLoadingModal';
    modal.style.background = 'rgba(0, 0, 0, 0.9)';
    
    modal.innerHTML = `
        <div style="background: white; border-radius: 20px; padding: 40px; text-align: center; max-width: 400px; box-shadow: 0 20px 60px rgba(0,0,0,0.3); animation: modalFadeIn 0.4s ease-out;">
            
            <!-- Animated Loading Icon -->
            <div style="margin-bottom: 25px; position: relative;">
                <div class="edit-loading-spinner" style="
                    width: 80px; 
                    height: 80px; 
                    margin: 0 auto; 
                    border: 6px solid #e3f2fd; 
                    border-top: 6px solid #9c27b0; 
                    border-right: 6px solid #7b1fa2;
                    border-radius: 50%; 
                    animation: editSpin 1.2s linear infinite;
                    box-shadow: 0 4px 15px rgba(156, 39, 176, 0.3);
                "></div>
                
                <!-- Edit Icon in Center -->
                <div style="
                    position: absolute; 
                    top: 50%; 
                    left: 50%; 
                    transform: translate(-50%, -50%);
                    font-size: 2rem;
                    animation: editPulse 1.5s ease-in-out infinite;
                ">‚úèÔ∏è</div>
            </div>
            
            <!-- Loading Text -->
            <h3 style="color: #9c27b0; margin-bottom: 15px; font-size: 1.5rem;">‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ...</h3>
            
            <!-- Progress Steps -->
            <div class="edit-loading-steps" style="text-align: left; margin: 20px 0;">
                <div class="edit-step-item active" style="display: flex; align-items: center; margin: 8px 0; color: #4caf50;">
                    <span style="margin-right: 10px;">‚úì</span>
                    <span>‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫°‡∫ï‡ªç‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</span>
                </div>
                <div class="edit-step-item loading" style="display: flex; align-items: center; margin: 8px 0; color: #9c27b0;">
                    <span style="margin-right: 10px; animation: editDots 1.5s infinite;">‚óè</span>
                    <span>‡∫î‡∫∂‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</span>
                </div>
                <div class="edit-step-item" style="display: flex; align-items: center; margin: 8px 0; color: #999;">
                    <span style="margin-right: 10px;">‚óã</span>
                    <span>‡∫Å‡∫Ω‡∫°‡∫ü‡∫≠‡∫°‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç</span>
                </div>
            </div>
            
            <!-- Progress Bar -->
            <div style="width: 100%; height: 6px; background: #e0e0e0; border-radius: 3px; overflow: hidden; margin-top: 20px;">
                <div style="
                    height: 100%; 
                    background: linear-gradient(90deg, #9c27b0, #7b1fa2); 
                    width: 0%; 
                    animation: editProgress 2s ease-in-out forwards;
                    border-radius: 3px;
                "></div>
            </div>
            
            <p style="color: #666; margin-top: 15px; font-size: 0.9rem;">
                ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫™‡∫±‡∫Å‡∫Ñ‡∫π‡ªà...
            </p>
        </div>
    `;
    
    return modal;
}

// ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function loadEditDebtorsList() {
    return new Promise((resolve) => {
        google.script.run
            .withSuccessHandler((data) => {
                // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ"
                editDebtorsList = data.filter(debt => debt.status === '‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ') || [];
                console.log('üìã ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ:', editDebtorsList.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
                resolve(editDebtorsList);
            })
            .withFailureHandler((error) => {
                console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ:', error);
                resolve([]);
            })
            .getDebtorsList();
    });
}

// ‡πÅ‡∏™‡∏î‡∏á Edit Debtor Modal ‡∏à‡∏£‡∏¥‡∏á

function showActualEditDebtorModal() {
    const modal = document.createElement('div');
    modal.className = 'debt-modal';
    modal.id = 'editDebtorModal';
    
    modal.innerHTML = `
        <div class="debt-modal-content" style="width: 95vw; height: 95vh; animation: modalSlideUp 0.4s ease-out;">
            <div class="debt-modal-header">
                <h2 class="debt-modal-title">‚úèÔ∏è ‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡∫Ñ‡∫ª‡∫ô‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</h2>
                <button class="debt-close-btn" onclick="closeEditDebtorModal()">&times;</button>
            </div>

            <div class="debt-form-section">
                <div class="debt-section-title">üë§ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç</div>
                
                <div class="debt-form-group">
                    <label class="debt-form-label">‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤*</label>
                    <div class="autocomplete-container">
                        <input type="text" id="editDebtorCustomerName" class="debt-form-input" 
                               placeholder="‡∫û‡∫¥‡∫°‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫Ñ‡∫ª‡ªâ‡∫ô‡∫´‡∫≤..." 
                               oninput="searchEditDebtors(this.value)"
                               onfocus="showAllEditDebtors()">
                        <div id="editDebtorSuggestions" class="autocomplete-suggestions"></div>
                    </div>
                </div>

                <div id="editBillSelectionSection" style="display: none;">
                    <div class="debt-form-group">
                        <label class="debt-form-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç*</label>
                        <div id="editBillsList" style="max-height: 300px; overflow-y: auto; border: 2px solid #e1e5e9; border-radius: 10px; padding: 10px;">
                            <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏•‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
                        </div>
                    </div>
                </div>

                <div id="editDebtDetailsSection" style="display: none;">
                    <div class="debt-section-title">üìã ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÉ‡∫ô‡∫ö‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å</div>
                    
                    <!-- ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° -->
                    <div id="existingDebtData" style="background: #f8f9fa; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <h4 style="color: #dc3545; margin-bottom: 15px;">üìä ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÄ‡∫î‡∫µ‡∫°‡∫ó‡∫µ‡ªà‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡ªÑ‡∫î‡ªâ</h4>
                        <div id="existingItemsTable"></div>
                    </div>
                    
                    <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏™‡πÅ‡∏Å‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà -->
                    <div style="background: #e8f5e8; padding: 20px; border-radius: 15px; margin-bottom: 20px;">
                        <h4 style="color: #28a745; margin-bottom: 15px;">‚ûï ‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡ªù‡ªà</h4>
                        
                        <div style="display: flex; gap: 15px; align-items: center; margin-bottom: 20px;">
                            <input type="text" id="editNewItemBarcode" class="debt-form-input" 
                                   placeholder="‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î ‡∫´‡∫º‡∫∑ ‡∫û‡∫¥‡∫°‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤..."
                                   style="flex: 1;"
                                   onkeypress="handleEditBarcodeInput(event)">
                            <button type="button" onclick="addNewItemToEdit()" 
                                    style="background: #28a745; color: white; border: none; padding: 12px 20px; border-radius: 8px; cursor: pointer;">
                                ‚ûï ‡ªÄ‡∫û‡∫µ‡ªà‡∫°
                            </button>
                        </div>
                        
                        <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° -->
                        <div style="margin-bottom: 20px; padding: 15px; background: #fff3cd; border-radius: 10px; border-left: 4px solid #ffc107;">
                            <label style="display: block; font-weight: bold; margin-bottom: 8px; color: #856404;">üí∞ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫≠‡∫ª‡∫≤‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°(‡∫ô‡∫≠‡∫Å‡ªÄ‡∫´‡∫ô‡∫∑‡∫≠‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤)</label>
                            <div style="display: flex; gap: 15px; align-items: center;">
                                <input type="number" 
                                       id="editExtraAmount" 
                                       class="debt-form-input" 
                                       placeholder="‡ªÉ‡∫™‡ªà‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÄ‡∫ï‡∫µ‡∫°..."
                                       min="0" 
                                       step="0.01"
                                       style="flex: 1;"
                                       oninput="updateEditExtraAmount()"
                                       onchange="updateEditExtraAmount()">
                                <span style="color: #856404; font-weight: bold;">‚Ç≠</span>
                            </div>
                            <small style="color: #856404; margin-top: 5px; display: block;">
                                ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô
                            </small>
                        </div>
                        
                        <div id="newItemsTable"></div>
                    </div>

                    <!-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á) -->
                    <div id="editActionOptionsSection" style="display: none; background: #f0f8ff; padding: 20px; border-radius: 15px; margin-bottom: 20px; border: 2px solid #4facfe;">
                        <h4 style="color: #2196f3; margin-bottom: 15px; text-align: center;">üìã ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫´‡∫º‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å</h4>
                        
                        <div style="display: flex; gap: 20px; justify-content: center; margin: 20px 0; flex-wrap: wrap;">
                            <div class="edit-action-option-card" id="editActionOption1" onclick="selectEditActionOption(1)">
                                <div class="option-icon">üñ®Ô∏è</div>
                                <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 1</div>
                                <div class="option-subtitle">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫õ‡∫¥‡ªâ‡∫ô</div>
                                <div class="option-description">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡ªÅ‡∫•‡∫∞‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô</div>
                            </div>
                            
                            <div class="edit-action-option-card" id="editActionOption2" onclick="selectEditActionOption(2)">
                                <div class="option-icon">üì±</div>
                                <div class="option-title">‡∫ï‡∫±‡∫ß‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ó‡∫µ 2</div>
                                <div class="option-subtitle">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + WhatsApp</div>
                                <div class="option-description">‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç‡ªÅ‡∫•‡∫∞‡∫™‡∫ª‡ªà‡∫á WhatsApp</div>
                            </div>
                        </div>
                        
                        <div style="text-align: center; color: #666; margin-top: 15px; padding: 10px; background: #fff3cd; border-radius: 8px; border-left: 4px solid #ffc107;">
                            ‚ö†Ô∏è <strong>‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ß‡∫¥‡∫ó‡∫µ‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å</strong>
                        </div>
                    </div>
                </div>
            </div>

            <div class="debt-modal-actions" id="editDebtorActions" style="display: none;">
                <button type="button" class="debt-action-btn debt-cancel-btn" onclick="closeEditDebtorModal()">‚ùå ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å</button>
                <button type="button" class="debt-action-btn debt-save-btn" onclick="saveEditedDebtDataWithAction()" id="editDebtorSaveBtn" disabled>üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit Action Options
    addEditActionOptionsStyles();
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    setTimeout(() => {
        const customerInput = document.getElementById('editDebtorCustomerName');
        if (customerInput) customerInput.focus();
    }, 300);
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
function selectEditActionOption(option) {
    console.log('üîò ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:', option);
    
    // Reset ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    document.querySelectorAll('.edit-action-option-card').forEach(card => {
        card.classList.remove('selected');
    });
    
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà
    const selectedCard = document.getElementById(`editActionOption${option}`);
    if (selectedCard) {
        selectedCard.classList.add('selected');
    }
    
    selectedEditActionOption = option;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    updateEditDebtorSaveButtonWithAction();
    
    console.log('‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:', option);
}
// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
function updateEditExtraAmount() {
    const extraAmountInput = document.getElementById('editExtraAmount');
    const extraAmount = parseFloat(extraAmountInput.value) || 0;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    updateNewItemsTable();
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß)
    updateEditDebtorSaveButton();
    
    console.log('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:', extraAmount);
}


// ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function searchEditDebtors(searchValue) {
    const suggestions = document.getElementById('editDebtorSuggestions');
    if (!suggestions) return;
    
    if (!searchValue.trim()) {
        suggestions.style.display = 'none';
        return;
    }
    
    const filteredDebtors = editDebtorsList.filter(debtor => 
        debtor.customerName && 
        debtor.customerName.toLowerCase().includes(searchValue.toLowerCase())
    );
    
    if (filteredDebtors.length === 0) {
        suggestions.innerHTML = '<div class="autocomplete-suggestion" style="color: #999; font-style: italic;">‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        suggestions.style.display = 'block';
        return;
    }
    
    // *** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô - ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡πà‡∏≠‡∏ö‡∏¥‡∏• ***
    const customerGroups = {};
    
    filteredDebtors.forEach(debtor => {
        const customerName = debtor.customerName;
        const billNumber = debtor.billNumber; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå N
        
        if (!customerGroups[customerName]) {
            customerGroups[customerName] = {
                processedBills: new Set(), // ‡πÄ‡∏Å‡πá‡∏ö billNumber ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß
                totalAmount: 0,
                uniqueBillCount: 0,
                debts: []
            };
        }
        
        // *** ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏¥‡∏• ***
        if (billNumber && !customerGroups[customerName].processedBills.has(billNumber)) {
            const billAmount = parseFloat(debtor.payAmount) || 0; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M - ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            customerGroups[customerName].processedBills.add(billNumber);
            customerGroups[customerName].totalAmount += billAmount;
            customerGroups[customerName].uniqueBillCount++;
            
            console.log(`üí∞ ‡∏ö‡∏¥‡∏• ${billNumber} ‡∏Ç‡∏≠‡∏á ${customerName}: ${billAmount} (‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)`);
        } else if (billNumber && customerGroups[customerName].processedBills.has(billNumber)) {
            console.log(`‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏° ‡∏ö‡∏¥‡∏• ${billNumber} ‡∏Ç‡∏≠‡∏á ${customerName} (‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß)`);
        }
        
        customerGroups[customerName].debts.push(debtor);
    });
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß:', customerGroups);
    
    suggestions.innerHTML = Object.keys(customerGroups).map(customerName => {
        const group = customerGroups[customerName];
        const uniqueBillCount = group.uniqueBillCount;
        const totalAmount = group.totalAmount;
        
        console.log(`üë§ ${customerName}: ${uniqueBillCount} ‡∏ö‡∏¥‡∏•, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${totalAmount}`);
        
        return `
            <div class="autocomplete-suggestion" onclick="selectEditCustomer('${customerName}')">
                <strong>${customerName}</strong><br>
                <small style="color: #666;">
                    üìã ${uniqueBillCount} ‡∫ö‡∫¥‡∫ô | üí∞ ${formatCurrency(totalAmount)}
                </small>
            </div>
        `;
    }).join('');
    
    suggestions.style.display = 'block';
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏π‡∏Å‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function showAllEditDebtors() {
    const suggestions = document.getElementById('editDebtorSuggestions');
    if (!suggestions) return;
    
    const unpaidDebtors = editDebtorsList;
    
    if (unpaidDebtors.length === 0) {
        suggestions.innerHTML = '<div class="autocomplete-suggestion" style="color: #999; font-style: italic;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        suggestions.style.display = 'block';
        return;
    }
    
    // *** ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô - ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡πà‡∏≠‡∏ö‡∏¥‡∏• ***
    const customerGroups = {};
    
    unpaidDebtors.forEach(debtor => {
        const customerName = debtor.customerName;
        const billNumber = debtor.billNumber; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå N
        
        if (!customerGroups[customerName]) {
            customerGroups[customerName] = {
                processedBills: new Set(), // ‡πÄ‡∏Å‡πá‡∏ö billNumber ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß
                totalAmount: 0,
                uniqueBillCount: 0,
                debts: []
            };
        }
        
        // *** ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏¥‡∏• ***
        if (billNumber && !customerGroups[customerName].processedBills.has(billNumber)) {
            const billAmount = parseFloat(debtor.payAmount) || 0; // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M - ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            customerGroups[customerName].processedBills.add(billNumber);
            customerGroups[customerName].totalAmount += billAmount;
            customerGroups[customerName].uniqueBillCount++;
            
            console.log(`üí∞ ‡∏ö‡∏¥‡∏• ${billNumber} ‡∏Ç‡∏≠‡∏á ${customerName}: ${billAmount} (‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)`);
        } else if (billNumber && customerGroups[customerName].processedBills.has(billNumber)) {
            console.log(`‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏° ‡∏ö‡∏¥‡∏• ${billNumber} ‡∏Ç‡∏≠‡∏á ${customerName} (‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß)`);
        }
        
        customerGroups[customerName].debts.push(debtor);
    });
    
    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß:', customerGroups);
    
    suggestions.innerHTML = Object.keys(customerGroups).map(customerName => {
        const group = customerGroups[customerName];
        const uniqueBillCount = group.uniqueBillCount;
        const totalAmount = group.totalAmount;
        
        console.log(`üë§ ${customerName}: ${uniqueBillCount} ‡∏ö‡∏¥‡∏•, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${totalAmount}`);
        
        return `
            <div class="autocomplete-suggestion" onclick="selectEditCustomer('${customerName}')">
                <strong>${customerName}</strong><br>
                <small style="color: #666;">
                    üìã ${uniqueBillCount} ‡∫ö‡∫¥‡∫ô | üí∞ ${formatCurrency(totalAmount)}
                </small>
            </div>
        `;
    }).join('');
    
    suggestions.style.display = 'block';
}

// ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function selectEditCustomer(customerName) {
    const customerInput = document.getElementById('editDebtorCustomerName');
    const suggestions = document.getElementById('editDebtorSuggestions');
    const billSection = document.getElementById('editBillSelectionSection');
    
    if (customerInput) customerInput.value = customerName;
    if (suggestions) suggestions.style.display = 'none';
    
    showEditCustomerBills(customerName);
    if (billSection) billSection.style.display = 'block';
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏¥‡∏•‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function showEditCustomerBills(customerName) {
    const billsList = document.getElementById('editBillsList');
    if (!billsList) return;
    
    const customerDebts = editDebtorsList.filter(debt => 
        debt.customerName === customerName
    );
    
    if (customerDebts.length === 0) {
        billsList.innerHTML = '<div style="color: #999; text-align: center; padding: 20px;">‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ö‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ</div>';
        return;
    }
    
    // ‡∏´‡∏≤ billNumber ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
    const uniqueBillNumbers = [...new Set(customerDebts.map(debt => debt.billNumber))];
    
    const billsArray = uniqueBillNumbers.map(billNumber => {
        const billItems = editDebtorsList.filter(debt => debt.billNumber === billNumber);
        const firstItem = billItems[0];
        
        return {
            billNumber: billNumber,
            customerName: firstItem.customerName,
            phoneNumber: firstItem.phoneNumber,
            debtDays: firstItem.debtDays,
            totalShopAmount: parseFloat(firstItem.shopTotalAmount) || 0,
            totalPayAmount: parseFloat(firstItem.customerTotalAmount) || 0,
            items: billItems,
            status: firstItem.status,
            debtDate: firstItem.debtDate
        };
    }).sort((a, b) => new Date(b.debtDate) - new Date(a.debtDate));
    
    billsList.innerHTML = billsArray.map((bill, index) => {
        return `
            <div class="bill-item" style="border: 2px solid #e1e5e9; border-radius: 15px; padding: 20px 40px; margin-bottom: 15px; cursor: pointer; transition: all 0.3s ease; background: white;" 
                 onclick="selectEditBill(${index})" id="editBill_${index}">
                
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                    <div>
                        <h3 style="margin: 0; color: #9c27b0; font-size: 1.3rem;">üìã ${bill.billNumber}</h3>
                        <div style="color: #666; font-size: 0.9rem; margin-top: 5px;">
                            ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏¥‡∏•‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                        </div>
                    </div>
                    <div style="text-align: right;">
                        <div style="color: #dc3545; font-weight: bold;">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${bill.status}</div>
                        <div style="color: #666; font-size: 0.9rem;">${bill.items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
                    <div style="background: #fff3cd; padding: 10px; border-radius: 8px;">
                        <div style="font-size: 0.8rem; color: #856404;">üí∞ ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢</div>
                        <div style="font-size: 1.2rem; font-weight: bold; color: #856404;">${formatCurrency(bill.totalPayAmount)}</div>
                    </div>
                    <div style="background: #f8d7da; padding: 10px; border-radius: 8px;">
                        <div style="font-size: 0.8rem; color: #721c24;">üìÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ</div>
                        <div style="font-size: 1.2rem; font-weight: bold; color: #721c24;">${bill.debtDays} ‡∏ß‡∏±‡∏ô</div>
                    </div>
                </div>
            </div>
        `;
    }).join('');
    
    window.currentEditCustomerBills = billsArray;
}

// ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏¥‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç  
function selectEditBill(billIndex) {
    // Clear previous selection
    const billItems = document.querySelectorAll('#editBillsList .bill-item');
    billItems.forEach(item => {
        item.style.borderColor = '#e1e5e9';
        item.style.backgroundColor = 'white';
    });
    
    // Highlight selected bill
    const selectedBill = document.getElementById(`editBill_${billIndex}`);
    if (selectedBill) {
        selectedBill.style.borderColor = '#9c27b0';
        selectedBill.style.backgroundColor = '#f8f9ff';
    }
    
    // Get bill data
    const billData = window.currentEditCustomerBills[billIndex];
    selectedEditDebtData = billData;
    
    // Reset new items
    editDebtNewItems = [];
    editItemCounter = 1;
    
    // Show debt details
    showEditDebtDetails(billData);
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function showEditDebtDetails(billData) {
    const detailsSection = document.getElementById('editDebtDetailsSection');
    const actionsSection = document.getElementById('editDebtorActions');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
    displayExistingDebtData(billData);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤)
    updateNewItemsTable();
    
    // Show sections
    if (detailsSection) detailsSection.style.display = 'block';
    if (actionsSection) actionsSection.style.display = 'flex';
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô
    setTimeout(() => {
        const barcodeInput = document.getElementById('editNewItemBarcode');
        if (barcodeInput) barcodeInput.focus();
    }, 300);
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayExistingDebtData ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô displayExistingDebtData ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

function displayExistingDebtData(billData) {
    const container = document.getElementById('existingItemsTable');
    if (!container) return;
    
    let tableHTML = `
        <table style="width: 100%; border-collapse: collapse; font-size: 0.9rem;">
            <thead>
                <tr style="background: #dc3545; color: white;">
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡ªú‡ªà‡∫ß‡∫ç</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡ªú‡ªâ‡∫≤‡∫Æ‡ªâ‡∫≤‡∫ô</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ä‡∫∑‡ªâ‡ªÑ‡∫õ‡∫Ç‡∫≤‡∫ç</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫Æ‡∫π‡∫ö</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞</th>
                </tr>
            </thead>
            <tbody>
    `;
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ú‡∏•‡∏£‡∏ß‡∏°)
    let originalTotalFromColumnM = 0;
    
    billData.items.forEach((item, index) => {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
        const barcode = item.barcode || ''; // B
        const itemName = item.itemName || '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'; // C
        const unit = item.unit || '‡∏ä‡∏¥‡πâ‡∏ô'; // D
        const quantity = parseFloat(item.quantity) || 1; // F
        const shopPrice = parseFloat(item.shopPrice) || 0; // G
        const customerPrice = parseFloat(item.customerPrice) || 0; // H
        const totalShopPrice = parseFloat(item.totalShopPrice) || 0; // J
        const totalCustomerPrice = parseFloat(item.totalCustomerPrice) || 0; // K
        const debtShopAmount = parseFloat(item.shopAmount) || 0; // L
        const debtCustomerAmount = parseFloat(item.payAmount) || 0; // M
        const image = item.image || ''; // I
        
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏°
        if (index === 0) {
            originalTotalFromColumnM = debtCustomerAmount;
        }
        
        tableHTML += `
            <tr style="background: #f8f9fa;">
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${index + 1}</td>
                <td style="border: 1px solid #ddd; padding: 8px; font-family: monospace; font-size: 0.8rem;">${barcode}</td>
                <td style="border: 1px solid #ddd; padding: 8px; font-weight: bold;">${itemName}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${unit}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${quantity}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(shopPrice)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(customerPrice)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(totalShopPrice)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(totalCustomerPrice)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(debtShopAmount)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(debtCustomerAmount)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">
                    ${image ? 
                        `<img src="${image}" alt="${itemName}" style="width: 40px; height: 40px; object-fit: cover; border-radius: 4px;">` : 
                        '<div style="width: 40px; height: 40px; background: #f0f0f0; border-radius: 4px; display: flex; align-items: center; justify-content: center; font-size: 0.7rem;">üì∑</div>'
                    }
                </td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">
                    <span style="background: #dc3545; color: white; padding: 2px 8px; border-radius: 4px; font-size: 0.8rem;">üîí ‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç</span>
                </td>
            </tr>
        `;
    });
    
    tableHTML += `
            </tbody>
            <tfoot>
                <tr style="background: #dc3545; color: white; font-weight: bold;">
                    <td colspan="11" style="border: 1px solid #ddd; padding: 8px; text-align: right;">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏° (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå M):</td>
                    <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(originalTotalFromColumnM)}</td>
                    <td style="border: 1px solid #ddd; padding: 8px;"></td>
                </tr>
            </tfoot>
        </table>
    `;
    
    container.innerHTML = tableHTML;
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    window.originalTotalFromColumnM = originalTotalFromColumnM;
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô
function handleEditBarcodeInput(event) {
    if (event.key === 'Enter') {
        event.preventDefault();
        addNewItemToEdit();
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç

function addNewItemToEdit() {
    const barcodeInput = document.getElementById('editNewItemBarcode');
    if (!barcodeInput) return;
    
    const barcode = barcodeInput.value.trim();
    if (!barcode) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤', 'error');
        return;
    }
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å
    const item = findItemByBarcode(barcode);
    if (!item) {
        showMessage('‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫•‡∫∞‡∫´‡∫±‡∫î: ' + barcode, 'error');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingItem = editDebtNewItems.find(i => i.barcode === barcode);
    
    if (existingItem) {
        existingItem.quantity += 1;
        existingItem.totalPrice = existingItem.quantity * existingItem.price;
        showMessage(`‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô "${existingItem.name}"`, 'success');
    } else {
        const costInfo = findCostByBarcode(barcode);
        
        const newItem = {
            id: editItemCounter++,
            barcode: barcode,
            name: item.columnB || '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ä‡∫∑‡ªà',
            unit: item.columnH || '‡∫ä‡∫¥‡ªâ‡∫ô',
            quantityPerPack: parseFloat(item.columnI) || 1,
            price: parseFloat(item.columnC) || 0,
            quantity: 1,
            image: item.columnK || '',
            totalPrice: parseFloat(item.columnC) || 0,
            profit: costInfo ? (parseFloat(costInfo.columnP) || 0) : 0,
            costPrice: costInfo ? (parseFloat(costInfo.columnN) || 0) : 0
        };
        
        editDebtNewItems.push(newItem);
        showMessage(`‡ªÄ‡∫û‡∫µ‡ªà‡∫° "${item.columnB}" ‡ªÉ‡∫™‡ªà‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß`, 'success');
    }
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    updateNewItemsTable();
    
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÅ‡∏•‡∏∞ focus ‡∏Å‡∏•‡∏±‡∏ö
    barcodeInput.value = '';
    barcodeInput.focus();
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß)
    updateEditDebtorSaveButton();
}

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà

function updateNewItemsTable() {
    const container = document.getElementById('newItemsTable');
    if (!container) return;
    
    if (editDebtNewItems.length === 0) {
        container.innerHTML = `
            <div style="text-align: center; padding: 20px; color: #666; border: 2px dashed #ccc; border-radius: 10px;">
                <div style="font-size: 3rem; margin-bottom: 10px;">üì¶</div>
                <div>‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡ªù‡ªà</div>
                <small>‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</small>
            </div>
        `;
        return;
    }
    
    let tableHTML = `
        <table style="width: 100%; border-collapse: collapse; font-size: 0.9rem;">
            <thead>
                <tr style="background: #28a745; color: white;">
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫≤‡∫Ñ‡∫≤</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫•‡∫ß‡∫°</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫Æ‡∫π‡∫ö‡∫û‡∫≤‡∫ö</th>
                    <th style="border: 1px solid #ddd; padding: 8px;">‡∫à‡∫±‡∫î‡∫Å‡∫≤‡∫ô</th>
                </tr>
            </thead>
            <tbody>
    `;
    
    let totalNewAmount = 0;
    
    editDebtNewItems.forEach((item, index) => {
        totalNewAmount += item.totalPrice;
        
        tableHTML += `
            <tr style="background: #e8f5e8;">
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${index + 1}</td>
                <td style="border: 1px solid #ddd; padding: 8px; font-family: monospace; font-size: 0.8rem;">${item.barcode}</td>
                <td style="border: 1px solid #ddd; padding: 8px;">${item.name}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">${item.unit}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">
                    <input type="number" value="${item.quantity}" min="1" 
                           style="width: 60px; padding: 4px; border: 1px solid #ccc; border-radius: 4px; text-align: center;"
                           onchange="updateEditItemQuantity(${item.id}, this.value)">
                </td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(item.price)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(item.totalPrice)}</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">
                    ${item.image ? 
                        `<img src="${item.image}" alt="${item.name}" style="width: 50px; height: 50px; object-fit: cover; border-radius: 8px; cursor: pointer;" onclick="showLargeImage('${item.image}', '${item.name}')">` : 
                        '<div style="width: 50px; height: 50px; background: #f0f0f0; border-radius: 8px; display: flex; align-items: center; justify-content: center; font-size: 1.5rem; margin: 0 auto;">üì∑</div>'
                    }
                </td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: center;">
                    <button onclick="removeEditItem(${item.id})" 
                            style="background: #dc3545; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer;">
                        üóëÔ∏è ‡∫•‡∫ª‡∫ö
                    </button>
                </td>
            </tr>
        `;
    });
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    const originalAmount = window.originalTotalFromColumnM || 0;
    const extraAmount = parseFloat(document.getElementById('editExtraAmount')?.value) || 0;
    const finalTotal = originalAmount + totalNewAmount + extraAmount;
    
    tableHTML += `
            </tbody>
            <tfoot>
                <tr style="background: #28a745; color: white; font-weight: bold;">
                    <td colspan="6" style="border: 1px solid #ddd; padding: 8px; text-align: right;">‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà:</td>
                    <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(totalNewAmount)}</td>
                    <td colspan="2" style="border: 1px solid #ddd; padding: 8px;"></td>
                </tr>
                <tr style="background: #17a2b8; color: white; font-weight: bold;">
                    <td colspan="6" style="border: 1px solid #ddd; padding: 8px; text-align: right;">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏î‡∏¥‡∏°:</td>
                    <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(originalAmount)}</td>
                    <td colspan="2" style="border: 1px solid #ddd; padding: 8px;"></td>
                </tr>`;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ß‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å
    if (extraAmount > 0) {
        tableHTML += `
                <tr style="background: #ffc107; color: #856404; font-weight: bold;">
                    <td colspan="6" style="border: 1px solid #ddd; padding: 8px; text-align: right;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</td>
                    <td style="border: 1px solid #ddd; padding: 8px; text-align: right;">${formatCurrency(extraAmount)}</td>
                    <td colspan="2" style="border: 1px solid #ddd; padding: 8px;"></td>
                </tr>`;
    }
    
    tableHTML += `
                <tr style="background: #007bff; color: white; font-weight: bold; font-size: 1.1rem;">
                    <td colspan="6" style="border: 1px solid #ddd; padding: 10px; text-align: right;">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏î‡∏¥‡∏° + ‡πÉ‡∏´‡∏°‡πà + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°):</td>
                    <td style="border: 1px solid #ddd; padding: 10px; text-align: right;">${formatCurrency(finalTotal)}</td>
                    <td colspan="2" style="border: 1px solid #ddd; padding: 10px;"></td>
                </tr>
            </tfoot>
        </table>
    `;
    
    container.innerHTML = tableHTML;
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    window.finalTotalAmount = finalTotal;
}

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
function updateEditItemQuantity(itemId, newQuantity) {
    const item = editDebtNewItems.find(i => i.id === itemId);
    if (!item) return;
    
    const quantity = parseInt(newQuantity) || 1;
    item.quantity = quantity;
    item.totalPrice = item.quantity * item.price;
    
    updateNewItemsTable();
    updateEditDebtorSaveButton(); // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
}

// ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
function removeEditItem(itemId) {
    const itemIndex = editDebtNewItems.findIndex(i => i.id === itemId);
    if (itemIndex === -1) return;
    
    const itemName = editDebtNewItems[itemIndex].name;
    editDebtNewItems.splice(itemIndex, 1);
    
    updateNewItemsTable();
    updateEditDebtorSaveButton(); // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß
    
    showMessage(`‡∫•‡∫ª‡∫ö "${itemName}" ‡∫≠‡∫≠‡∫Å‡∫à‡∫≤‡∫Å‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß`, 'success');
}

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å

function updateEditDebtorSaveButton() {
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    const actionSection = document.getElementById('editActionOptionsSection');
    
    if (!saveBtn) return;
    
    const hasNewItems = editDebtNewItems.length > 0;
    const extraAmount = parseFloat(document.getElementById('editExtraAmount')?.value) || 0;
    const hasExtraAmount = extraAmount > 0;
    const hasChanges = hasNewItems || hasExtraAmount;
    
    if (hasChanges) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
        if (actionSection) {
            actionSection.style.display = 'block';
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (selectedEditActionOption) {
            updateEditDebtorSaveButtonWithAction();
        } else {
            saveBtn.disabled = true;
            saveBtn.style.opacity = '0.6';
            saveBtn.style.background = '#ccc';
            saveBtn.innerHTML = 'üíæ ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô';
        }
    } else {
        // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
        if (actionSection) {
            actionSection.style.display = 'none';
        }
        
        selectedEditActionOption = null;
        saveBtn.disabled = true;
        saveBtn.style.opacity = '0.6';
        saveBtn.style.background = '#ccc';
        saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç';
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
function updateEditDebtorSaveButtonWithAction() {
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    if (!saveBtn || !selectedEditActionOption) return;
    
    const hasNewItems = editDebtNewItems.length > 0;
    const extraAmount = parseFloat(document.getElementById('editExtraAmount')?.value) || 0;
    const hasExtraAmount = extraAmount > 0;
    
    saveBtn.disabled = false;
    saveBtn.style.opacity = '1';
    saveBtn.style.cursor = 'pointer';
    
    let buttonText = '';
    let buttonColor = '';
    
    if (selectedEditActionOption === 1) {
        buttonColor = 'linear-gradient(135deg, #6f42c1 0%, #563d7c 100%)';
        buttonText = 'üíæüñ®Ô∏è ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô';
    } else if (selectedEditActionOption === 2) {
        buttonColor = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
        buttonText = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    if (hasNewItems && hasExtraAmount) {
        buttonText += ` (${editDebtNewItems.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô + ‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫û‡∫µ‡ªà‡∫°)`;
    } else if (hasNewItems) {
        buttonText += ` (${editDebtNewItems.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡ªÉ‡ªù‡ªà)`;
    } else if (hasExtraAmount) {
        buttonText += ` (‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫û‡∫µ‡ªà‡∫° ${formatCurrency(extraAmount)})`;
    }
    
    saveBtn.style.background = buttonColor;
    saveBtn.innerHTML = buttonText;
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
function saveEditedDebtDataWithAction() {
    if (!selectedEditDebtData || (editDebtNewItems.length === 0 && !document.getElementById('editExtraAmount')?.value)) {
        showMessage('‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Å‡∫≤‡∫ô‡ªÄ‡∫õ‡∫ª‡ªà‡∫≤‡ªÅ‡∫õ‡∫á‡∫ó‡∫µ‡ªà‡∫à‡∫∞‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return;
    }
    
    if (!selectedEditActionOption) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Å‡∫≤‡∫ô‡∫î‡ªç‡∫≤‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = true;
        if (selectedEditActionOption === 1) {
            saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô...';
        } else {
            saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á WhatsApp...';
        }
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
    const originalTotal = window.originalTotalFromColumnM || 0;
    const newItemsTotal = editDebtNewItems.reduce((sum, item) => sum + item.totalPrice, 0);
    const extraAmount = parseFloat(document.getElementById('editExtraAmount')?.value) || 0;
    const grandTotal = originalTotal + newItemsTotal + extraAmount;
    
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    const editData = {
        originalBillNumber: selectedEditDebtData.billNumber,
        customerName: selectedEditDebtData.customerName,
        phoneNumber: selectedEditDebtData.phoneNumber,
        newItems: editDebtNewItems.map(item => ({
            barcode: item.barcode,
            itemName: item.name,
            unit: item.unit,
            quantity: item.quantity,
            shopPrice: item.price,
            customerPrice: item.price,
            image: item.image,
            totalShopPrice: item.totalPrice,
            totalCustomerPrice: item.totalPrice
        })),
        originalAmount: originalTotal,
        newItemsAmount: newItemsTotal,
        extraAmount: extraAmount,
        finalGrandTotal: grandTotal,
        actionType: selectedEditActionOption
    };
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
    window.currentEditDebtData = editData;
    
    // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô)
    if (selectedEditActionOption === 1) {
        // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 1: Print ‡∏Å‡πà‡∏≠‡∏ô
        try {
            generateEditDebtPrintDocument(editData);
            showMessage('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...', 'success');
            
            setTimeout(() => {
                createEditDebtPrintConfirmDialog(editData);
            }, 1000);
            
        } catch (error) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô:', error);
            resetEditSaveButton();
            showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
        }
        
    } else if (selectedEditActionOption === 2) {
        // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà 2: WhatsApp ‡∏Å‡πà‡∏≠‡∏ô
        try {
            const whatsappMessage = generateEditDebtWhatsAppContent(editData);
            sendToWhatsApp(whatsappMessage, editData.phoneNumber);
            
            setTimeout(() => {
                createEditDebtWhatsAppConfirmDialog(editData);
            }, 2000);
            
        } catch (error) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp:', error);
            resetEditSaveButton();
            showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
        }
    }
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏™‡∏£‡πâ‡∏≤‡∏á Dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô
function createEditDebtPrintConfirmDialog(editData) {
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10002;
    `;
    
    dialog.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 500px; text-align: center; font-family: Arial, sans-serif;">
            <div style="font-size: 3rem; margin-bottom: 20px;">üñ®Ô∏è</div>
            <h3 style="color: #6f42c1; margin-bottom: 15px;">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h3>
            <p style="margin-bottom: 25px; line-height: 1.5;">
                ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß<br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡πâ‡∏ô‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            </p>
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="confirmEditDebtPrintSuccess()" 
                        style="background: #28a745; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚úÖ ‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                </button>
                <button onclick="confirmEditDebtPrintFailed()" 
                        style="background: #dc3545; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚ùå ‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(dialog);
    window.currentEditDebtPrintDialog = dialog;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏™‡∏£‡πâ‡∏≤‡∏á Dialog ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô WhatsApp
function createEditDebtWhatsAppConfirmDialog(editData) {
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
        background: rgba(0,0,0,0.8); display: flex; align-items: center; 
        justify-content: center; z-index: 10002;
    `;
    
    dialog.innerHTML = `
        <div style="background: white; border-radius: 15px; padding: 30px; max-width: 500px; text-align: center; font-family: Arial, sans-serif;">
            <div style="font-size: 3rem; margin-bottom: 20px;">üì±</div>
            <h3 style="color: #25D366; margin-bottom: 15px;">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp</h3>
            <p style="margin-bottom: 25px; line-height: 1.5;">
                ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î WhatsApp ‡πÅ‡∏•‡πâ‡∏ß<br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            </p>
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="confirmEditDebtWhatsAppSuccess()" 
                        style="background: #25D366; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚úÖ ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                </button>
                <button onclick="confirmEditDebtWhatsAppFailed()" 
                        style="background: #dc3545; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-weight: bold;">
                    ‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(dialog);
    window.currentEditDebtWhatsAppDialog = dialog;
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmEditDebtPrintSuccess() {
    if (window.currentEditDebtPrintDialog) {
        document.body.removeChild(window.currentEditDebtPrintDialog);
        window.currentEditDebtPrintDialog = null;
    }
    
    if (window.currentEditDebtData) {
        proceedToSaveEditDebtData(window.currentEditDebtData);
        window.currentEditDebtData = null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmEditDebtPrintFailed() {
    if (window.currentEditDebtPrintDialog) {
        document.body.removeChild(window.currentEditDebtPrintDialog);
        window.currentEditDebtPrintDialog = null;
    }
    
    resetEditSaveButton();
    showMessage('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏õ‡∏¥‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'error');
    window.currentEditDebtData = null;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmEditDebtWhatsAppSuccess() {
    if (window.currentEditDebtWhatsAppDialog) {
        document.body.removeChild(window.currentEditDebtWhatsAppDialog);
        window.currentEditDebtWhatsAppDialog = null;
    }
    
    if (window.currentEditDebtData) {
        proceedToSaveEditDebtData(window.currentEditDebtData);
        window.currentEditDebtData = null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô WhatsApp ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
function confirmEditDebtWhatsAppFailed() {
    if (window.currentEditDebtWhatsAppDialog) {
        document.body.removeChild(window.currentEditDebtWhatsAppDialog);
        window.currentEditDebtWhatsAppDialog = null;
    }
    
    resetEditSaveButton();
    showMessage('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á WhatsApp ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á', 'error');
    window.currentEditDebtData = null;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Print/WhatsApp ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
function proceedToSaveEditDebtData(editData) {
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    if (saveBtn) {
        saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫•‡∫ª‡∫á Sheet...';
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ Google Sheets
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                showMessage(`‚úÖ ${result.message}`, 'success');
                
                setTimeout(() => {
                    closeEditDebtorModal();
                    loadDebtorsList(); // Reload debtors list
                }, 2000);
                
            } else {
                showMessage(`‚ùå ${result.message}`, 'error');
                resetEditSaveButton();
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', error);
            showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ${error.message || error}`, 'error');
            resetEditSaveButton();
        })
        .saveEditedDebtorData(editData);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function generateEditDebtPrintDocument(editData, saveResult) {
    console.log('üñ®Ô∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏µ‡πâ...');
    
    const currentDate = new Date().toLocaleDateString('lo-LA');
    const printId = `EDIT_${Date.now()}`;
    
    let printContent = `
        <div style="font-family: 'Noto Sans Lao', Arial, sans-serif; margin: 20px; background: white; padding: 20px;">
            <div style="text-align: center; margin-bottom: 20px; font-weight: bold; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞ ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            
            <div style="margin-bottom: 15px; font-size: 14px;">
                ‚ñ∂ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç: ${printId}<br>
                ‚ñ∂ ‡ªÄ‡∫•‡∫Å‡∫ö‡∫¥‡∫ô‡ªÄ‡∫Å‡∫ª‡ªà‡∫≤: ${editData.originalBillNumber}<br>
                ‚ñ∂ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${editData.customerName}<br>
                ‚ñ∂ ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó: ${editData.phoneNumber}<br>
                ‚ñ∂ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞: ${currentDate}
            </div>
            
            <div style="text-align: center; font-weight: bold; margin: 15px 0;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞ &gt;&gt;&gt;
            </div>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 2px solid #000;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫ç‡∫≠‡∫î‡ªÄ‡∫î‡∫µ‡∫°</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫•‡∫ß‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫´‡ªà‡∫°(‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô+‡∫ö‡ªç‡ªà‡ªÑ‡∫î‡ªâ‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô)</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0;">‡∫ç‡∫≠‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞(‡ªÉ‡ªù‡ªà+‡ªÄ‡∫Å‡∫ª‡ªà‡∫≤)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">‡∫ç‡∫≠‡∫î‡∫´‡∫ô‡∫µ‡ªâ‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${formatCurrency(editData.originalAmount)}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; color: #28a745;">${formatCurrency(editData.newItemsAmount + editData.extraAmount)}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; color: #dc3545; font-weight: bold;">${formatCurrency(editData.finalGrandTotal)}</td>
                    </tr>
                </tbody>
            </table>`;
    
   
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
if (editData.newItems.length > 0) {
    printContent += `
        <div style="margin-top: 20px;">
            <h4 style="color: #28a745;">üì¶ ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÉ‡ªù‡ªà:</h4>
            <table style="width: 100%; border-collapse: collapse; margin: 10px 0; border: 1px solid #28a745;">
                <thead>
                    <tr style="background: #28a745; color: white;">
                        <th style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                        <th style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                        <th style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                        <th style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">‡∫•‡∫≤‡∫Ñ‡∫≤</th>
                        <th style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">‡∫•‡∫ß‡∫°</th>
                    </tr>
                </thead>
                <tbody>`;
    
    editData.newItems.forEach((item, index) => {
        printContent += `
                    <tr>
                        <td style="border: 1px solid #28a745; padding: 6px; text-align: center; font-size: 11px;">${index + 1}</td>
                        <td style="border: 1px solid #28a745; padding: 6px; font-size: 11px;">${item.itemName}</td>
                        <td style="border: 1px solid #28a745; padding: 6px; text-align: center; font-size: 11px;">${item.quantity}</td>
                        <td style="border: 1px solid #28a745; padding: 6px; text-align: center; font-size: 11px;">${formatCurrency(item.shopPrice)}</td>
                        <td style="border: 1px solid #28a745; padding: 6px; text-align: center; font-size: 11px;">${formatCurrency(item.totalShopPrice)}</td>
                    </tr>`;
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î
    printContent += `
                    <tr style="background: #34ce57; color: white; font-weight: bold;">
                        <td colspan="4" style="border: 1px solid #28a745; padding: 8px; text-align: center; font-size: 12px;">‡∫•‡∫ß‡∫°‡∫ç‡∫≠‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡ªù‡ªà‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</td>
                        <td style="border: 1px solid #28a745; padding: 8px; text-align: center; font-size: 12px;">${formatCurrency(editData.newItemsAmount)}</td>
                    </tr>
                </tbody>
            </table>
        </div>`;
}
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (editData.extraAmount > 0) {
        printContent += `
            <div style="margin-top: 15px; padding: 10px; background: #fff3cd; border-radius: 8px;">
                <strong>üí∞ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫≠‡∫ª‡∫≤‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫ö‡ªç‡ªà‡ªÑ‡∫î‡ªâ‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô: ${formatCurrency(editData.extraAmount)}</strong>
            </div>`;
    }
    
    printContent += `
            <div style="text-align: center; margin-top: 20px; font-weight: bold; border-top: 2px solid #000; padding-top: 10px;">
                &lt;&lt;&lt; ‡∫Ç‡ªç‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô &gt;&gt;&gt;
            </div>
        </div>`;
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô
    const printWindow = window.open('', '_blank');
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
    setTimeout(() => printWindow.close(), 1000);
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function sendEditDebtWhatsAppMessage(editData, saveResult) {
    console.log('üì± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡∏µ‡πâ...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
    const whatsappMessage = generateEditDebtWhatsAppContent(editData);
    
    // ‡∏™‡πà‡∏á WhatsApp
    sendToWhatsApp(whatsappMessage, editData.phoneNumber);
    
    console.log('‚úÖ ‡∏™‡πà‡∏á WhatsApp ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}
function generateEditDebtWhatsAppContent(editData) {
    const currentDate = new Date().toLocaleDateString('lo-LA');
    
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    let message = `üìã ‡ªÄ‡∫•‡∫Å‡∫ö‡∫¥‡∫ô: ${editData.originalBillNumber}\n`;
    message += `üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤: ${editData.customerName}\n`;
    message += `üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó: ${editData.phoneNumber}\n`;
    message += `üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ‡ªÄ‡∫≠‡∫ª‡∫≤‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°: ${currentDate}\n\n`;
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
    message += `üí∞ ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞:\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `‚û§ ‡∫ç‡∫≠‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡ªÄ‡∫Å‡∫ª‡ªà‡∫≤: ${formatCurrency(editData.originalAmount)}\n`;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏≠‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    if (editData.extraAmount > 0) {
        message += `‚û§ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡ªÄ‡∫≠‡∫ª‡∫≤‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫ö‡ªç‡ªà‡ªÑ‡∫î‡ªâ‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô: ${formatCurrency(editData.extraAmount)}\n`;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
    if (editData.newItems.length > 0) {
        message += `‚û§ ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÉ‡ªù‡ªà (${editData.newItems.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô): ${formatCurrency(editData.newItemsAmount)}\n`;
        
        // ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
        message += `\nüõí ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡ªù‡ªà:\n`;
        editData.newItems.forEach((item, index) => {
            message += `${index + 1}. ${item.itemName}\n`;
            message += `   üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô: ${item.quantity} ${item.unit}\n`;
            message += `   üí∞ ‡∫•‡∫≤‡∫Ñ‡∫≤: ${formatCurrency(item.shopPrice)}\n`;
            message += `   üíµ ‡∫•‡∫ß‡∫°: ${formatCurrency(item.totalShopPrice)}\n`;
            
            // ‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà \n\n ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
            if (index < editData.newItems.length - 1) {
                message += `\n`;
            }
        });
        message += `\n`;
    }
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `‚û§ ‡∫ç‡∫≠‡∫î‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î(‡ªÉ‡ªù‡ªà+‡ªÄ‡∫Å‡∫ª‡ªà‡∫≤): ${formatCurrency(editData.finalGrandTotal)}\n`;
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
    message += `\nüìù ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î: ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÉ‡∫ô‡∫ö‡∫¥‡∫ô‡∫Ç‡∫≠‡∫á‡∫ó‡ªà‡∫≤‡∫ô‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö‡∫Å‡∫≤‡∫ô‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡ªÉ‡∫´‡ªà‡∫°\n`;
    message += `‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫ï‡∫¥‡∫î‡∫ï‡∫≤‡∫°‡∫ç‡∫≠‡∫î‡∫Å‡∫≤‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫á‡∫ä‡ªç‡∫≤‡∫•‡∫∞‡∫î‡ªâ‡∫ß‡∫ç\n\n`;
    
    // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    message += `<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°‡ªÑ‡∫ß‡ªâ‡∫ß‡∫≤‡∫á‡ªÉ‡∫à >>>`;
    
    return message;
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
function resetEditSaveButton() {
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = false;
        
        if (selectedEditActionOption === 1) {
            saveBtn.innerHTML = 'üíæüñ®Ô∏è ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô';
            saveBtn.style.background = 'linear-gradient(135deg, #6f42c1 0%, #563d7c 100%)';
        } else if (selectedEditActionOption === 2) {
            saveBtn.innerHTML = 'üíæüì± ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
            saveBtn.style.background = 'linear-gradient(135deg, #25D366 0%, #128C7E 100%)';
        } else {
            saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç';
            saveBtn.style.background = 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)';
        }
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit Action Options
function addEditActionOptionsStyles() {
    if (document.getElementById('editActionOptionsStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'editActionOptionsStyles';
    style.textContent = `
        .edit-action-option-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 3px solid #e1e5e9;
            border-radius: 20px;
            padding: 25px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 280px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .edit-action-option-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            border-color: #4facfe;
        }
        
        .edit-action-option-card.selected {
            background: linear-gradient(135deg, #2196F3 0%, #1976D2 100%);
            border-color: #2196F3;
            color: white;
            transform: translateY(-5px);
            box-shadow: 0 12px 30px rgba(33, 150, 243, 0.3);
        }
        
        .edit-action-option-card.selected::before {
            content: '‚úì';
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            font-weight: bold;
            color: white;
            background: rgba(255,255,255,0.2);
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .edit-action-option-card .option-icon {
            font-size: 2.5rem;
            margin-bottom: 12px;
            opacity: 0.8;
        }
        
        .edit-action-option-card .option-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 6px;
        }
        
        .edit-action-option-card .option-subtitle {
            font-size: 1rem;
            margin-bottom: 8px;
            opacity: 0.9;
        }
        
        .edit-action-option-card .option-description {
            font-size: 0.85rem;
            opacity: 0.8;
            line-height: 1.3;
        }
        
        .edit-action-option-card.selected .option-icon,
        .edit-action-option-card.selected .option-title,
        .edit-action-option-card.selected .option-subtitle,
        .edit-action-option-card.selected .option-description {
            opacity: 1;
        }
        
        @media (max-width: 768px) {
            .edit-action-option-card {
                width: 100%;
                margin-bottom: 15px;
                padding: 20px 15px;
            }
        }
    `;
    
    document.head.appendChild(style);
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß

function saveEditedDebtData() {
    if (!selectedEditDebtData || (editDebtNewItems.length === 0 && !document.getElementById('editExtraAmount')?.value)) {
        showMessage('‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Å‡∫≤‡∫ô‡ªÄ‡∫õ‡∫ª‡ªà‡∫≤‡ªÅ‡∫õ‡∫á‡∫ó‡∫µ‡ªà‡∫à‡∫∞‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å', 'error');
        return;
    }
    
    const saveBtn = document.getElementById('editDebtorSaveBtn');
    if (saveBtn) {
        saveBtn.disabled = true;
        saveBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...';
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    const originalTotal = window.originalTotalFromColumnM || 0;
    const newItemsTotal = editDebtNewItems.reduce((sum, item) => sum + item.totalPrice, 0);
    const extraAmount = parseFloat(document.getElementById('editExtraAmount')?.value) || 0;
    const grandTotal = originalTotal + newItemsTotal + extraAmount;
    
    console.log('üìä ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:', {
        originalTotal: originalTotal,
        newItemsTotal: newItemsTotal,
        extraAmount: extraAmount,
        grandTotal: grandTotal
    });
    
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    const editData = {
        originalBillNumber: selectedEditDebtData.billNumber,
        customerName: selectedEditDebtData.customerName,
        phoneNumber: selectedEditDebtData.phoneNumber,
        newItems: editDebtNewItems.map(item => ({
            barcode: item.barcode,
            itemName: item.name,
            unit: item.unit,
            quantity: item.quantity,
            shopPrice: item.price,
            customerPrice: item.price,
            image: item.image,
            totalShopPrice: item.totalPrice,
            totalCustomerPrice: item.totalPrice
        })),
        originalAmount: originalTotal,
        newItemsAmount: newItemsTotal,
        extraAmount: extraAmount,
        finalGrandTotal: grandTotal
    };
    
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Google Apps Script
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                showMessage(`‚úÖ ${result.message}`, 'success');
                closeEditDebtorModal();
                
                // Reload debtors list
                loadDebtorsList();
            } else {
                showMessage(`‚ùå ${result.message}`, 'error');
            }
            
            // Reset button
            if (saveBtn) {
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç';
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', error);
            showMessage(`‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ${error.message || error}`, 'error');
            
            // Reset button
            if (saveBtn) {
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'üíæ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Å‡∫≤‡∫ô‡ªÅ‡∫Å‡ªâ‡ªÑ‡∫Ç';
            }
        })
        .saveEditedDebtorData(editData);
}

// ‡∏õ‡∏¥‡∏î Edit Debtor Modal

function closeEditDebtorModal() {
    const modal = document.getElementById('editDebtorModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // Reset ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global
    selectedEditDebtData = null;
    editDebtNewItems = [];
    editItemCounter = 1;
    selectedEditActionOption = null; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà
    window.currentEditCustomerBills = null;
    window.finalTotalAmount = 0;
    
    console.log('üî¥ ‡∏õ‡∏¥‡∏î Edit Debtor Modal ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS Animations ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit Debtor
// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô addEditDebtorStyles ‡πÄ‡∏î‡∏¥‡∏°
function addEditDebtorStyles() {
    if (document.getElementById('editDebtorStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'editDebtorStyles';
    style.textContent = `
        @keyframes editSpin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes editPulse {
            0%, 100% { 
                transform: translate(-50%, -50%) scale(1); 
                opacity: 1; 
            }
            50% { 
                transform: translate(-50%, -50%) scale(1.1); 
                opacity: 0.8; 
            }
        }
        
        @keyframes editDots {
            0%, 20% { opacity: 0; }
            50% { opacity: 1; }
            100% { opacity: 0; }
        }
        
        @keyframes editProgress {
            0% { width: 0%; }
            30% { width: 40%; }
            70% { width: 70%; }
            100% { width: 100%; }
        }
        
        /* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç - ‡πÄ‡∏û‡∏¥‡πà‡∏° animation ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ */
        .edit-loading-spinner {
            animation: editSpin 1.2s linear infinite !important;
        }
        
        /* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç class selector */
        .edit-loading-steps .edit-step-item.loading span:first-child {
            animation: editDots 1.5s infinite !important;
        }
        
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏° animation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal */
        .debt-modal {
            animation: modalFadeInEdit 0.3s ease-out !important;
        }
        
        @keyframes modalFadeInEdit {
            from { 
                opacity: 0; 
                transform: scale(0.9) translateY(50px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
        
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏° animation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal content */
        .debt-modal-content {
            animation: modalSlideUpEdit 0.4s ease-out !important;
        }
        
        @keyframes modalSlideUpEdit {
            from { 
                opacity: 0; 
                transform: scale(0.95) translateY(30px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
    `;
    
    document.head.appendChild(style);
    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Edit Debtor Animations ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ‡∏ã‡πà‡∏≠‡∏ô suggestions ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å
document.addEventListener('click', function(e) {
    const suggestions = document.getElementById('editDebtorSuggestions');
    const customerInput = document.getElementById('editDebtorCustomerName');
    
    if (suggestions && customerInput && 
        !suggestions.contains(e.target) && 
        !customerInput.contains(e.target)) {
        suggestions.style.display = 'none';
    }
});

console.log('‚úèÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');


// ==============================================
// üîß ADD GENERAL BUTTONS TO EXISTING SYSTEM
// ==============================================

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° General ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function addGeneralButtons() {
    const debtButton = document.getElementById('debtButton');
    
    if (!debtButton || !debtButton.parentNode) {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠ parent node');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (generalPrintButton && generalWhatsAppButton) {
        return; // ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° General Print
    if (!generalPrintButton) {
        generalPrintButton = document.createElement('button');
        generalPrintButton.id = 'generalPrintButton';
        generalPrintButton.className = 'debt-button';
        generalPrintButton.style.cssText = `
            background: linear-gradient(135deg, #6f42c1 0%, #563d7c 100%);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            margin-left: 10px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(111, 66, 193, 0.3);
            display: none;
        `;
        generalPrintButton.innerHTML = 'üñ®Ô∏è ‡∫õ‡∫¥‡ªâ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô';
        generalPrintButton.onclick = handleGeneralPrint;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° hover effect
        generalPrintButton.onmouseover = function() {
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 6px 20px rgba(111, 66, 193, 0.4)';
        };
        generalPrintButton.onmouseout = function() {
            this.style.transform = 'translateY(0px)';
            this.style.boxShadow = '0 4px 15px rgba(111, 66, 193, 0.3)';
        };
        
        debtButton.parentNode.appendChild(generalPrintButton);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° General WhatsApp
    if (!generalWhatsAppButton) {
        generalWhatsAppButton = document.createElement('button');
        generalWhatsAppButton.id = 'generalWhatsAppButton';
        generalWhatsAppButton.className = 'debt-button';
        generalWhatsAppButton.style.cssText = `
            background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            margin-left: 10px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(37, 211, 102, 0.3);
            display: none;
        `;
        generalWhatsAppButton.innerHTML = 'üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
        generalWhatsAppButton.onclick = handleGeneralWhatsApp;
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° hover effect
        generalWhatsAppButton.onmouseover = function() {
            this.style.transform = 'translateY(-2px)';
            this.style.boxShadow = '0 6px 20px rgba(37, 211, 102, 0.4)';
        };
        generalWhatsAppButton.onmouseout = function() {
            this.style.transform = 'translateY(0px)';
            this.style.boxShadow = '0 4px 15px rgba(37, 211, 102, 0.3)';
        };
        
        debtButton.parentNode.appendChild(generalWhatsAppButton);
    }
}

// ==============================================
// üîß UPDATE BUTTON VISIBILITY
// ==============================================

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô updateDebtButtonVisibility ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏° General buttons
function updateGeneralButtonsVisibility() {
    console.log('üîç ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° General - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:', selectedItems.size);
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏´‡∏ô‡∏µ‡πâ‡πÄ‡∏î‡∏¥‡∏°
    updateDebtButtonVisibility();
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏° General
    if (selectedItems.size > 0) {
        // ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å - ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° General
        if (!generalPrintButton || !generalWhatsAppButton) {
            addGeneralButtons();
        }
        
        if (generalPrintButton) {
            generalPrintButton.classList.add('show');
            generalPrintButton.style.display = 'inline-block';
            generalPrintButton.innerHTML = `üñ®Ô∏è ‡∫õ‡∫¥‡ªâ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô (${selectedItems.size})`;
        }
        
        if (generalWhatsAppButton) {
            generalWhatsAppButton.classList.add('show');
            generalWhatsAppButton.style.display = 'inline-block';
            generalWhatsAppButton.innerHTML = `üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp (${selectedItems.size})`;
        }
        
        console.log('‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° General');
    } else {
        // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å - ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° General
        if (generalPrintButton) {
            generalPrintButton.classList.remove('show');
            generalPrintButton.style.display = 'none';
        }
        
        if (generalWhatsAppButton) {
            generalWhatsAppButton.classList.remove('show');
            generalWhatsAppButton.style.display = 'none';
        }
        
        console.log('‚ùå ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° General');
    }
}

// ==============================================
// üîß GENERAL PRINT FUNCTION
// ==============================================
function handleGeneralPrint() {
    console.log('üñ®Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô General Print...');
    console.log('üîç selectedItems.size:', selectedItems.size);
    console.log('üîç scannedItems.length:', scannedItems.length);
    
    if (selectedItems.size === 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    printItemsDataCurrency = [];
    
    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    selectedItems.forEach(itemId => {
        const item = scannedItems.find(i => i.id === itemId);
        if (item) {
            printItemsDataCurrency.push({
                id: item.id,
                name: item.name,
                unit: item.unit,
                quantity: item.quantity,
                price: item.price,
                totalPrice: item.totalPrice,
                image: item.image || ''
            });
        }
    });
    
    console.log('üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡πÉ‡∏ô printItemsDataCurrency:', printItemsDataCurrency);
    console.log('üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:', printItemsDataCurrency.length);
    
    if (printItemsDataCurrency.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ');
        showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
        return;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    displayCurrencyChoiceModal();
}

// 2. ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
// ==============================================
function displayCurrencyChoiceModal() {
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingModal = document.getElementById('currencyChoiceModal');
    if (existingModal) {
        document.body.removeChild(existingModal);
    }
    
    const modal = document.createElement('div');
    modal.id = 'currencyChoiceModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10006;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #6f42c1;
                    font-size: 1.5rem;
                    font-weight: bold;
                ">üñ®Ô∏è ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡ªç‡∫≤‡∫•‡∫±‡∫ö‡∫Å‡∫≤‡∫ô‡∫õ‡∫¥‡ªâ‡∫ô</h2>
                <button onclick="closeCurrencyChoiceModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ -->
            <div style="
                color: #666;
                margin-bottom: 30px;
                font-size: 1rem;
                line-height: 1.5;
            ">
                ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫™‡ªç‡∫≤‡∫•‡∫±‡∫ö‡∫Å‡∫≤‡∫ô‡∫õ‡∫¥‡ªâ‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô -->
            <div style="
                display: flex;
                flex-direction: column;
                gap: 15px;
                margin-bottom: 25px;
            ">
                <button onclick="chooseCurrencyType(1)" style="
                    background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                " 
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(76, 175, 80, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(76, 175, 80, 0.3)'">
                    <span style="font-size: 1.5rem;">üáπüá≠</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 1: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó (THB)</span>
                </button>
                
                <button onclick="chooseCurrencyType(2)" style="
                    background: linear-gradient(135deg, #2196f3 0%, #1976d2 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(33, 150, 243, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                "
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(33, 150, 243, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(33, 150, 243, 0.3)'">
                    <span style="font-size: 1.5rem;">üá∫üá∏</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 2: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫î‡ªç‡∫•‡ªà‡∫≤ (USD)</span>
                </button>
                
                <button onclick="chooseCurrencyType(3)" style="
                    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                "
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(255, 107, 107, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(255, 107, 107, 0.3)'">
                    <span style="font-size: 1.5rem;">üá±üá¶</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 3: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡∫µ‡∫ö‡∫•‡∫≤‡∫ß (LAK)</span>
                </button>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î -->
            <button onclick="closeCurrencyChoiceModal()" style="
                background: #6c757d;
                color: white;
                border: none;
                padding: 12px 25px;
                border-radius: 8px;
                cursor: pointer;
                font-size: 1rem;
                transition: all 0.2s ease;
            " onmouseover="this.style.background='#5a6268'"
               onmouseout="this.style.background='#6c757d'">
                ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
            </button>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animations
    addCurrencyChoiceModalStyles();
}
// 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
// ==============================================
function chooseCurrencyType(currencyType) {
    activeCurrencyChoice = currencyType;
    
    if (currencyType === 3) {
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏µ‡∏ö‡∏•‡∏≤‡∏ß - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå
        closeCurrencyChoiceModal();
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô printItemsDataCurrency ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡πÉ‡∏´‡∏°‡πà
        if (!printItemsDataCurrency || printItemsDataCurrency.length === 0) {
            console.log('üîÑ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏µ‡∏ö...');
            printItemsDataCurrency = [];
            
            selectedItems.forEach(itemId => {
                const item = scannedItems.find(i => i.id === itemId);
                if (item) {
                    printItemsDataCurrency.push({
                        id: item.id,
                        name: item.name,
                        unit: item.unit,
                        quantity: item.quantity,
                        price: item.price,
                        totalPrice: item.totalPrice,
                        image: item.image || ''
                    });
                }
            });
            
            console.log('üì¶ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:', printItemsDataCurrency.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå
        if (printItemsDataCurrency.length === 0) {
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', 'error');
            return;
        }
        
        const totalAmount = printItemsDataCurrency.reduce((sum, item) => sum + item.totalPrice, 0);
        const totalQuantity = printItemsDataCurrency.reduce((sum, item) => sum + item.quantity, 0);
        generateGeneralPrintDocument(printItemsDataCurrency, totalAmount, totalQuantity);
    } else {
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏≤‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå - ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
        closeCurrencyChoiceModal();
        displayRateInputModal(currencyType, printItemsDataCurrency); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
    }
}
// 4. ‡πÅ‡∏™‡∏î‡∏á Modal ‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
// ==============================================
function displayRateInputModal(currencyType, itemsData) {
    const currencyInfo = {
        1: { name: '‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó', symbol: '‡∏ø', flag: 'üáπüá≠', digits: '6', formula: '1000 x ‡∫•‡∫≤‡∫Ñ‡∫≤ √∑ ‡ªÄ‡∫•‡∫î' },
        2: { name: '‡∫î‡ªç‡∫•‡ªà‡∫≤', symbol: '$', flag: 'üá∫üá∏', digits: '6-7', formula: '100 x ‡∫•‡∫≤‡∫Ñ‡∫≤ √∑ ‡ªÄ‡∫•‡∫î' }
    };
    
    const info = currencyInfo[currencyType];
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ
    window.tempCurrencyItemsData = itemsData || printItemsDataCurrency;
    
    const modal = document.createElement('div');
    modal.id = 'rateInputModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10007;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #6f42c1;
                    font-size: 1.3rem;
                    font-weight: bold;
                ">${info.flag} ‡ªÉ‡∫™‡ªà‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô${info.name}</h2>
                <button onclick="closeRateInputModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì -->
            <div style="
                background: #f8f9fa;
                padding: 20px;
                border-radius: 15px;
                margin-bottom: 25px;
                text-align: left;
            ">
                <h4 style="color: #333; margin-bottom: 15px; text-align: center;">üìê ‡∫™‡∫π‡∫î‡∫Å‡∫≤‡∫ô‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà</h4>
                <div style="font-family: monospace; background: white; padding: 15px; border-radius: 8px; border: 1px solid #ddd; text-align: center; font-size: 1.1rem; font-weight: bold; color: #6f42c1;">
                    ${info.formula}
                </div>
                <div style="margin-top: 10px; text-align: center; color: #666; font-size: 0.9rem;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫•‡∫≤‡∫Ñ‡∫≤ 10,000 ‡∫Å‡∫µ‡∫ö, ‡ªÄ‡∫•‡∫î ${currencyType === 1 ? '300,000' : '20,000'} = ${currencyType === 1 ? '33.33' : '50.00'} ${info.symbol}
                </div>
            </div>
            
            <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏£‡∏ó -->
            <div style="margin-bottom: 25px; text-align: left;">
                <label style="
                    display: block;
                    font-weight: bold;
                    margin-bottom: 8px;
                    color: #333;
                ">üí± ‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô (‡∫ï‡ªâ‡∫≠‡∫á‡ªÄ‡∫õ‡∫±‡∫ô‡ªÄ‡∫•‡∫Å ${info.digits} ‡∫´‡∫º‡∫±‡∫Å)*</label>
                
                <div style="
                    display: flex;
                    align-items: center;
                    border: 2px solid #e1e5e9;
                    border-radius: 10px;
                    overflow: hidden;
                    transition: border-color 0.3s ease;
                " id="rateContainer">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-right: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">${info.flag}  ${info.symbol} =</div>
                    <input type="number" id="currencyRateInput" placeholder="${currencyType === 1 ? '300000' : '20000'}" style="
                        flex: 1;
                        padding: 12px 15px;
                        border: none;
                        font-size: 1rem;
                        outline: none;
                    " min="1" max="9999999" oninput="validateCurrencyRate(${currencyType})" onkeypress="handleRateEnterKey(event, ${currencyType})">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-left: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">‡∫Å‡∫µ‡∫ö</div>
                </div>
                
                <small style="color: #666; margin-top: 5px; display: block;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: ${currencyType === 1 ? '300000 (6 ‡∫´‡∫º‡∫±‡∫Å)' : '20000 (5-6 ‡∫´‡∫º‡∫±‡∫Å)'}
                </small>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ -->
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="closeRateInputModal()" style="
                    background: #6c757d;
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#5a6268'"
                   onmouseout="this.style.background='#6c757d'">
                    ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
                </button>
                
                <button onclick="processCurrencyConversion(${currencyType})" id="convertCurrencyBtn" style="
                    background: linear-gradient(135deg, #6f42c1 0%, #563d7c 100%);
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    font-weight: bold;
                    transition: all 0.2s ease;
                    box-shadow: 0 5px 15px rgba(111, 66, 193, 0.3);
                    opacity: 0.6;
                " disabled onmouseover="if(!this.disabled) { this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(111, 66, 193, 0.4)'; }"
                   onmouseout="if(!this.disabled) { this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(111, 66, 193, 0.3)'; }">
                    üñ®Ô∏è ‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà‡ªÅ‡∫•‡∫∞‡∫õ‡∫¥‡ªâ‡∫ô
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
    setTimeout(() => {
        const rateInput = document.getElementById('currencyRateInput');
        if (rateInput) rateInput.focus();
    }, 300);
}

// 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏£‡∏ó
// ==============================================
function validateCurrencyRate(currencyType) {
    const rateInput = document.getElementById('currencyRateInput');
    const convertBtn = document.getElementById('convertCurrencyBtn');
    const container = document.getElementById('rateContainer');
    
    if (!rateInput || !convertBtn || !container) return;
    
    const value = rateInput.value;
    const numValue = parseInt(value);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
    const requiredLength = currencyType === 1 ? 6 : [6, 7]; // ‡∏ö‡∏≤‡∏ó=6‡∏´‡∏•‡∏±‡∏Å, ‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå=6-7‡∏´‡∏•‡∏±‡∏Å
    let isValid = false;
    
    if (currencyType === 1) {
        isValid = value.length === 6 && numValue > 0;
    } else {
        isValid = (value.length === 6 || value.length === 7) && numValue > 0;
    }
    
    if (isValid) {
        container.style.borderColor = '#4caf50';
        convertBtn.disabled = false;
        convertBtn.style.opacity = '1';
        convertBtn.style.cursor = 'pointer';
    } else {
        container.style.borderColor = value.length > 0 ? '#ffa726' : '#e1e5e9';
        convertBtn.disabled = true;
        convertBtn.style.opacity = '0.6';
        convertBtn.style.cursor = 'not-allowed';
    }
}
function handleRateEnterKey(event, currencyType) {
    if (event.key === 'Enter') {
        event.preventDefault();
        processCurrencyConversion(currencyType);
    }
}
function processCurrencyConversion(currencyType) {
    const rateInput = document.getElementById('currencyRateInput');
    if (!rateInput) return;
    
    const rate = parseInt(rateInput.value);
    if (!rate || rate <= 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô‡∫ó‡∫µ‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á', 'error');
        return;
    }
    
    currencyExchangeRate = rate;
    
    // ‡∏õ‡∏¥‡∏î modal
    closeRateInputModal();
    
    // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏´‡∏•‡πà‡∏á
    let itemsData = window.tempCurrencyItemsData || printItemsDataCurrency;
    
    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏à‡∏≤‡∏Å selectedItems ‡πÉ‡∏´‡∏°‡πà
    if (!itemsData || itemsData.length === 0) {
        console.log('üîÑ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å selectedItems...');
        itemsData = [];
        
        selectedItems.forEach(itemId => {
            const item = scannedItems.find(i => i.id === itemId);
            if (item) {
                itemsData.push({
                    id: item.id,
                    name: item.name,
                    unit: item.unit,
                    quantity: item.quantity,
                    price: item.price,
                    totalPrice: item.totalPrice,
                    image: item.image || ''
                });
            }
        });
        
        console.log('üì¶ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:', itemsData.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    if (!itemsData || itemsData.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á');
        showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', 'error');
        return;
    }
    
    console.log('‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á calculateAndPrintCurrency:', itemsData);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    calculateAndPrintCurrency(currencyType, rate, itemsData);
}

// ==============================================
// 6. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
// ==============================================
function calculateAndPrintCurrency(currencyType, rate, itemsData) {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô:', currencyType, '‡πÄ‡∏£‡∏ó:', rate);
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    const dataToUse = itemsData || window.tempCurrencyItemsData || printItemsDataCurrency;
    
    console.log('üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:', dataToUse);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!dataToUse || dataToUse.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
        showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
        return;
    }
    
    const currencyInfo = {
        1: { name: '‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó', symbol: '‡∏ø', flag: 'üáπüá≠', multiplier: 1000 },
        2: { name: '‡∫î‡ªç‡∫•‡ªà‡∫≤', symbol: '$', flag: 'üá∫üá∏', multiplier: 100 }
    };
    
    const info = currencyInfo[currencyType];
    let totalKipAmount = 0;
    let totalForeignAmount = 0;
    let totalQuantity = 0;
    
    console.log(`üí± ‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì: (${info.multiplier} x ‡∏£‡∏≤‡∏Ñ‡∏≤) √∑ ${rate}`);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    const convertedItems = dataToUse.map((item, index) => {
        console.log(`üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${index + 1}: ${item.name}`);
        console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°: ${item.price} ‡∏Å‡∏µ‡∏ö`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${item.quantity} ${item.unit}`);
        
        // ‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        const foreignPrice = (info.multiplier * item.price) / rate;
        const foreignTotal = foreignPrice * item.quantity;
        
        console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏õ‡∏•‡∏á: ${foreignPrice.toFixed(2)} ${info.symbol}`);
        console.log(`   - ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏õ‡∏•‡∏á: ${foreignTotal.toFixed(2)} ${info.symbol}`);
        
        totalKipAmount += item.totalPrice;
        totalForeignAmount += foreignTotal;
        totalQuantity += item.quantity;
        
        return {
            id: item.id,
            name: item.name,
            unit: item.unit,
            quantity: item.quantity,
            price: item.price,
            totalPrice: item.totalPrice,
            image: item.image,
            foreignPrice: foreignPrice,
            foreignTotal: foreignTotal
        };
    });
    
    console.log(`üìä ‡∏ú‡∏•‡∏£‡∏ß‡∏° - ‡∏Å‡∏µ‡∏ö: ${totalKipAmount}, ${info.symbol}: ${totalForeignAmount.toFixed(2)}`);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå
    generateCurrencyPrintDocument(convertedItems, totalKipAmount, totalForeignAmount, totalQuantity, currencyType, rate, info);
}

function generateCurrencyPrintDocument(items, totalKip, totalForeign, totalQuantity, currencyType, rate, currencyInfo) {
    console.log('üñ®Ô∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô');
    console.log('üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:', items.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (!items || items.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå');
        showMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', 'error');
        return;
    }
    
    const currentDate = new Date().toLocaleDateString('lo-LA');
    const printId = `CURRENCY_${Date.now()}`;
    
    let printContent = `
        <div style="font-family: 'Noto Sans Lao', Arial, sans-serif; margin: 20px; background: white; padding: 20px;">
            <div style="text-align: center; margin-bottom: 20px; font-weight: bold; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            
            <div style="margin-bottom: 15px; font-size: 14px;">
                ‚ñ∂ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô: ${printId}<br>
                ‚ñ∂ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${currentDate}<br>
                ‚ñ∂ ‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô: 1000 ${currencyInfo.symbol} = ${rate.toLocaleString()} ‡∫Å‡∫µ‡∫ö<br>
                ‚ñ∂ ‡∫™‡∫π‡∫î‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà: (${currencyInfo.multiplier} √ó ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡∫µ‡∫ö) √∑ ${rate.toLocaleString()}<br>
                ‚ñ∂ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô: ${items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô<br>
                ‚ñ∂ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ä‡∫¥‡ªâ‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalQuantity} ‡∫ä‡∫¥‡ªâ‡∫ô
            </div>
            
            <div style="text-align: center; font-weight: bold; margin: 15px 0;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å &gt;&gt;&gt;
            </div>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 2px solid #000;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫≤‡∫Ñ‡∫≤ (‡∫Å‡∫µ‡∫ö)</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫≤‡∫Ñ‡∫≤ (${currencyInfo.symbol})</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫ß‡∫° (‡∫Å‡∫µ‡∫ö)</th>
                        <th style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫ß‡∫° (${currencyInfo.symbol})</th>
                    </tr>
                </thead>
                <tbody>`;
    
    items.forEach((item, index) => {
        console.log(`üñ®Ô∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${index + 1}: ${item.name} (${item.quantity} ${item.unit})`);
        
        printContent += `
                    <tr>
                        <td style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px;">${index + 1}</td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: left; font-size: 10px;"><strong>${item.name}</strong></td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px;">${item.unit}</td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: center; font-size: 10px;"><strong>${item.quantity}</strong></td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: right; font-size: 10px;">${item.price.toLocaleString()}</td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: right; font-size: 10px; color: #2196f3; font-weight: bold;">${item.foreignPrice.toFixed(2)}</td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: right; font-size: 10px;">${item.totalPrice.toLocaleString()}</td>
                        <td style="border: 1px solid #000; padding: 6px; text-align: right; font-size: 10px; color: #2196f3; font-weight: bold;">${item.foreignTotal.toFixed(2)}</td>
                    </tr>`;
    });
    
    printContent += `
                    <tr style="background-color: #e0e0e0; font-weight: bold;">
                        <td colspan="6" style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 11px;">‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: right; font-size: 11px; color: #dc3545;">${totalKip.toLocaleString()} ‡∫Å‡∫µ‡∫ö</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: right; font-size: 11px; color: #28a745; font-weight: bold;">${totalForeign.toFixed(2)} ${currencyInfo.symbol}</td>
                    </tr>
                </tbody>
            </table>
            
            <div style="margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 10px; border-left: 4px solid #6f42c1;">
                <h4 style="color: #6f42c1; margin-bottom: 10px;">üìä ‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫Å‡∫≤‡∫ô‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô</h4>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; font-size: 0.9rem;">
                    <div><strong>üí± ‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô:</strong></div>
                    <div>1000 ${currencyInfo.symbol} = ${rate.toLocaleString()} ‡∫Å‡∫µ‡∫ö</div>
                    <div><strong>üßÆ ‡∫™‡∫π‡∫î‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà:</strong></div>
                    <div>(${currencyInfo.multiplier} √ó ‡∫•‡∫≤‡∫Ñ‡∫≤) √∑ ${rate.toLocaleString()}</div>
                    <div><strong>üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô:</strong></div>
                    <div>${items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                    <div><strong>üìä ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô:</strong></div>
                    <div>${totalQuantity} ‡∫≠‡∫±‡∫ô</div>
                    <div><strong>üí∞ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡∫µ‡∫ö:</strong></div>
                    <div style="color: #dc3545; font-weight: bold;">${totalKip.toLocaleString()} ‡∫Å‡∫µ‡∫ö</div>
                    <div><strong>üíµ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô${currencyInfo.name}:</strong></div>
                    <div style="color: #28a745; font-weight: bold;">${totalForeign.toFixed(2)} ${currencyInfo.symbol}</div>
                </div>
            </div>
            
            <div style="text-align: center; margin-top: 20px; font-weight: bold; border-top: 2px solid #000; padding-top: 10px;">
                &lt;&lt;&lt; ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡∫°‡∫≤‡∫≠‡∫∏‡∫î‡ªú‡∫π‡∫ô &gt;&gt;&gt;
            </div>
            
            <div style="margin-top: 15px; font-size: 11px; color: #666;">
                ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î: ‡∫•‡∫≤‡∫Ñ‡∫≤${currencyInfo.name}‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà‡∫à‡∫≤‡∫Å‡∫™‡∫π‡∫î: (${currencyInfo.multiplier} √ó ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡∫µ‡∫ö) √∑ ${rate.toLocaleString()} | ‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô‡∫™‡ªâ‡∫≤‡∫á‡ªÄ‡∫°‡∫∑‡ªà‡∫≠: ${new Date().toLocaleString('lo-LA')}
            </div>
        </div>`;
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô
    const printWindow = window.open('', '_blank');
    if (printWindow) {
        printWindow.document.write(printContent);
        printWindow.document.close();
        printWindow.print();
        setTimeout(() => printWindow.close(), 1000);
        
        showMessage(`üñ®Ô∏è ‡∏õ‡∫¥‡πâ‡∏ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô ${items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô (${currencyInfo.flag} ${currencyInfo.name}) ‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î`, 'success');
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } else {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏î‡πâ');
        showMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï popup', 'error');
    }
}

// ==============================================
// 7. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal
// ==============================================
function closeCurrencyChoiceModal() {
    const modal = document.getElementById('currencyChoiceModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
    activeCurrencyChoice = null;
    printItemsDataCurrency = [];
}

function closeRateInputModal() {
    const modal = document.getElementById('rateInputModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    currencyExchangeRate = null;
    window.tempCurrencyItemsData = null; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
}

// ==============================================
// 8. CSS Animations
// ==============================================
function addCurrencyChoiceModalStyles() {
    if (document.getElementById('currencyChoiceModalStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'currencyChoiceModalStyles';
    style.textContent = `
        @keyframes currencyModalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes currencyModalSlideUp {
            from { 
                opacity: 0; 
                transform: scale(0.9) translateY(50px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            #currencyChoiceModal .modal-content,
            #rateInputModal .modal-content {
                width: 95%;
                padding: 20px;
            }
            
            #currencyChoiceModal input,
            #rateInputModal input {
                font-size: 16px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô zoom ‡∏ö‡∏ô iOS */
            }
        }
    `;
    
    document.head.appendChild(style);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener('DOMContentLoaded', function() {
    addCurrencyChoiceModalStyles();
});

// ==============================================
// 9. Event Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ESC key
// ==============================================
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        // ‡∏õ‡∏¥‡∏î modal ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
        if (document.getElementById('rateInputModal')) {
            closeRateInputModal();
        } else if (document.getElementById('currencyChoiceModal')) {
            closeCurrencyChoiceModal();
        }
    }
});

console.log('‚úÖ Currency Print Selection System ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');

function generateGeneralPrintDocument(itemsData, totalAmount, totalQuantity) {
    const currentDate = new Date().toLocaleDateString('lo-LA');
    const printId = `PRINT_${Date.now()}`;
    
    let printContent = `
        <div style="font-family: 'Noto Sans Lao', Arial, sans-serif; margin: 20px; background: white; padding: 20px;">
            <div style="text-align: center; margin-bottom: 20px; font-weight: bold; border-bottom: 2px solid #000; padding-bottom: 10px;">
                ‚òÖ‚òÖ‚òÖ‚òÖ ‡ªÉ‡∫ö‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ ‚òÖ‚òÖ‚òÖ‚òÖ
            </div>
            
            <div style="margin-bottom: 15px; font-size: 14px;">
                ‚ñ∂ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô: ${printId}<br>
                ‚ñ∂ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${currentDate}<br>
                ‚ñ∂ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô: ${itemsData.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô<br>
                ‚ñ∂ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalQuantity} ‡∫≠‡∫±‡∫ô
            </div>
            
            <div style="text-align: center; font-weight: bold; margin: 15px 0;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å &gt;&gt;&gt;
            </div>
            
            <table style="width: 100%; border-collapse: collapse; margin: 20px 0; border: 2px solid #000;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡ªç‡∫≤‡∫î‡∫±‡∫ö</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫ä‡∫∑‡ªà‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫≤‡∫Ñ‡∫≤</th>
                        <th style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px; background-color: #f0f0f0; font-weight: bold;">‡∫•‡∫ß‡∫°</th>
                    </tr>
                </thead>
                <tbody>`;
    
    itemsData.forEach((item, index) => {
        printContent += `
                    <tr>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${index + 1}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: left; font-size: 12px;">${item.name}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.unit}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.quantity}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.price.toLocaleString()}</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${item.totalPrice.toLocaleString()}</td>
                    </tr>`;
    });
    
    printContent += `
                    <tr style="background-color: #e0e0e0; font-weight: bold;">
                        <td colspan="5" style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î:</td>
                        <td style="border: 1px solid #000; padding: 8px; text-align: center; font-size: 12px;">${totalAmount.toLocaleString()} ‚Ç≠</td>
                    </tr>
                </tbody>
            </table>
            
            <div style="text-align: center; margin-top: 20px; font-weight: bold; border-top: 2px solid #000; padding-top: 10px;">
                &lt;&lt;&lt; ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å &gt;&gt;&gt;
            </div>
            
            <div style="margin-top: 15px; font-size: 12px; color: #666;">
                ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î: ‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô‡∫ô‡∫µ‡ªâ‡∫™‡ªâ‡∫≤‡∫á‡∫à‡∫≤‡∫Å‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ó‡∫µ‡ªà‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô ‡∫ö‡ªç‡ªà‡ªÅ‡∫°‡ªà‡∫ô‡ªÉ‡∫ö‡ªÄ‡∫Å‡∫±‡∫ö‡ªÄ‡∫á‡∫¥‡∫ô
            </div>
        </div>`;
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏¥‡πâ‡∏ô
    const printWindow = window.open('', '_blank');
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
    setTimeout(() => printWindow.close(), 1000);
    
    showMessage(`üñ®Ô∏è ‡∫õ‡∫¥‡ªâ‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô ${itemsData.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î`, 'success');
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏¥‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ==============================================
// üîß GENERAL WHATSAPP FUNCTION
// ==============================================

function handleGeneralWhatsApp() {
    console.log('üì± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô General WhatsApp...');
    
    if (selectedItems.size === 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫Å‡ªà‡∫≠‡∫ô', 'error');
        return;
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    whatsappItemsData = [];
    let totalAmount = 0;
    let totalQuantity = 0;
    
    // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    selectedItems.forEach(itemId => {
        const item = scannedItems.find(i => i.id === itemId);
        if (item) {
            const itemData = {
                id: item.id,
                name: item.name,
                unit: item.unit,
                quantity: item.quantity,
                price: item.price,
                totalPrice: item.totalPrice,
                image: item.image || ''
            };
            
            whatsappItemsData.push(itemData);
            totalAmount += item.totalPrice;
            totalQuantity += item.quantity;
            
            console.log(`üì¶ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${item.name} (${item.quantity} ${item.unit}) = ${item.totalPrice}`);
        }
    });
    
    console.log(`üìä ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${whatsappItemsData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${totalAmount}`);
    
    if (whatsappItemsData.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ');
        showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
        return;
    }
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô global variable ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
    window.globalWhatsAppItemsData = whatsappItemsData;
    window.globalWhatsAppTotalAmount = totalAmount;
    window.globalWhatsAppTotalQuantity = totalQuantity;
    
    // ‡πÅ‡∏™‡∏î‡∏á modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö WhatsApp
    displayWhatsAppCurrencyChoiceModal();
}
function displayWhatsAppCurrencyChoiceModal() {
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingModal = document.getElementById('whatsappCurrencyChoiceModal');
    if (existingModal) {
        document.body.removeChild(existingModal);
    }
    
    const modal = document.createElement('div');
    modal.id = 'whatsappCurrencyChoiceModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10008;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #25D366;
                    font-size: 1.5rem;
                    font-weight: bold;
                ">üì± ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫™‡ªç‡∫≤‡∫•‡∫±‡∫ö WhatsApp</h2>
                <button onclick="closeWhatsAppCurrencyChoiceModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ -->
            <div style="
                color: #666;
                margin-bottom: 30px;
                font-size: 1rem;
                line-height: 1.5;
            ">
                ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫™‡ªç‡∫≤‡∫•‡∫±‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫ª‡ªà‡∫á WhatsApp
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô -->
            <div style="
                display: flex;
                flex-direction: column;
                gap: 15px;
                margin-bottom: 25px;
            ">
                <button onclick="chooseWhatsAppCurrencyType(1)" style="
                    background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                " 
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(76, 175, 80, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(76, 175, 80, 0.3)'">
                    <span style="font-size: 1.5rem;">üáπüá≠</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 1: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó (THB)</span>
                </button>
                
                <button onclick="chooseWhatsAppCurrencyType(2)" style="
                    background: linear-gradient(135deg, #2196f3 0%, #1976d2 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(33, 150, 243, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                "
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(33, 150, 243, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(33, 150, 243, 0.3)'">
                    <span style="font-size: 1.5rem;">üá∫üá∏</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 2: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫î‡ªç‡∫•‡ªà‡∫≤ (USD)</span>
                </button>
                
                <button onclick="chooseWhatsAppCurrencyType(3)" style="
                    background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
                    color: white;
                    border: none;
                    padding: 20px;
                    border-radius: 15px;
                    cursor: pointer;
                    font-size: 1.1rem;
                    font-weight: bold;
                    transition: all 0.3s ease;
                    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 10px;
                "
                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 8px 25px rgba(37, 211, 102, 0.4)'"
                onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(37, 211, 102, 0.3)'">
                    <span style="font-size: 1.5rem;">üá±üá¶</span>
                    <span>‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å 3: ‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡∫µ‡∫ö‡∫•‡∫≤‡∫ß (LAK)</span>
                </button>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î -->
            <button onclick="closeWhatsAppCurrencyChoiceModal()" style="
                background: #6c757d;
                color: white;
                border: none;
                padding: 12px 25px;
                border-radius: 8px;
                cursor: pointer;
                font-size: 1rem;
                transition: all 0.2s ease;
            " onmouseover="this.style.background='#5a6268'"
               onmouseout="this.style.background='#6c757d'">
                ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
            </button>
        </div>
    `;
    
    document.body.appendChild(modal);
}


function chooseWhatsAppCurrencyType(currencyType) {
    activeWhatsAppCurrencyChoice = currencyType;
    
    console.log(`üîò ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô WhatsApp: ${currencyType}`);
    console.log(`üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:`, window.globalWhatsAppItemsData);
    
    if (currencyType === 3) {
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏µ‡∏ö‡∏•‡∏≤‡∏ß - ‡∏™‡πà‡∏á WhatsApp ‡πÄ‡∏•‡∏¢
        closeWhatsAppCurrencyChoiceModal();
        
        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å global variable
        const itemsData = window.globalWhatsAppItemsData || whatsappItemsData;
        const totalAmount = window.globalWhatsAppTotalAmount || 0;
        const totalQuantity = window.globalWhatsAppTotalQuantity || 0;
        
        if (!itemsData || itemsData.length === 0) {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏µ‡∏ö‡∏•‡∏≤‡∏ß');
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', 'error');
            return;
        }
        
        showGeneralWhatsAppModal(itemsData, totalAmount, totalQuantity);
    } else {
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏≤‡∏ó‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå - ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏£‡∏ó
        closeWhatsAppCurrencyChoiceModal();
        displayWhatsAppRateInputModal(currencyType);
    }
}
function displayWhatsAppRateInputModal(currencyType) {
    const currencyInfo = {
        1: { name: '‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó', symbol: '‡∏ø', flag: 'üáπüá≠', digits: '6', formula: '1000 x ‡∫•‡∫≤‡∫Ñ‡∫≤ √∑ ‡ªÄ‡∫•‡∫î' },
        2: { name: '‡∫î‡ªç‡∫•‡ªà‡∫≤', symbol: '$', flag: 'üá∫üá∏', digits: '6-7', formula: '100 x ‡∫•‡∫≤‡∫Ñ‡∫≤ √∑ ‡ªÄ‡∫•‡∫î' }
    };
    
    const info = currencyInfo[currencyType];
    
    const modal = document.createElement('div');
    modal.id = 'whatsappRateInputModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10009;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #25D366;
                    font-size: 1.3rem;
                    font-weight: bold;
                ">${info.flag} ‡ªÉ‡∫™‡ªà‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô${info.name} (WhatsApp)</h2>
                <button onclick="closeWhatsAppRateInputModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì -->
            <div style="
                background: #f8f9fa;
                padding: 20px;
                border-radius: 15px;
                margin-bottom: 25px;
                text-align: left;
            ">
                <h4 style="color: #333; margin-bottom: 15px; text-align: center;">üìê ‡∫™‡∫π‡∫î‡∫Å‡∫≤‡∫ô‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà</h4>
                <div style="font-family: monospace; background: white; padding: 15px; border-radius: 8px; border: 1px solid #ddd; text-align: center; font-size: 1.1rem; font-weight: bold; color: #25D366;">
                    ${info.formula}
                </div>
                <div style="margin-top: 10px; text-align: center; color: #666; font-size: 0.9rem;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: ‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫•‡∫≤‡∫Ñ‡∫≤ 10,000 ‡∫Å‡∫µ‡∫ö, ‡ªÄ‡∫•‡∫î ${currencyType === 1 ? '300,000' : '20,000'} = ${currencyType === 1 ? '33.33' : '50.00'} ${info.symbol}
                </div>
            </div>
            
            <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏£‡∏ó -->
            <div style="margin-bottom: 25px; text-align: left;">
                <label style="
                    display: block;
                    font-weight: bold;
                    margin-bottom: 8px;
                    color: #333;
                ">üí± ‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô (‡∫ï‡ªâ‡∫≠‡∫á‡ªÄ‡∫õ‡∫±‡∫ô‡ªÄ‡∫•‡∫Å ${info.digits} ‡∫´‡∫º‡∫±‡∫Å)*</label>
                
                <div style="
                    display: flex;
                    align-items: center;
                    border: 2px solid #e1e5e9;
                    border-radius: 10px;
                    overflow: hidden;
                    transition: border-color 0.3s ease;
                " id="whatsappRateContainer">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-right: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">${info.flag} 1 ${info.symbol} =</div>
                    <input type="number" id="whatsappCurrencyRateInput" placeholder="${currencyType === 1 ? '300000' : '20000'}" style="
                        flex: 1;
                        padding: 12px 15px;
                        border: none;
                        font-size: 1rem;
                        outline: none;
                    " min="1" max="9999999" oninput="validateWhatsAppCurrencyRate(${currencyType})" onkeypress="handleWhatsAppRateEnterKey(event, ${currencyType})">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-left: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">‡∫Å‡∫µ‡∫ö</div>
                </div>
                
                <small style="color: #666; margin-top: 5px; display: block;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: ${currencyType === 1 ? '300000 (6 ‡∫´‡∫º‡∫±‡∫Å)' : '20000 (5-6 ‡∫´‡∫º‡∫±‡∫Å)'}
                </small>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ -->
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="closeWhatsAppRateInputModal()" style="
                    background: #6c757d;
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#5a6268'"
                   onmouseout="this.style.background='#6c757d'">
                    ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
                </button>
                
                <button onclick="processWhatsAppCurrencyConversion(${currencyType})" id="convertWhatsAppCurrencyBtn" style="
                    background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    font-weight: bold;
                    transition: all 0.2s ease;
                    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);
                    opacity: 0.6;
                " disabled onmouseover="if(!this.disabled) { this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(37, 211, 102, 0.4)'; }"
                   onmouseout="if(!this.disabled) { this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(37, 211, 102, 0.3)'; }">
                    üì± ‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà‡ªÅ‡∫•‡∫∞‡∫™‡∫ª‡ªà‡∫á WhatsApp
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
    setTimeout(() => {
        const rateInput = document.getElementById('whatsappCurrencyRateInput');
        if (rateInput) rateInput.focus();
    }, 300);
}
function validateWhatsAppCurrencyRate(currencyType) {
    const rateInput = document.getElementById('whatsappCurrencyRateInput');
    const convertBtn = document.getElementById('convertWhatsAppCurrencyBtn');
    const container = document.getElementById('whatsappRateContainer');
    
    if (!rateInput || !convertBtn || !container) return;
    
    const value = rateInput.value;
    const numValue = parseInt(value);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
    const requiredLength = currencyType === 1 ? 6 : [6, 7]; // ‡∏ö‡∏≤‡∏ó=6‡∏´‡∏•‡∏±‡∏Å, ‡∏î‡∏≠‡∏•‡∏•‡∏≤‡∏£‡πå=6-7‡∏´‡∏•‡∏±‡∏Å
    let isValid = false;
    
    if (currencyType === 1) {
        isValid = value.length === 6 && numValue > 0;
    } else {
        isValid = (value.length === 6 || value.length === 7) && numValue > 0;
    }
    
    if (isValid) {
        container.style.borderColor = '#25D366';
        convertBtn.disabled = false;
        convertBtn.style.opacity = '1';
        convertBtn.style.cursor = 'pointer';
    } else {
        container.style.borderColor = value.length > 0 ? '#ffa726' : '#e1e5e9';
        convertBtn.disabled = true;
        convertBtn.style.opacity = '0.6';
        convertBtn.style.cursor = 'not-allowed';
    }
}

function handleWhatsAppRateEnterKey(event, currencyType) {
    if (event.key === 'Enter') {
        event.preventDefault();
        processWhatsAppCurrencyConversion(currencyType);
    }
}

function processWhatsAppCurrencyConversion(currencyType) {
    const rateInput = document.getElementById('whatsappCurrencyRateInput');
    if (!rateInput) return;
    
    const rate = parseInt(rateInput.value);
    if (!rate || rate <= 0) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô‡∫ó‡∫µ‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á', 'error');
        return;
    }
    
    whatsappExchangeRate = rate;
    
    console.log(`üí± ‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô: ${rate}`);
    
    // ‡∏õ‡∏¥‡∏î modal
    closeWhatsAppRateInputModal();
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å global variables
    let itemsData = window.globalWhatsAppItemsData || whatsappItemsData;
    
    console.log(`üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ:`, itemsData);
    
    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡πÉ‡∏´‡∏°‡πà
    if (!itemsData || itemsData.length === 0) {
        console.log('üîÑ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà...');
        itemsData = [];
        
        selectedItems.forEach(itemId => {
            const item = scannedItems.find(i => i.id === itemId);
            if (item) {
                itemsData.push({
                    id: item.id,
                    name: item.name,
                    unit: item.unit,
                    quantity: item.quantity,
                    price: item.price,
                    totalPrice: item.totalPrice,
                    image: item.image || ''
                });
            }
        });
        
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï global variables
        window.globalWhatsAppItemsData = itemsData;
        console.log(`üì¶ ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ: ${itemsData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    if (!itemsData || itemsData.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á');
        showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà', 'error');
        return;
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á WhatsApp
    calculateAndSendWhatsAppCurrency(currencyType, rate, itemsData);
}


function calculateAndSendWhatsAppCurrency(currencyType, rate, itemsData) {
    console.log('üì± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp:', currencyType, '‡πÄ‡∏£‡∏ó:', rate);
    console.log('üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:', itemsData);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!itemsData || itemsData.length === 0) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
        
        // ‡∏•‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å global variables ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        itemsData = window.globalWhatsAppItemsData;
        
        if (!itemsData || itemsData.length === 0) {
            console.error('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏°‡πâ‡πÉ‡∏ô global variables');
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà', 'error');
            return;
        }
        
        console.log('‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å global variables:', itemsData);
    }
    
    const currencyInfo = {
        1: { name: '‡∫ö‡∫≤‡∫î‡ªÑ‡∫ó', symbol: '‡∏ø', flag: 'üáπüá≠', multiplier: 1000 },
        2: { name: '‡∫î‡ªç‡∫•‡ªà‡∫≤', symbol: '$', flag: 'üá∫üá∏', multiplier: 100 }
    };
    
    const info = currencyInfo[currencyType];
    let totalKipAmount = 0;
    let totalForeignAmount = 0;
    let totalQuantity = 0;
    
    console.log(`üí± ‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì: (${info.multiplier} x ‡∏£‡∏≤‡∏Ñ‡∏≤) √∑ ${rate}`);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    const convertedItems = itemsData.map((item, index) => {
        console.log(`üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${index + 1}: ${item.name}`);
        console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏¥‡∏°: ${item.price} ‡∏Å‡∏µ‡∏ö`);
        console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${item.quantity} ${item.unit}`);
        
        // ‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        const foreignPrice = (info.multiplier * item.price) / rate;
        const foreignTotal = foreignPrice * item.quantity;
        
        console.log(`   - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏õ‡∏•‡∏á: ${foreignPrice.toFixed(2)} ${info.symbol}`);
        console.log(`   - ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏õ‡∏•‡∏á: ${foreignTotal.toFixed(2)} ${info.symbol}`);
        
        totalKipAmount += item.totalPrice;
        totalForeignAmount += foreignTotal;
        totalQuantity += item.quantity;
        
        return {
            name: item.name,
            unit: item.unit,
            quantity: item.quantity,
            kipPrice: item.price,
            kipTotal: item.totalPrice,
            foreignPrice: foreignPrice,
            foreignTotal: foreignTotal
        };
    });
    
    console.log(`üìä ‡∏ú‡∏•‡∏£‡∏ß‡∏° - ‡∏Å‡∏µ‡∏ö: ${totalKipAmount}, ${info.symbol}: ${totalForeignAmount.toFixed(2)}`);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
    const whatsappMessage = generateCurrencyWhatsAppMessage(
        convertedItems, 
        totalKipAmount, 
        totalForeignAmount, 
        totalQuantity, 
        currencyType, 
        rate, 
        info
    );
    
    // ‡πÅ‡∏™‡∏î‡∏á modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á WhatsApp
    showWhatsAppPhoneModal(whatsappMessage);
}

function generateCurrencyWhatsAppMessage(items, totalKip, totalForeign, totalQuantity, currencyType, rate, currencyInfo) {
    const currentDate = new Date().toLocaleDateString('lo-LA');
    const messageId = `WHATSAPP_${Date.now()}`;
    
    let message = `üì±üì± ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ (${currencyInfo.flag} ${currencyInfo.name}) üì±üì±\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${currentDate}\n`;
    message += `üè∑Ô∏è ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô: ${messageId}\n`;
    message += `üí± ‡∫≠‡∫±‡∫î‡∫ï‡∫≤‡ªÅ‡∫•‡∫Å‡∫õ‡ªà‡∫Ω‡∫ô: 1 ${currencyInfo.symbol} = ${rate.toLocaleString()} ‡∫Å‡∫µ‡∫ö\n`;
    message += `üßÆ ‡∫™‡∫π‡∫î‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà: (${currencyInfo.multiplier} √ó ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡∫µ‡∫ö) √∑ ${rate.toLocaleString()}\n`;
    message += `üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô: ${items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô\n`;
    message += `üìä ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalQuantity} ‡∫ä‡∫¥‡ªâ‡∫ô\n\n`;
    
    message += `üõí ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤:\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    
    items.forEach((item, index) => {
        message += `${index + 1}. ${item.name}\n`;
        message += `   üìè ‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç: ${item.unit}\n`;
        message += `   üî¢ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô: ${item.quantity}\n`;
        message += `   üí∞ ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡∫µ‡∫ö: ${item.kipPrice.toLocaleString()} ‚Ç≠\n`;
        message += `   üíµ ‡∫•‡∫≤‡∫Ñ‡∫≤${currencyInfo.name}: ${item.foreignPrice.toFixed(2)} ${currencyInfo.symbol}\n`;
        message += `   üìä ‡∫•‡∫ß‡∫°‡∫Å‡∫µ‡∫ö: ${item.kipTotal.toLocaleString()} ‚Ç≠\n`;
        message += `   üìà ‡∫•‡∫ß‡∫°${currencyInfo.name}: ${item.foreignTotal.toFixed(2)} ${currencyInfo.symbol}\n\n`;
    });
    
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üí∞ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫Å‡∫µ‡∫ö‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalKip.toLocaleString()} ‚Ç≠\n`;
    message += `üíµ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô${currencyInfo.name}‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalForeign.toFixed(2)} ${currencyInfo.symbol}\n\n`;
    
    message += `üìù ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î: ‡∫•‡∫≤‡∫Ñ‡∫≤${currencyInfo.name}‡∫Ñ‡∫¥‡∫î‡ªÑ‡∫•‡ªà‡∫à‡∫≤‡∫Å‡∫™‡∫π‡∫î: (${currencyInfo.multiplier} √ó ‡∫•‡∫≤‡∫Ñ‡∫≤‡∫Å‡∫µ‡∫ö) √∑ ${rate.toLocaleString()}\n`;
    message += `‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ô‡∫µ‡ªâ‡∫™‡∫ª‡ªà‡∫á‡∫°‡∫≤‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫≠‡ªâ‡∫≤‡∫á‡∫≠‡∫µ‡∫á\n\n`;
    
       
    message += `<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô >>>`;
    
    return message;
}

function showWhatsAppPhoneModal(whatsappMessage) {
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingModal = document.getElementById('whatsappPhoneModal');
    if (existingModal) {
        document.body.removeChild(existingModal);
    }
    
    const modal = document.createElement('div');
    modal.id = 'whatsappPhoneModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10010;
        animation: currencyModalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: currencyModalSlideUp 0.4s ease-out;
            max-height: 90vh;
            overflow-y: auto;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #25D366;
                    font-size: 1.4rem;
                    font-weight: bold;
                ">üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp (‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô)</h2>
                <button onclick="closeWhatsAppPhoneModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° -->
            <div style="
                background: #f8f9fa;
                padding: 15px;
                border-radius: 10px;
                margin-bottom: 25px;
                text-align: left;
                max-height: 200px;
                overflow-y: auto;
                border: 1px solid #ddd;
            ">
                <h4 style="color: #333; margin-bottom: 10px; text-align: center;">üìã ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á‡∫Ç‡ªç‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°</h4>
                <pre style="
                    white-space: pre-wrap;
                    font-size: 0.8rem;
                    margin: 0;
                    font-family: 'Noto Sans Lao', Arial, sans-serif;
                    line-height: 1.3;
                    color: #333;
                ">${whatsappMessage}</pre>
            </div>
            
            <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ -->
            <div style="margin-bottom: 25px; text-align: left;">
                <label style="
                    display: block;
                    font-weight: bold;
                    margin-bottom: 8px;
                    color: #333;
                ">üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö (‡∫™‡∫õ‡∫õ‡∫•‡∫≤‡∫ß)*</label>
                
                <div style="
                    display: flex;
                    align-items: center;
                    border: 2px solid #e1e5e9;
                    border-radius: 10px;
                    overflow: hidden;
                    transition: border-color 0.3s ease;
                " id="whatsappPhoneContainer">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-right: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">üá±üá¶ +856</div>
                    <input type="tel" id="whatsappPhoneInput" placeholder="20 1234 5678" style="
                        flex: 1;
                        padding: 12px 15px;
                        border: none;
                        font-size: 1rem;
                        outline: none;
                    " maxlength="12" oninput="formatWhatsAppLaoPhoneNumber(this)" onkeypress="handleWhatsAppPhoneEnter(event)">
                </div>
                
                <small style="color: #666; margin-top: 5px; display: block;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: 20 1234 5678, 30 5566 7788, 55 123 4567
                </small>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ -->
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="closeWhatsAppPhoneModal()" style="
                    background: #6c757d;
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#5a6268'"
                   onmouseout="this.style.background='#6c757d'">
                    ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
                </button>
                
                <button onclick="sendWhatsAppWithCurrency()" id="sendWhatsAppCurrencyBtn" style="
                    background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    font-weight: bold;
                    transition: all 0.2s ease;
                    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);
                " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(37, 211, 102, 0.4)'"
                   onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(37, 211, 102, 0.3)'">
                    üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ
    window.tempWhatsAppMessage = whatsappMessage;
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    setTimeout(() => {
        const phoneInput = document.getElementById('whatsappPhoneInput');
        if (phoneInput) phoneInput.focus();
    }, 300);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏•‡∏≤‡∏ß
function formatWhatsAppLaoPhoneNumber(input) {
    let value = input.value.replace(/\D/g, ''); // ‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏≠‡∏≠‡∏Å
    
    // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
    if (value.length > 10) {
        value = value.substring(0, 10);
    }
    
    // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
    if (value.length >= 2) {
        value = value.substring(0, 2) + ' ' + value.substring(2);
    }
    if (value.length >= 7) {
        value = value.substring(0, 7) + ' ' + value.substring(7);
    }
    
    input.value = value;
    
    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏Ç‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const container = document.getElementById('whatsappPhoneContainer');
    const cleanNumber = value.replace(/\s/g, '');
    
    if (cleanNumber.length >= 8 && (cleanNumber.startsWith('20') || cleanNumber.startsWith('30') || cleanNumber.startsWith('55') || cleanNumber.startsWith('56'))) {
        container.style.borderColor = '#25D366';
    } else if (cleanNumber.length > 0) {
        container.style.borderColor = '#ffa726';
    } else {
        container.style.borderColor = '#e1e5e9';
    }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
function handleWhatsAppPhoneEnter(event) {
    if (event.key === 'Enter') {
        event.preventDefault();
        sendWhatsAppWithCurrency();
    }
}

// ‡∏™‡πà‡∏á WhatsApp ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô
function sendWhatsAppWithCurrency() {
    const phoneInput = document.getElementById('whatsappPhoneInput');
    const sendBtn = document.getElementById('sendWhatsAppCurrencyBtn');
    
    if (!phoneInput || !window.tempWhatsAppMessage) {
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö', 'error');
        return;
    }
    
    const phoneValue = phoneInput.value.trim().replace(/\s/g, '');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    if (!phoneValue) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö', 'error');
        phoneInput.focus();
        return;
    }
    
    if (phoneValue.length < 8) {
        showMessage('‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö‡∫ö‡ªç‡ªà‡∫Ñ‡∫ª‡∫ö', 'error');
        phoneInput.focus();
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏•‡∏≤‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const validPrefixes = ['20', '30', '55', '56'];
    const hasValidPrefix = validPrefixes.some(prefix => phoneValue.startsWith(prefix));
    
    if (!hasValidPrefix) {
        showMessage('‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö‡∫ö‡ªç‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á (‡∫ï‡ªâ‡∫≠‡∫á‡ªÄ‡∫•‡∫µ‡ªà‡∫°‡∫î‡ªâ‡∫ß‡∫ç 20, 30, 55, ‡∫´‡∫º‡∫∑ 56)', 'error');
        phoneInput.focus();
        return;
    }
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
    sendBtn.disabled = true;
    sendBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á...';
    
    try {
        // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏° 856)
        const fullPhoneNumber = '856' + phoneValue;
        
        console.log(`üì± ‡∏™‡πà‡∏á WhatsApp ‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á: +${fullPhoneNumber}`);
        
        // ‡∏™‡πà‡∏á WhatsApp
        sendToWhatsApp(window.tempWhatsAppMessage, fullPhoneNumber);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        showMessage(`üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp (‡∫™‡∫∞‡∫Å‡∫∏‡∫ô‡ªÄ‡∫á‡∫¥‡∫ô) ‡ªÑ‡∫õ‡∫ç‡∫±‡∫á +856 ${phoneInput.value} ‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î`, 'success');
        
        // ‡∏õ‡∏¥‡∏î modal
        setTimeout(() => {
            closeWhatsAppPhoneModal();
        }, 1000);
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp:', error);
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp', 'error');
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°
        sendBtn.disabled = false;
        sendBtn.innerHTML = 'üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
    }
}

// ‡∏õ‡∏¥‡∏î modal
function closeWhatsAppPhoneModal() {
    const modal = document.getElementById('whatsappPhoneModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    window.tempWhatsAppMessage = null;
    window.globalWhatsAppItemsData = null;
    window.globalWhatsAppTotalAmount = null;
    window.globalWhatsAppTotalQuantity = null;
    whatsappItemsData = [];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î modal ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
function closeWhatsAppCurrencyChoiceModal() {
    const modal = document.getElementById('whatsappCurrencyChoiceModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ß‡πâ
    activeWhatsAppCurrencyChoice = null;
    // ‡πÑ‡∏°‡πà‡∏•‡∏ö whatsappItemsData ‡πÅ‡∏•‡∏∞ global variables ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
}

function closeWhatsAppRateInputModal() {
    const modal = document.getElementById('whatsappRateInputModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    whatsappExchangeRate = null;
    // ‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ global variables
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ESC key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        // ‡∏õ‡∏¥‡∏î modal ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
        if (document.getElementById('whatsappPhoneModal')) {
            closeWhatsAppPhoneModal();
        } else if (document.getElementById('whatsappRateInputModal')) {
            closeWhatsAppRateInputModal();
        } else if (document.getElementById('whatsappCurrencyChoiceModal')) {
            closeWhatsAppCurrencyChoiceModal();
        }
    }
});

// ==============================================
// üîß WHATSAPP PHONE INPUT MODAL FUNCTIONS
// ==============================================

function showGeneralWhatsAppModal(selectedItemsData, totalAmount, totalQuantity) {
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingModal = document.getElementById('generalWhatsAppModal');
    if (existingModal) {
        document.body.removeChild(existingModal);
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á modal ‡πÉ‡∏´‡∏°‡πà
    const modal = document.createElement('div');
    modal.id = 'generalWhatsAppModal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10005;
        animation: modalFadeIn 0.3s ease-out;
    `;
    
    modal.innerHTML = `
        <div style="
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.5);
            animation: modalSlideUp 0.4s ease-out;
        ">
            <!-- Header -->
            <div style="
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 25px;
                padding-bottom: 15px;
                border-bottom: 2px solid #f0f0f0;
            ">
                <h2 style="
                    margin: 0;
                    color: #25D366;
                    font-size: 1.5rem;
                    font-weight: bold;
                ">üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp</h2>
                <button onclick="closeGeneralWhatsAppModal()" style="
                    background: #f0f0f0;
                    border: none;
                    width: 35px;
                    height: 35px;
                    border-radius: 50%;
                    cursor: pointer;
                    font-size: 1.2rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#e0e0e0'; this.style.transform='rotate(90deg)'" 
                   onmouseout="this.style.background='#f0f0f0'; this.style.transform='rotate(0deg)'">√ó</button>
            </div>
            
            <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ -->
            <div style="
                background: #f8f9fa;
                padding: 20px;
                border-radius: 15px;
                margin-bottom: 25px;
                text-align: left;
            ">
                <h4 style="color: #333; margin-bottom: 15px; text-align: center;">üìã ‡∫™‡∫∞‡∫´‡∫º‡∫∏‡∫ö‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</h4>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; font-size: 0.9rem;">
                    <div><strong>üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô:</strong></div>
                    <div>${selectedItemsData.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</div>
                    <div><strong>üìä ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫ä‡∫¥‡ªâ‡∫ô:</strong></div>
                    <div>${totalQuantity} ‡∫ä‡∫¥‡ªâ‡∫ô</div>
                    <div><strong>üí∞ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô:</strong></div>
                    <div style="color: #25D366; font-weight: bold;">${totalAmount.toLocaleString()} ‚Ç≠</div>
                </div>
            </div>
            
            <!-- ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ -->
            <div style="margin-bottom: 25px; text-align: left;">
                <label style="
                    display: block;
                    font-weight: bold;
                    margin-bottom: 8px;
                    color: #333;
                ">üìû ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö (‡∫™‡∫õ‡∫õ‡∫•‡∫≤‡∫ß)*</label>
                
                <div style="
                    display: flex;
                    align-items: center;
                    border: 2px solid #e1e5e9;
                    border-radius: 10px;
                    overflow: hidden;
                    transition: border-color 0.3s ease;
                " id="phoneContainer">
                    <div style="
                        background: #f8f9fa;
                        padding: 12px 15px;
                        border-right: 1px solid #e1e5e9;
                        font-weight: bold;
                        color: #666;
                    ">üá±üá¶ +856</div>
                    <input type="tel" id="generalPhoneInput" placeholder="20 1234 5678" style="
                        flex: 1;
                        padding: 12px 15px;
                        border: none;
                        font-size: 1rem;
                        outline: none;
                    " maxlength="12" oninput="formatLaoPhoneNumber(this)" onkeypress="handlePhoneEnter(event)">
                </div>
                
                <small style="color: #666; margin-top: 5px; display: block;">
                    ‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á: 20 1234 5678, 30 5566 7788
                </small>
            </div>
            
            <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ -->
            <div style="display: flex; gap: 15px; justify-content: center;">
                <button onclick="closeGeneralWhatsAppModal()" style="
                    background: #6c757d;
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    transition: all 0.2s ease;
                " onmouseover="this.style.background='#5a6268'"
                   onmouseout="this.style.background='#6c757d'">
                    ‚úñ ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å
                </button>
                
                <button onclick="sendGeneralWhatsAppMessage()" id="sendGeneralWhatsAppBtn" style="
                    background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
                    color: white;
                    border: none;
                    padding: 12px 25px;
                    border-radius: 8px;
                    cursor: pointer;
                    font-size: 1rem;
                    font-weight: bold;
                    transition: all 0.2s ease;
                    box-shadow: 0 5px 15px rgba(37, 211, 102, 0.3);
                " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(37, 211, 102, 0.4)'"
                   onmouseout="this.style.transform='translateY(0px)'; this.style.boxShadow='0 5px 15px rgba(37, 211, 102, 0.3)'">
                    üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ
    window.tempGeneralWhatsAppData = {
        items: selectedItemsData,
        totalAmount: totalAmount,
        totalQuantity: totalQuantity
    };
    
    // Focus ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    setTimeout(() => {
        const phoneInput = document.getElementById('generalPhoneInput');
        if (phoneInput) phoneInput.focus();
    }, 300);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ESC
    document.addEventListener('keydown', handleGeneralWhatsAppEsc);
}

// ==============================================
// üîß PHONE NUMBER FORMATTING & VALIDATION
// ==============================================

// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏•‡∏≤‡∏ß
function formatLaoPhoneNumber(input) {
    let value = input.value.replace(/\D/g, ''); // ‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏≠‡∏≠‡∏Å
    
    // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
    if (value.length > 10) {
        value = value.substring(0, 10);
    }
    
    // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
    if (value.length >= 2) {
        value = value.substring(0, 2) + ' ' + value.substring(2);
    }
    if (value.length >= 7) {
        value = value.substring(0, 7) + ' ' + value.substring(7);
    }
    
    input.value = value;
    
    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏Ç‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const container = document.getElementById('phoneContainer');
    const cleanNumber = value.replace(/\s/g, '');
    
    if (cleanNumber.length >= 8 && (cleanNumber.startsWith('20') || cleanNumber.startsWith('30') || cleanNumber.startsWith('55') || cleanNumber.startsWith('56'))) {
        container.style.borderColor = '#25D366';
    } else if (cleanNumber.length > 0) {
        container.style.borderColor = '#ffa726';
    } else {
        container.style.borderColor = '#e1e5e9';
    }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
function handlePhoneEnter(event) {
    if (event.key === 'Enter') {
        event.preventDefault();
        sendGeneralWhatsAppMessage();
    }
}

// ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
function sendGeneralWhatsAppMessage() {
    const phoneInput = document.getElementById('generalPhoneInput');
    const sendBtn = document.getElementById('sendGeneralWhatsAppBtn');
    
    if (!phoneInput || !window.tempGeneralWhatsAppData) {
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö', 'error');
        return;
    }
    
    const phoneValue = phoneInput.value.trim().replace(/\s/g, '');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    if (!phoneValue) {
        showMessage('‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÉ‡∫™‡ªà‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö', 'error');
        phoneInput.focus();
        return;
    }
    
    if (phoneValue.length < 8) {
        showMessage('‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö‡∫ö‡ªç‡ªà‡∫Ñ‡∫ª‡∫ö', 'error');
        phoneInput.focus();
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏•‡∏≤‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const validPrefixes = ['20', '30', '55', '56'];
    const hasValidPrefix = validPrefixes.some(prefix => phoneValue.startsWith(prefix));
    
    if (!hasValidPrefix) {
        showMessage('‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó‡∫•‡∫∞‡∫™‡∫±‡∫ö‡∫ö‡ªç‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á (‡∫ï‡ªâ‡∫≠‡∫á‡ªÄ‡∫•‡∫µ‡ªà‡∫°‡∫î‡ªâ‡∫ß‡∫ç 20, 30, 55, ‡∫´‡∫º‡∫∑ 56)', 'error');
        phoneInput.focus();
        return;
    }
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
    sendBtn.disabled = true;
    sendBtn.innerHTML = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á...';
    
    try {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° WhatsApp
        const whatsappMessage = generateGeneralWhatsAppMessage(
            window.tempGeneralWhatsAppData.items,
            window.tempGeneralWhatsAppData.totalAmount,
            window.tempGeneralWhatsAppData.totalQuantity
        );
        
        // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏° 856)
        const fullPhoneNumber = '856' + phoneValue;
        
        console.log(`üì± ‡∏™‡πà‡∏á WhatsApp ‡πÑ‡∏õ‡∏¢‡∏±‡∏á: +${fullPhoneNumber}`);
        
        // ‡∏™‡πà‡∏á WhatsApp
        sendToWhatsApp(whatsappMessage, fullPhoneNumber);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        showMessage(`üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp ‡ªÑ‡∫õ‡∫ç‡∫±‡∫á +856 ${phoneInput.value} ‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î`, 'success');
        
        // ‡∏õ‡∏¥‡∏î modal
        setTimeout(() => {
            closeGeneralWhatsAppModal();
        }, 1000);
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp:', error);
        showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á WhatsApp', 'error');
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°
        sendBtn.disabled = false;
        sendBtn.innerHTML = 'üì± ‡∫™‡∫ª‡ªà‡∫á WhatsApp';
    }
}

function generateGeneralWhatsAppMessage(itemsData, totalAmount, totalQuantity) {
    const currentDate = new Date().toLocaleDateString('lo-LA');
    const messageId = `MSG_${Date.now()}`;
    
    let message = `üìãüìã ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤ üìãüìã\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üìÖ ‡∫ß‡∫±‡∫ô‡∫ó‡∫µ: ${currentDate}\n`;
    message += `üè∑Ô∏è ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô: ${messageId}\n`;
    message += `üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô: ${itemsData.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô\n`;
    message += `üìä ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalQuantity} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô\n\n`;
    
    message += `üõí ‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤:\n`;
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    
    itemsData.forEach((item, index) => {
        message += `${index + 1}. ${item.name}\n`;
        message += `   üìè ‡∫´‡∫ª‡∫ß‡ªú‡ªà‡∫ß‡∫ç: ${item.unit}\n`;
        message += `   üî¢ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô: ${item.quantity}\n`;
        message += `   üí∞ ‡∫•‡∫≤‡∫Ñ‡∫≤: ${item.price.toLocaleString()} ‚Ç≠\n`;
        message += `   üíµ ‡∫•‡∫ß‡∫°: ${item.totalPrice.toLocaleString()} ‚Ç≠\n\n`;
    });
    
    message += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
    message += `üí∞ ‡∫•‡∫ß‡∫°‡ªÄ‡∫á‡∫¥‡∫ô‡∫ó‡∫±‡∫á‡ªù‡∫ª‡∫î: ${totalAmount.toLocaleString()} ‚Ç≠\n\n`;
    
    message += `üìù ‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î: ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô‡∫ô‡∫µ‡ªâ‡ªÄ‡∫õ‡∫±‡∫ô‡∫Å‡∫≤‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤‡∫™‡∫ª‡ªà‡∫á‡ªÉ‡∫´‡ªâ‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡∫ô‡∫±‡ªâ‡∫ô\n`;
    message += `‡ªÅ‡∫ó‡∫ô‡∫Å‡∫≤‡∫ô‡∫õ‡∫£‡∫¥‡ªâ‡∫ô‡ªÉ‡∫ö‡∫ö‡∫¥‡∫ô\n\n`;
    
    message += `<<< ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤‡∫ó‡∫µ‡ªà‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô >>>`;
    
    return message;
}

// ==============================================
// üîß MODAL CONTROL FUNCTIONS
// ==============================================

// ‡∏õ‡∏¥‡∏î modal
function closeGeneralWhatsAppModal() {
    const modal = document.getElementById('generalWhatsAppModal');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    window.tempGeneralWhatsAppData = null;
    
    // ‡∏•‡∏ö event listener
    document.removeEventListener('keydown', handleGeneralWhatsAppEsc);
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ESC key
function handleGeneralWhatsAppEsc(event) {
    if (event.key === 'Escape') {
        closeGeneralWhatsAppModal();
    }
}

// ==============================================
// üîß CSS ANIMATIONS
// ==============================================

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS animations ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal
function addGeneralWhatsAppModalStyles() {
    if (document.getElementById('generalWhatsAppModalStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'generalWhatsAppModalStyles';
    style.textContent = `
        @keyframes modalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes modalSlideUp {
            from { 
                opacity: 0; 
                transform: scale(0.9) translateY(50px); 
            }
            to { 
                opacity: 1; 
                transform: scale(1) translateY(0px); 
            }
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            #generalWhatsAppModal .modal-content {
                width: 95%;
                padding: 20px;
            }
            
            #generalWhatsAppModal input {
                font-size: 16px; /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô zoom ‡∏ö‡∏ô iOS */
            }
        }
    `;
    
    document.head.appendChild(style);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener('DOMContentLoaded', function() {
    addGeneralWhatsAppModalStyles();
});

console.log('‚úÖ General WhatsApp Phone Input Modal ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');



// ==============================================
// üîß CSS ANIMATIONS FOR GENERAL BUTTONS
// ==============================================

function addGeneralButtonStyles() {
    if (document.getElementById('generalButtonStyles')) return;
    
    const style = document.createElement('style');
    style.id = 'generalButtonStyles';
    style.textContent = `
        .debt-button.show {
            display: inline-block !important;
            animation: generalSlideIn 0.3s ease-out;
        }
        
        @keyframes generalSlideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
        
        #generalPrintButton:hover {
            background: linear-gradient(135deg, #5a32a3 0%, #4a2b63 100%) !important;
        }
        
        #generalWhatsAppButton:hover {
            background: linear-gradient(135deg, #1ea952 0%, #0e7a3e 100%) !important;
        }
        
        @media (max-width: 768px) {
            #generalPrintButton,
            #generalWhatsAppButton {
                font-size: 0.8rem;
                padding: 6px 12px;
                margin-left: 5px;
                margin-top: 5px;
            }
        }
    `;
    
    document.head.appendChild(style);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
document.addEventListener('DOMContentLoaded', function() {
    addGeneralButtonStyles();
});

// ==============================================
// üîß DEBUG FUNCTIONS
// ==============================================

function debugGeneralButtons() {
    console.log('üîç === Debug General Buttons ===');
    console.log('selectedItems.size:', selectedItems.size);
    console.log('generalPrintButton exists:', !!generalPrintButton);
    console.log('generalWhatsAppButton exists:', !!generalWhatsAppButton);
    
    if (generalPrintButton) {
        console.log('printButton display:', generalPrintButton.style.display);
        console.log('printButton classList:', generalPrintButton.classList.toString());
    }
    
    if (generalWhatsAppButton) {
        console.log('whatsappButton display:', generalWhatsAppButton.style.display);
        console.log('whatsappButton classList:', generalWhatsAppButton.classList.toString());
    }
    
    console.log('üîç === End Debug ===');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö
function testGeneralButtons() {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö General Buttons...');
    
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    if (scannedItems.length > 0) {
        selectedItems.add(scannedItems[0].id);
        updateGeneralButtonsVisibility();
        console.log('‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à');
    } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    }
}

console.log('‚úÖ General Print & WhatsApp Functions ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!');


// ‡πÇ‡∏´‡∏•‡∏î CSS animations ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edit Debtor ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
document.addEventListener('DOMContentLoaded', function() {
    addEditDebtorStyles();
    console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î Edit Debtor Animation Styles ‡πÅ‡∏•‡πâ‡∏ß');
});

// ‡∏´‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
if (document.readyState === 'complete' || document.readyState === 'interactive') {
    addEditDebtorStyles();
    console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î Edit Debtor Animation Styles ‡πÅ‡∏•‡πâ‡∏ß (‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß)');
}

// ==============================================
// üîß CHANGE CALCULATOR SYSTEM - ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
// ==============================================

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
function addChangeCalculatorButton() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (changeCalculatorButton) {
        console.log('‚ÑπÔ∏è ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
        return;
    }
    
    // ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πà‡∏° (‡πÉ‡∏ô table-header)
    const headerDiv = document.querySelector('.table-header > div[style*="justify-content: space-between"]');
    if (!headerDiv) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö header div');
        return;
    }
    
    // ‡∏´‡∏≤ div ‡∏ó‡∏µ‡πà‡∏°‡∏µ totalAmountHeader (‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤‡∏Ç‡∏≠‡∏á header)
    const rightSection = headerDiv.querySelector('div:last-child');
    if (!rightSection) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö right section');
        return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    changeCalculatorButton = document.createElement('button');
    changeCalculatorButton.id = 'changeCalculatorBtn';
    changeCalculatorButton.className = 'change-calculator-btn';
    changeCalculatorButton.innerHTML = 'üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô';
    changeCalculatorButton.onclick = openChangeCalculator;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
    rightSection.appendChild(changeCalculatorButton);
    
    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
function updateChangeCalculatorVisibility() {
    if (!changeCalculatorButton) return;
    
    if (selectedItems.size > 0) {
        changeCalculatorButton.classList.add('show');
        console.log(`‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô (${selectedItems.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`);
    } else {
        changeCalculatorButton.classList.remove('show');
        console.log('‚ÑπÔ∏è ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô');
    }
}

/**
 * ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
/**
 * ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
function openChangeCalculator() {
    if (selectedItems.size === 0) {
        showMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô', 'error');
        return;
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    let selectedTotal = 0;
    let selectedCount = 0;
    
    selectedItems.forEach(itemId => {
        const item = scannedItems.find(i => i.id === itemId);
        if (item) {
            selectedTotal += item.totalPrice;
            selectedCount++;
        }
    });
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal HTML
    const modalHTML = `
        <div class="change-modal" id="changeCalculatorModal">
            <div class="change-modal-content">
                <div class="change-modal-header">
                    <h2 class="change-modal-title">üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</h2>
                    <button class="change-close-btn" onclick="closeChangeCalculator()">‚úï</button>
                </div>
                
                <div class="change-summary">
                    <div class="change-summary-row">
                        <span>üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</span>
                        <span><strong>${selectedCount}</strong> ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span>
                    </div>
                    <div class="change-summary-row total">
                        <span>üíµ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
                        <span>${formatCurrency(selectedTotal)}</span>
                    </div>
                </div>
                
                <div class="change-input-group">
                    <label class="change-input-label">üí≥ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô (‚Ç≠):</label>
                    <input 
                        type="number" 
                        id="customerPaymentInput" 
                        class="change-input-field" 
                        placeholder="0"
                        min="0"
                        step="1000"
                        oninput="calculateChangeRealtime(${selectedTotal})"
                    >
                </div>
                
                <div class="change-result" id="changeResult">
                    <div class="change-result-label" id="changeLabel">üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô</div>
                    <div class="change-result-amount" id="changeAmount">0 ‚Ç≠</div>
                </div>
            </div>
        </div>
    `;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Modal ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô body
    document.body.insertAdjacentHTML('beforeend', modalHTML);
    
    // Focus ‡∏ó‡∏µ‡πà input field
    setTimeout(() => {
        const input = document.getElementById('customerPaymentInput');
        if (input) input.focus();
    }, 300);
    
    console.log(`‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô - ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${formatCurrency(selectedTotal)}`);
}

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö Real-time
 */
function calculateChangeRealtime(totalAmount) {
    const input = document.getElementById('customerPaymentInput');
    const resultDiv = document.getElementById('changeResult');
    const changeAmountDiv = document.getElementById('changeAmount');
    const changeLabelDiv = document.getElementById('changeLabel');
    
    if (!input || !resultDiv || !changeAmountDiv || !changeLabelDiv) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô');
        return;
    }
    
    const customerPayment = parseFloat(input.value) || 0;
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (customerPayment === 0) {
        changeAmountDiv.textContent = '0 ‚Ç≠';
        changeLabelDiv.textContent = 'üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô';
        resultDiv.className = 'change-result';
        return;
    }
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠
    if (customerPayment < totalAmount) {
        const shortage = totalAmount - customerPayment;
        changeAmountDiv.textContent = formatCurrency(shortage);
        changeLabelDiv.textContent = '‚ö†Ô∏è ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠ ‡∏Ç‡∏≤‡∏î‡∏≠‡∏µ‡∏Å';
        resultDiv.className = 'change-result insufficient';
        return;
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    const change = customerPayment - totalAmount;
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡πà‡∏≤‡∏¢‡∏û‡∏≠‡∏î‡∏µ
    if (change === 0) {
        changeAmountDiv.textContent = '0 ‚Ç≠';
        changeLabelDiv.textContent = '‚úÖ ‡∏à‡πà‡∏≤‡∏¢‡∏û‡∏≠‡∏î‡∏µ';
        resultDiv.className = 'change-result exact';
        return;
    }
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
    changeAmountDiv.textContent = formatCurrency(change);
    changeLabelDiv.textContent = 'üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô';
    resultDiv.className = 'change-result has-change';
    
    console.log(`üí∞ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢ ${formatCurrency(customerPayment)}, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ${formatCurrency(totalAmount)}, ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô ${formatCurrency(change)}`);
}



/**
 * ‡∏õ‡∏¥‡∏î Modal ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
 */
function closeChangeCalculator() {
    const modal = document.getElementById('changeCalculatorModal');
    if (modal) {
        modal.remove();
        console.log('‚úÖ ‡∏õ‡∏¥‡∏î Modal ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô');
    }
}

// ‡∏õ‡∏¥‡∏î Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
document.addEventListener('click', function(event) {
    if (event.target.id === 'changeCalculatorModal') {
        closeChangeCalculator();
    }
});

// ‡∏õ‡∏¥‡∏î Modal ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° ESC
document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
        const modal = document.getElementById('changeCalculatorModal');
        if (modal) {
            closeChangeCalculator();
        }
    }
});

console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

// ==============================================
// üÜï DEBT CONFIRMATION & SUCCESS POPUP SYSTEM (‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà)
// ==============================================

/**
 * ‡πÅ‡∏™‡∏î‡∏á Confirmation Popup ‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á WhatsApp ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß
 */
function showDebtConfirmationPopup(data) {
    console.log('üîî ‡πÅ‡∏™‡∏î‡∏á Confirmation Popup:', data);
    
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const existingConfirm = document.getElementById('debtConfirmationPopup');
    if (existingConfirm) existingConfirm.remove();
    
    const modal = document.createElement('div');
    modal.id = 'debtConfirmationPopup';
    modal.className = 'debt-modal';
    modal.style.zIndex = '10002';
    
    const actionIcon = data.type === 'print' ? 'üñ®Ô∏è' : 'üì±';
    const actionText = data.type === 'print' ? '‡∫õ‡∫£‡∫¥‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô' : '‡∫™‡∫ª‡ªà‡∫á WhatsApp';
    const actionColor = data.type === 'print' ? '#9c27b0' : '#25D366';
    const confirmQuestion = data.type === 'print' ? '‡∫ó‡ªà‡∫≤‡∫ô‡ªÑ‡∫î‡ªâ‡∫õ‡∫£‡∫¥‡∫ô‡ªÄ‡∫≠‡∫Å‡∫∞‡∫™‡∫≤‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡ªÅ‡∫•‡ªâ‡∫ß‡∫ö‡ªç?' : '‡∫ó‡ªà‡∫≤‡∫ô‡ªÑ‡∫î‡ªâ‡∫™‡∫ª‡ªà‡∫á WhatsApp ‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡ªÅ‡∫•‡ªâ‡∫ß‡∫ö‡ªç?';
    
    modal.innerHTML = `
        <div class="debt-modal-content" style="max-width: 600px;">
            <div style="text-align: center; padding: 30px;">
                <div style="font-size: 5rem; margin-bottom: 20px;">${actionIcon}</div>
                <h2 style="color: ${actionColor}; margin-bottom: 20px; font-size: 2rem;">‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô‡∫Å‡∫≤‡∫ô${actionText}</h2>
                
                <div style="background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%); padding: 20px; border-radius: 15px; margin: 25px 0; border: 2px solid #ffc107;">
                    <p style="font-size: 1.2rem; font-weight: bold; color: #856404; margin: 0;">
                        ${confirmQuestion}
                    </p>
                </div>
                
                <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 25px; border-radius: 15px; margin: 25px 0; border: 2px solid #e1e5e9;">
                    <div style="text-align: left; line-height: 2;">
                        <p style="margin: 8px 0;"><strong>üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤:</strong> ${data.customerName}</p>
                        <p style="margin: 8px 0;"><strong>üì± ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó:</strong> ${data.phoneNumber}</p>
                        <p style="margin: 8px 0;"><strong>üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô:</strong> ${data.items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</p>
                        ${data.extraAmount > 0 ? `
                        <p style="margin: 8px 0; padding-top: 8px; border-top: 1px solid #dee2e6;">
                            <strong>‚ûï ‡ªÄ‡∫á‡∫¥‡∫ô‡∫ô‡∫≠‡∫Å‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô:</strong> ${formatCurrency(data.extraAmount)}
                        </p>
                        ` : ''}
                        <p style="margin: 12px 0; padding-top: 12px; border-top: 2px solid #dee2e6;">
                            <strong style="font-size: 1.3rem; color: ${actionColor};">üí∞ ‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°:</strong> 
                            <strong style="font-size: 1.5rem; color: ${actionColor};">${formatCurrency(data.totalAmount)}</strong>
                        </p>
                    </div>
                </div>

                <p style="color: #666; margin-bottom: 25px; font-size: 1rem;">
                    ‡∫Å‡∫ª‡∫î "‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô" ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫ª‡∫á‡ªÉ‡∫ô‡∫•‡∫∞‡∫ö‡∫ª‡∫ö
                </p>
                
                <div style="display: flex; gap: 15px; justify-content: center;">
                    <button class="debt-action-btn debt-cancel-btn" onclick="closeDebtConfirmationPopup()" 
                            style="flex: 1; padding: 18px; font-size: 1.1rem;">
                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                    <button class="debt-action-btn debt-save-btn" onclick="executeDebtSave()" 
                            style="flex: 1; padding: 18px; font-size: 1.1rem;">
                        ‚úÖ ‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô
                    </button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô global variable
    window.pendingDebtData = data;
    
    // Animation
    modal.style.opacity = '0';
    requestAnimationFrame(() => {
        modal.style.transition = 'opacity 0.3s ease';
        modal.style.opacity = '1';
    });
}

/**
 * ‡∏õ‡∏¥‡∏î Confirmation Popup
 */
function closeDebtConfirmationPopup() {
    const modal = document.getElementById('debtConfirmationPopup');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => modal.remove(), 300);
    }
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    delete window.pendingDebtData;
}

/**
 * ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 2)
 */
async function executeDebtSave() {
    console.log('üíæ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á...');
    
    const data = window.pendingDebtData;
    if (!data) {
        showMessage('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å', 'error');
        return;
    }
    
    // ‡∏õ‡∏¥‡∏î Confirmation Popup
    closeDebtConfirmationPopup();
    
    // ‡πÅ‡∏™‡∏î‡∏á Loading
    showDebtLoadingPopup();
    
    try {
        // 1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        console.log('üì∑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û...');
        const imageUrl = await uploadImageWithDebug();
        
        // 2. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const customerInfo = {
            customerName: data.customerName,
            phoneNumber: data.phoneNumber
        };
        
        console.log('üíæ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
        
        google.script.run
            .withSuccessHandler((result) => {
                console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result);
                
                // ‡∏õ‡∏¥‡∏î Loading Popup
                closeDebtLoadingPopup();
                
                if (result.success) {
                    // ‡πÅ‡∏™‡∏î‡∏á Success Popup
                    showDebtSuccessPopup(data.type, data, result);
                    
                } else {
                    throw new Error(result.message || '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
                }
            })
            .withFailureHandler((error) => {
                console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
                closeDebtLoadingPopup();
                showMessage('‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ' + error.message, 'error');
            })
            .saveDebtDataUpdated(data.items, customerInfo, data.extraAmount, imageUrl);
            
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
        closeDebtLoadingPopup();
        showMessage('‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î: ' + error.message, 'error');
    }
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á Loading Popup
 */
function showDebtLoadingPopup() {
    const modal = document.createElement('div');
    modal.id = 'debtLoadingPopup';
    modal.className = 'debt-modal';
    modal.style.zIndex = '10003';
    
    modal.innerHTML = `
        <div class="debt-modal-content" style="max-width: 400px;">
            <div style="text-align: center; padding: 50px 30px;">
                <div style="width: 80px; height: 80px; border: 6px solid #e3f2fd; border-top: 6px solid #4facfe; border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto 20px;"></div>
                <h3 style="color: #4facfe; margin-bottom: 15px;">‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å...</h3>
                <p style="color: #666;">‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫™‡∫±‡∫Å‡∫Ñ‡∫π‡ªà</p>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

/**
 * ‡∏õ‡∏¥‡∏î Loading Popup
 */
function closeDebtLoadingPopup() {
    const modal = document.getElementById('debtLoadingPopup');
    if (modal) modal.remove();
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á Success Popup ‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
 */
function showDebtSuccessPopup(type, debtData, result) {
    console.log('üéâ ‡πÅ‡∏™‡∏î‡∏á Success Popup:', type);
    
    // ‡∏•‡∏ö modal ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const existingModals = document.querySelectorAll('.debt-modal');
    existingModals.forEach(modal => {
        if (modal.id !== 'debtModal') modal.remove();
    });
    
    const modal = document.createElement('div');
    modal.id = 'debtSuccessPopup';
    modal.className = 'debt-modal';
    modal.style.zIndex = '10004';
    
    const icon = type === 'print' ? 'üñ®Ô∏è' : 'üì±';
    const title = type === 'print' ? '‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫õ‡∫£‡∫¥‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î!' : '‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å + ‡∫™‡∫ª‡ªà‡∫á WhatsApp ‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î!';
    const color = type === 'print' ? '#9c27b0' : '#25D366';
    
    modal.innerHTML = `
        <div class="debt-modal-content" style="max-width: 550px;">
            <div style="text-align: center; padding: 30px;">
                <div style="font-size: 5rem; margin-bottom: 20px;">‚úÖ</div>
                <h2 style="color: ${color}; margin-bottom: 20px; font-size: 1.8rem;">${title}</h2>
                
                <div style="background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%); padding: 20px; border-radius: 15px; margin: 25px 0; border: 2px solid #28a745;">
                    <p style="font-size: 1.1rem; font-weight: bold; color: #155724; margin: 0;">
                        ${icon} ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫•‡∫ª‡∫á‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î!
                    </p>
                </div>
                
                <div style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); padding: 25px; border-radius: 15px; margin: 25px 0; border: 2px solid #e1e5e9;">
                    <div style="text-align: left; line-height: 2;">
                        <p style="margin: 8px 0;"><strong>üìã ‡ªÄ‡∫•‡∫Å‡∫ó‡∫µ:</strong> ${result.orderNumber || 'N/A'}</p>
                        <p style="margin: 8px 0;"><strong>üë§ ‡∫ä‡∫∑‡ªà‡∫•‡∫π‡∫Å‡∫Ñ‡ªâ‡∫≤:</strong> ${debtData.customerName}</p>
                        <p style="margin: 8px 0;"><strong>üì± ‡ªÄ‡∫ö‡∫µ‡ªÇ‡∫ó:</strong> ${debtData.phoneNumber}</p>
                        <p style="margin: 8px 0;"><strong>üì¶ ‡∫à‡ªç‡∫≤‡∫ô‡∫ß‡∫ô‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô:</strong> ${debtData.items.length} ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô</p>
                        ${debtData.extraAmount > 0 ? `
                        <p style="margin: 8px 0; padding-top: 8px; border-top: 1px solid #dee2e6;">
                            <strong>‚ûï ‡ªÄ‡∫á‡∫¥‡∫ô‡∫ô‡∫≠‡∫Å‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô:</strong> ${formatCurrency(debtData.extraAmount)}
                        </p>
                        ` : ''}
                        <p style="margin: 12px 0; padding-top: 12px; border-top: 2px solid #dee2e6;">
                            <strong style="font-size: 1.3rem; color: ${color};">üí∞ ‡∫ç‡∫≠‡∫î‡∫•‡∫ß‡∫°:</strong> 
                            <strong style="font-size: 1.5rem; color: ${color};">${formatCurrency(debtData.totalAmount)}</strong>
                        </p>
                    </div>
                </div>
                
                <button class="debt-action-btn debt-save-btn" onclick="closeDebtSuccessPopup()" 
                        style="width: 100%; padding: 18px; font-size: 1.2rem;">
                    ‡∫õ‡∫¥‡∫î
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Animation
    modal.style.opacity = '0';
    requestAnimationFrame(() => {
        modal.style.transition = 'opacity 0.3s ease';
        modal.style.opacity = '1';
    });
}

/**
 * ‡∏õ‡∏¥‡∏î Success Popup
 */
function closeDebtSuccessPopup() {
    console.log('üîÑ ‡∏õ‡∏¥‡∏î Success Popup');
    
    const modal = document.getElementById('debtSuccessPopup');
    if (modal) {
        modal.style.opacity = '0';
        setTimeout(() => modal.remove(), 300);
    }
    
    // ‡∏õ‡∏¥‡∏î Debt Modal ‡∏´‡∏•‡∏±‡∏Å
    const debtModal = document.getElementById('debtModal');
    if (debtModal) {
        debtModal.remove();
    }
    
    // ‚ùå ‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    
    // Update UI
    updateSelectedAmount();
    updateDebtButtonVisibility();
    updateSelectAllCheckbox();
    updateClearButtonVisibility();
    
    showMessage('‚úÖ ‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡∫ï‡∫¥‡∫î‡ªú‡∫µ‡ªâ', 'success');
}

console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏∞‡∏ö‡∏ö Debt Confirmation & Success Popup ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

// ==============================================
// üîê LOGIN/LOGOUT SYSTEM
// ==============================================

// Global Variables for Login System
let userInfoData = [];
let currentLoginSession = null;
let isLoggedIn = false;

// Storage Keys
const LOGIN_SESSION_KEY = 'login_session_v1';

/**
 * ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Sheet "userinfo1"
 */
async function loadUserInfoData() {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ...');
    
    return new Promise((resolve, reject) => {
        google.script.run
            .withSuccessHandler((data) => {
                userInfoData = data || [];
                console.log(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${userInfoData.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
                resolve();
            })
            .withFailureHandler((error) => {
                console.error('‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
                userInfoData = [];
                resolve(); // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            })
            .getUserInfoData();
    });
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Session Login ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
 */
function checkLoginSession() {
    const savedSession = localStorage.getItem(LOGIN_SESSION_KEY);
    
    if (savedSession) {
        try {
            const session = JSON.parse(savedSession);
            const logoutTime = new Date(session.logoutTime);
            const now = new Date();
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ Auto Logout
            if (now < logoutTime) {
                console.log('‚úÖ ‡∏û‡∏ö Session Login ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
                currentLoginSession = session;
                isLoggedIn = true;
                onLoginSuccess(session);
                return;
            } else {
                console.log('‚è∞ Session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ - ‡∏ï‡πâ‡∏≠‡∏á Login ‡πÉ‡∏´‡∏°‡πà');
                localStorage.removeItem(LOGIN_SESSION_KEY);
            }
        } catch (error) {
            console.error('‚ùå ‡∏≠‡πà‡∏≤‡∏ô Session ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
            localStorage.removeItem(LOGIN_SESSION_KEY);
        }
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ Session ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‚Üí ‡πÅ‡∏™‡∏î‡∏á Login Modal
    showLoginModal();
}
/**
 * ‡πÅ‡∏™‡∏î‡∏á Login Modal
 */
function showLoginModal() {
    console.log('üîê ‡πÅ‡∏™‡∏î‡∏á Login Modal');
    
    // ‡∏•‡∏ö Modal ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const oldOverlay = document.getElementById('loginOverlay');
    if (oldOverlay) oldOverlay.remove();
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
    disableAllButtons();
    
    const overlay = document.createElement('div');
    overlay.className = 'login-overlay';
    overlay.id = 'loginOverlay';
    
    overlay.innerHTML = `
        <div class="login-modal">
            <div class="login-header">
                <h2>üîê ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</h2>
                <p>‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÉ‡∫ä‡ªâ‡∫á‡∫≤‡∫ô</p>
            </div>
            
            <div class="login-form">
                <div class="login-form-group">
                    <label class="login-form-label">üë§ ‡∫ä‡∫∑‡ªà‡∫ú‡∫π‡ªâ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</label>
                    <div class="login-autocomplete-container">
                        <input type="text" id="loginUsername" class="login-form-input" 
                               placeholder="‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å ‡∫´‡∫º‡∫∑ ‡∫û‡∫¥‡∫°‡∫ä‡∫∑‡ªà‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ..." autocomplete="off">
                        <div id="usernameSuggestions" class="login-suggestions"></div>
                    </div>
                </div>
                
                <div class="login-form-group">
                    <label class="login-form-label">üîë ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô</label>
                    <input type="password" id="loginPassword" class="login-form-input" 
                           placeholder="‡∫û‡∫¥‡∫°‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô..." autocomplete="new-password">
                </div>
                
                <div class="login-form-group">
                    <label class="login-form-label">‚≠ê ‡ªÄ‡∫Å‡∫£‡∫î</label>
                    <div class="login-autocomplete-container">
                        <input type="text" id="loginGrade" class="login-form-input" 
                               placeholder="‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å ‡∫´‡∫º‡∫∑ ‡∫û‡∫¥‡∫°‡ªÄ‡∫Å‡∫£‡∫î..." autocomplete="off">
                        <div id="gradeSuggestions" class="login-suggestions"></div>
                    </div>
                </div>
                
                <button class="login-btn" onclick="handleLogin()">
                    üöÄ ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö
                </button>
                
                <div id="loginError" class="login-error"></div>
                <div id="loginSuccess" class="login-success"></div>
            </div>
        </div>
    `;
    
    document.body.appendChild(overlay);
    
    // Setup autocomplete
    setupLoginAutocomplete();
    
    // Focus ‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏Å
    setTimeout(() => {
        const usernameInput = document.getElementById('loginUsername');
        if (usernameInput) usernameInput.focus();
    }, 300);
}
/**
 * Setup Autocomplete ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Login Form
 */
function setupLoginAutocomplete() {
    const usernameInput = document.getElementById('loginUsername');
    const passwordInput = document.getElementById('loginPassword');
    const gradeInput = document.getElementById('loginGrade');
    
    const usernameSuggestions = document.getElementById('usernameSuggestions');
    const gradeSuggestions = document.getElementById('gradeSuggestions');
    
    // Username Autocomplete
    if (usernameInput) {
        usernameInput.addEventListener('input', function() {
            const value = this.value.toLowerCase();
            const matches = userInfoData.filter(user => 
                user.username && user.username.toLowerCase().includes(value)
            );
            
            showSuggestions(usernameSuggestions, matches.map(u => u.username), (selected) => {
                usernameInput.value = selected;
                usernameSuggestions.style.display = 'none';
                passwordInput.focus(); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
            });
        });
        
        usernameInput.addEventListener('focus', function() {
            if (this.value) this.dispatchEvent(new Event('input'));
        });
    }
    
    // Password - ‡πÑ‡∏°‡πà‡∏°‡∏µ Autocomplete (‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏á)
    if (passwordInput) {
        // ‡∏õ‡∏¥‡∏î Autocomplete
        passwordInput.setAttribute('autocomplete', 'new-password');
        
        // ‡πÑ‡∏°‡πà‡∏°‡∏µ Event Listener ‡πÉ‡∏î‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Autocomplete
        console.log('üîí ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô: ‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ Autocomplete)');
    }
    
    // Grade Autocomplete
    if (gradeInput) {
        gradeInput.addEventListener('input', function() {
            const value = this.value.toLowerCase();
            const matches = userInfoData.filter(user => 
                user.grade && user.grade.toLowerCase().includes(value)
            );
            
            showSuggestions(gradeSuggestions, matches.map(u => u.grade), (selected) => {
                gradeInput.value = selected;
                gradeSuggestions.style.display = 'none';
            });
        });
        
        gradeInput.addEventListener('focus', function() {
            if (this.value) this.dispatchEvent(new Event('input'));
        });
    }
    
    // ‡∏õ‡∏¥‡∏î suggestions ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.login-autocomplete-container')) {
            if (usernameSuggestions) usernameSuggestions.style.display = 'none';
            if (gradeSuggestions) gradeSuggestions.style.display = 'none';
        }
    });
    
    // ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Login
    [usernameInput, passwordInput, gradeInput].forEach(input => {
        if (input) {
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    handleLogin();
                }
            });
        }
    });
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á Suggestions
 */
function showSuggestions(container, items, onSelect) {
    if (!container) return;
    
    container.innerHTML = '';
    
    if (items.length === 0) {
        container.style.display = 'none';
        return;
    }
    
    const uniqueItems = [...new Set(items)];
    
    uniqueItems.forEach(item => {
        const div = document.createElement('div');
        div.className = 'login-suggestion-item';
        div.textContent = item;
        div.onclick = () => onSelect(item);
        container.appendChild(div);
    });
    
    container.style.display = 'block';
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£ Login
 */
function handleLogin() {
    const username = document.getElementById('loginUsername')?.value.trim();
    const password = document.getElementById('loginPassword')?.value.trim();
    const grade = document.getElementById('loginGrade')?.value.trim();
    
    const errorDiv = document.getElementById('loginError');
    const successDiv = document.getElementById('loginSuccess');
    const loginBtn = document.querySelector('.login-btn');
    
    // Reset messages
    if (errorDiv) {
        errorDiv.classList.remove('show');
        errorDiv.textContent = '';
    }
    if (successDiv) {
        successDiv.classList.remove('show');
        successDiv.textContent = '';
    }
    
    // Validate input
    if (!username || !password || !grade) {
        if (errorDiv) {
            errorDiv.textContent = '‚ùå ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡∫ï‡∫∑‡ªà‡∫°‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ª‡∫ö‡∫ó‡∫∏‡∫Å‡∫ä‡ªà‡∫≠‡∫á';
            errorDiv.classList.add('show');
        }
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Login
    const user = userInfoData.find(u => 
        u.username === username && 
        u.password === password && 
        u.grade === grade
    );
    
    if (!user) {
        if (errorDiv) {
            errorDiv.textContent = '‚ùå ‡∫ä‡∫∑‡ªà‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ, ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô ‡∫´‡∫º‡∫∑ ‡ªÄ‡∫Å‡∫£‡∫î‡∫ö‡ªç‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á';
            errorDiv.classList.add('show');
        }
        return;
    }
    
    // Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    if (loginBtn) {
        loginBtn.disabled = true;
        loginBtn.textContent = 'üîÑ ‡∫Å‡ªç‡∫≤‡∫•‡∫±‡∫á‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö...';
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤ Logout (‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ)
    const now = new Date();
    const logoutTime = new Date(now);
    logoutTime.setDate(logoutTime.getDate() + 1);
    logoutTime.setHours(0, 0, 0, 0);
    
    const loginData = {
        username: username,
        password: password,
        grade: grade,
        loginTime: now.toISOString(),
        logoutTime: logoutTime.toISOString()
    };
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Sheets
    saveLoginToSheet(loginData, successDiv, loginBtn);
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Login Session ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Sheet "Settime1"
 */
function saveLoginToSheet(loginData, successDiv, loginBtn) {
    google.script.run
        .withSuccessHandler((result) => {
            if (result.success) {
                console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Login Session ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á localStorage
                currentLoginSession = loginData;
                localStorage.setItem(LOGIN_SESSION_KEY, JSON.stringify(loginData));
                isLoggedIn = true;
                
                if (successDiv) {
                    successDiv.textContent = `‚úÖ ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î! ‡∫ç‡∫¥‡∫ô‡∫î‡∫µ‡∫ï‡ªâ‡∫≠‡∫ô‡∫Æ‡∫±‡∫ö ${loginData.username}`;
                    successDiv.classList.add('show');
                }
                
                // ‡∏õ‡∏¥‡∏î Modal ‡∏´‡∏•‡∏±‡∏á 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                setTimeout(() => {
                    onLoginSuccess(loginData);
                }, 1000);
                
            } else {
                throw new Error(result.message || '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
            }
        })
        .withFailureHandler((error) => {
            console.error('‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Login Session ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
            
            if (successDiv) {
                successDiv.textContent = '‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å';
                successDiv.classList.add('show');
            }
            
            if (loginBtn) {
                loginBtn.disabled = false;
                loginBtn.textContent = 'üöÄ ‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö';
            }
        })
        .saveLoginSession(loginData);
}

/**
 * ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
 */
function onLoginSuccess(loginData) {
    console.log('üéâ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', loginData.username);
    
    // ‡∏õ‡∏¥‡∏î Login Modal
    const overlay = document.getElementById('loginOverlay');
    if (overlay) overlay.remove();
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    enableAllButtons();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    updateUserDisplayName();
    
    // ‡πÅ‡∏™‡∏î‡∏á UI ‡∏õ‡∏Å‡∏ï‡∏¥
    initializeUI();
}

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
function updateUserDisplayName() {
    const displayElement = document.getElementById('currentUserDisplay');
    if (!displayElement) return;
    
    if (isLoggedIn && currentLoginSession) {
        displayElement.innerHTML = `
            üë§ ${currentLoginSession.username} (${currentLoginSession.grade})
            <button class="logout-btn" onclick="handleLogout()">üö™ ‡∫≠‡∫≠‡∫Å‡∫à‡∫≤‡∫Å‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</button>
        `;
    } else {
        displayElement.innerHTML = '';
    }
}

/**
 * ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function disableAllButtons() {
    console.log('üîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    
    // ‡∏õ‡∏¥‡∏î Input ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î
    const barcodeInput = document.getElementById('barcodeInput');
    if (barcodeInput) {
        barcodeInput.disabled = true;
        barcodeInput.placeholder = 'üîí ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫Å‡ªà‡∫≠‡∫ô';
    }
    
    // ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const buttons = [
        'saveButton',
        'debtButton',
        'onepayButton',
        'editDebtorButton',
        'clearSelectionBtn'
    ];
    
    buttons.forEach(btnId => {
        const btn = document.getElementById(btnId);
        if (btn) {
            btn.disabled = true;
            btn.style.pointerEvents = 'none';
            btn.style.opacity = '0.5';
        }
    });
}

/**
 * ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function enableAllButtons() {
    console.log('üîì ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    
    // ‡πÄ‡∏õ‡∏¥‡∏î Input ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î
    const barcodeInput = document.getElementById('barcodeInput');
    if (barcodeInput) {
        barcodeInput.disabled = false;
        barcodeInput.placeholder = '‡∫™‡∫∞‡ªÅ‡∫Å‡∫ô‡∫ö‡∫≤‡ªÇ‡∫Ñ‡∫î ‡∫´‡∫º‡∫∑ ‡∫û‡∫¥‡∫°‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫™‡∫¥‡∫ô‡∫Ñ‡ªâ‡∫≤...';
        barcodeInput.focus();
    }
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const buttons = [
        'saveButton',
        'debtButton',
        'onepayButton',
        'editDebtorButton'
    ];
    
    buttons.forEach(btnId => {
        const btn = document.getElementById(btnId);
        if (btn) {
            btn.disabled = false;
            btn.style.pointerEvents = 'auto';
            btn.style.opacity = '1';
        }
    });
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏° Save ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    updateSaveButtonState();
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Logout
 */
/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Logout
 */
function handleLogout() {
    if (!confirm('‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫≠‡∫≠‡∫Å‡∫à‡∫≤‡∫Å‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫ö‡ªç?')) return;
    
    console.log('üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö');
    
    // ‡∏•‡∏ö Session
    localStorage.removeItem(LOGIN_SESSION_KEY);
    currentLoginSession = null;
    isLoggedIn = false;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    showMessage('‚úÖ ‡∫≠‡∫≠‡∫Å‡∫à‡∫≤‡∫Å‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫™‡ªç‡∫≤‡ªÄ‡∫•‡∫±‡∫î', 'success');
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    disableAllButtons();
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const displayElement = document.getElementById('currentUserDisplay');
    if (displayElement) {
        displayElement.innerHTML = '';
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á Login Modal ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î
    setTimeout(() => {
        showLoginModal();
    }, 1000);
}

console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏∞‡∏ö‡∏ö Login/Logout ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');



    </script>
</body>
</html>